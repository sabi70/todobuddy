{"ast":null,"code":"import axios from \"axios\";\nimport BarChart from \"@/components/BarChart.vue\";\nexport default {\n  name: \"StatisticView\",\n  components: {\n    BarChart\n  },\n  data() {\n    return {\n      USERS_LIST_URL: \"http://192.168.1.115:8000/auth/users/all/\",\n      usersList: null,\n      chart: null,\n      usernames: [],\n      taskSum: [],\n      userStats: {\n        completed: null,\n        notCompleted: null\n      }\n    };\n  },\n  methods: {\n    async getUsers() {\n      try {\n        const response = await axios.get(this.USERS_LIST_URL);\n        if (response.status == 200) {\n          const apiData = response.data;\n          console.log(apiData.map(item => item.username));\n        }\n      } catch (err) {\n        console.log(this.data.datasets[0].data);\n      }\n    }\n  },\n  async mounted() {\n    await this.getUsers();\n  }\n};","map":{"version":3,"names":["axios","BarChart","name","components","data","USERS_LIST_URL","usersList","chart","usernames","taskSum","userStats","completed","notCompleted","methods","getUsers","response","get","status","apiData","console","log","map","item","username","err","datasets","mounted"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/views/StatisticView.vue"],"sourcesContent":["<template>\n  <div v-for=\"item in usersList\" :key=\"item.pk\">\n    <div v-if=\"item.username == $route.params.username\">\n      <BarChart\n        :completed=\"item.completed\"\n        :notCompleted=\"item.not_completed\"\n        :username=\"item.username\"\n      ></BarChart>\n    </div>\n  </div>\n  <div>{{ usersList }}</div>\n  <div>{{ usernames }}</div>\n  <div>{{ taskSum }}</div>\n</template>\n<script>\nimport axios from \"axios\";\nimport BarChart from \"@/components/BarChart.vue\";\n\nexport default {\n  name: \"StatisticView\",\n  components: {\n    BarChart,\n  },\n  data() {\n    return {\n      USERS_LIST_URL: \"http://192.168.1.115:8000/auth/users/all/\",\n      usersList: null,\n      chart: null,\n      usernames: [],\n      taskSum: [],\n      userStats: {\n        completed: null,\n        notCompleted: null,\n      },\n    };\n  },\n  methods: {\n    async getUsers() {\n      try {\n        const response = await axios.get(this.USERS_LIST_URL);\n        if (response.status == 200) {\n          const apiData = response.data;\n          console.log(apiData.map((item) => item.username));\n        }\n      } catch (err) {\n        console.log(this.data.datasets[0].data);\n      }\n    },\n  },\n  async mounted() {\n    await this.getUsers();\n  },\n};\n</script>\n<style>\ncanvas {\n  width: auto;\n  height: auto;\n}\n</style>\n"],"mappings":"AAeA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,2BAA2B;AAEhD,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,2CAA2C;MAC3DC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;QACTC,SAAS,EAAE,IAAI;QACfC,YAAY,EAAE;MAChB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,IAAI,CAACX,cAAc,CAAC;QACrD,IAAIU,QAAQ,CAACE,MAAK,IAAK,GAAG,EAAE;UAC1B,MAAMC,OAAM,GAAIH,QAAQ,CAACX,IAAI;UAC7Be,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,CAAC;QACnD;MACF,EAAE,OAAOC,GAAG,EAAE;QACZL,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,IAAI,CAACqB,QAAQ,CAAC,CAAC,CAAC,CAACrB,IAAI,CAAC;MACzC;IACF;EACF,CAAC;EACD,MAAMsB,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACZ,QAAQ,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}