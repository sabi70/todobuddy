{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport BarChart from \"@/components/BarChart.vue\";\nimport { Chart, registerables } from \"chart.js\";\nChart.register(...registerables);\nexport default {\n  name: \"StatisticView\",\n  components: {\n    BarChart\n  },\n  data() {\n    return {\n      USERS_LIST_URL: \"http://192.168.1.115:8000/auth/users/all/\",\n      usersList: null,\n      chart: null,\n      usernames: [],\n      taskSum: [],\n      userStats: {\n        completed: null,\n        notCompleted: null\n      },\n      data: {\n        labels: [],\n        datasets: [{\n          backgroundColor: [\"#1abc9c\", \"#9b59b6\", \"#d35400\", \"#34495e\", \"#f1c40f\", \"#3498db\", \"#c0392b\", \"#16a085\", \"#f39c12\", \"#2c3e50\", \"#e74c3c\"],\n          data: []\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: \"bottom\"\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    async getUsers() {\n      try {\n        const response = await axios.get(this.USERS_LIST_URL);\n        if (response.status == 200) {\n          const apiData = response.data;\n          this.data.labels = apiData.map(item => item.username);\n          for (let i = 0; i < this.usersList.length; i++) {\n            const taskSum = this.usersList[i].completed + this.usersList[i].not_completed;\n            if (taskSum == 0) {\n              this.taskSum.push(1);\n            } else {\n              this.taskSum.push(taskSum);\n            }\n          }\n          this.data.datasets[0].data = this.taskSum;\n          if (this.chart) {\n            this.chart.update();\n          } else {\n            this.createChart();\n          }\n        }\n      } catch (err) {\n        alert(err);\n      }\n    },\n    createChart() {\n      const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n      this.chart = new Chart(ctx, {\n        type: \"doughnut\",\n        data: this.chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: \"bottom\"\n            },\n            title: {\n              display: true,\n              text: \"Some Text\"\n            }\n          }\n        }\n      });\n    }\n  },\n  async mounted() {\n    await this.getUsers();\n  }\n};","map":{"version":3,"names":["axios","BarChart","Chart","registerables","register","name","components","data","USERS_LIST_URL","usersList","chart","usernames","taskSum","userStats","completed","notCompleted","labels","datasets","backgroundColor","options","responsive","maintainAspectRatio","plugins","legend","position","methods","getUsers","response","get","status","apiData","map","item","username","i","length","not_completed","push","update","createChart","err","alert","ctx","document","getElementById","getContext","type","chartData","title","display","text","mounted"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/views/StatisticView.vue"],"sourcesContent":["<template>\n  <div v-for=\"item in usersList\" :key=\"item.pk\">\n    <div v-if=\"item.username == $route.params.username\">\n      <BarChart\n        :completed=\"item.completed\"\n        :notCompleted=\"item.not_completed\"\n        :username=\"item.username\"\n      ></BarChart>\n    </div>\n  </div>\n  <div>\n    <canvas id=\"myChart\"></canvas>\n  </div>\n  <div>{{ usersList }}</div>\n  <div>{{ usernames }}</div>\n  <div>{{ taskSum }}</div>\n</template>\n<script>\nimport axios from \"axios\";\nimport BarChart from \"@/components/BarChart.vue\";\nimport { Chart, registerables } from \"chart.js\";\nChart.register(...registerables);\n\nexport default {\n  name: \"StatisticView\",\n  components: {\n    BarChart,\n  },\n  data() {\n    return {\n      USERS_LIST_URL: \"http://192.168.1.115:8000/auth/users/all/\",\n      usersList: null,\n      chart: null,\n      usernames: [],\n      taskSum: [],\n      userStats: {\n        completed: null,\n        notCompleted: null,\n      },\n      data: {\n        labels: [],\n        datasets: [\n          {\n            backgroundColor: [\n              \"#1abc9c\",\n              \"#9b59b6\",\n              \"#d35400\",\n              \"#34495e\",\n              \"#f1c40f\",\n              \"#3498db\",\n              \"#c0392b\",\n              \"#16a085\",\n              \"#f39c12\",\n              \"#2c3e50\",\n              \"#e74c3c\",\n            ],\n            data: [],\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    };\n  },\n  methods: {\n    async getUsers() {\n      try {\n        const response = await axios.get(this.USERS_LIST_URL);\n        if (response.status == 200) {\n          const apiData = response.data;\n          this.data.labels = apiData.map((item) => item.username);\n          for (let i = 0; i < this.usersList.length; i++) {\n            const taskSum =\n              this.usersList[i].completed + this.usersList[i].not_completed;\n            if (taskSum == 0) {\n              this.taskSum.push(1);\n            } else {\n              this.taskSum.push(taskSum);\n            }\n          }\n          this.data.datasets[0].data = this.taskSum;\n          if (this.chart) {\n            this.chart.update();\n          } else {\n            this.createChart();\n          }\n        }\n      } catch (err) {\n        alert(err);\n      }\n    },\n    createChart() {\n      const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n      this.chart = new Chart(ctx, {\n        type: \"doughnut\",\n        data: this.chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: \"bottom\",\n            },\n            title: {\n              display: true,\n              text: \"Some Text\",\n            },\n          },\n        },\n      });\n    },\n  },\n  async mounted() {\n    await this.getUsers();\n  },\n};\n</script>\n<style>\ncanvas {\n  width: auto;\n  height: auto;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}