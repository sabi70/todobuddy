{"ast":null,"code":"/**\n* @vue/compiler-core v3.5.6\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array-buffer.detached.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\");\nrequire(\"core-js/modules/es.set.difference.v2.js\");\nrequire(\"core-js/modules/es.set.intersection.v2.js\");\nrequire(\"core-js/modules/es.set.is-disjoint-from.v2.js\");\nrequire(\"core-js/modules/es.set.is-subset-of.v2.js\");\nrequire(\"core-js/modules/es.set.is-superset-of.v2.js\");\nrequire(\"core-js/modules/es.set.symmetric-difference.v2.js\");\nrequire(\"core-js/modules/es.set.union.v2.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar shared = require('@vue/shared');\nvar decode_js = require('entities/lib/decode.js');\nvar parser = require('@babel/parser');\nvar estreeWalker = require('estree-walker');\nvar sourceMapJs = require('source-map-js');\nconst FRAGMENT = Symbol(``);\nconst TELEPORT = Symbol(``);\nconst SUSPENSE = Symbol(``);\nconst KEEP_ALIVE = Symbol(``);\nconst BASE_TRANSITION = Symbol(``);\nconst OPEN_BLOCK = Symbol(``);\nconst CREATE_BLOCK = Symbol(``);\nconst CREATE_ELEMENT_BLOCK = Symbol(``);\nconst CREATE_VNODE = Symbol(``);\nconst CREATE_ELEMENT_VNODE = Symbol(``);\nconst CREATE_COMMENT = Symbol(``);\nconst CREATE_TEXT = Symbol(``);\nconst CREATE_STATIC = Symbol(``);\nconst RESOLVE_COMPONENT = Symbol(``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(``);\nconst RESOLVE_DIRECTIVE = Symbol(``);\nconst RESOLVE_FILTER = Symbol(``);\nconst WITH_DIRECTIVES = Symbol(``);\nconst RENDER_LIST = Symbol(``);\nconst RENDER_SLOT = Symbol(``);\nconst CREATE_SLOTS = Symbol(``);\nconst TO_DISPLAY_STRING = Symbol(``);\nconst MERGE_PROPS = Symbol(``);\nconst NORMALIZE_CLASS = Symbol(``);\nconst NORMALIZE_STYLE = Symbol(``);\nconst NORMALIZE_PROPS = Symbol(``);\nconst GUARD_REACTIVE_PROPS = Symbol(``);\nconst TO_HANDLERS = Symbol(``);\nconst CAMELIZE = Symbol(``);\nconst CAPITALIZE = Symbol(``);\nconst TO_HANDLER_KEY = Symbol(``);\nconst SET_BLOCK_TRACKING = Symbol(``);\nconst PUSH_SCOPE_ID = Symbol(``);\nconst POP_SCOPE_ID = Symbol(``);\nconst WITH_CTX = Symbol(``);\nconst UNREF = Symbol(``);\nconst IS_REF = Symbol(``);\nconst WITH_MEMO = Symbol(``);\nconst IS_MEMO_SAME = Symbol(``);\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\n    helperNameMap[s] = helpers[s];\n  });\n}\nconst Namespaces = {\n  \"HTML\": 0,\n  \"0\": \"HTML\",\n  \"SVG\": 1,\n  \"1\": \"SVG\",\n  \"MATH_ML\": 2,\n  \"2\": \"MATH_ML\"\n};\nconst NodeTypes = {\n  \"ROOT\": 0,\n  \"0\": \"ROOT\",\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"TEXT\": 2,\n  \"2\": \"TEXT\",\n  \"COMMENT\": 3,\n  \"3\": \"COMMENT\",\n  \"SIMPLE_EXPRESSION\": 4,\n  \"4\": \"SIMPLE_EXPRESSION\",\n  \"INTERPOLATION\": 5,\n  \"5\": \"INTERPOLATION\",\n  \"ATTRIBUTE\": 6,\n  \"6\": \"ATTRIBUTE\",\n  \"DIRECTIVE\": 7,\n  \"7\": \"DIRECTIVE\",\n  \"COMPOUND_EXPRESSION\": 8,\n  \"8\": \"COMPOUND_EXPRESSION\",\n  \"IF\": 9,\n  \"9\": \"IF\",\n  \"IF_BRANCH\": 10,\n  \"10\": \"IF_BRANCH\",\n  \"FOR\": 11,\n  \"11\": \"FOR\",\n  \"TEXT_CALL\": 12,\n  \"12\": \"TEXT_CALL\",\n  \"VNODE_CALL\": 13,\n  \"13\": \"VNODE_CALL\",\n  \"JS_CALL_EXPRESSION\": 14,\n  \"14\": \"JS_CALL_EXPRESSION\",\n  \"JS_OBJECT_EXPRESSION\": 15,\n  \"15\": \"JS_OBJECT_EXPRESSION\",\n  \"JS_PROPERTY\": 16,\n  \"16\": \"JS_PROPERTY\",\n  \"JS_ARRAY_EXPRESSION\": 17,\n  \"17\": \"JS_ARRAY_EXPRESSION\",\n  \"JS_FUNCTION_EXPRESSION\": 18,\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\n  \"JS_CONDITIONAL_EXPRESSION\": 19,\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\n  \"JS_CACHE_EXPRESSION\": 20,\n  \"20\": \"JS_CACHE_EXPRESSION\",\n  \"JS_BLOCK_STATEMENT\": 21,\n  \"21\": \"JS_BLOCK_STATEMENT\",\n  \"JS_TEMPLATE_LITERAL\": 22,\n  \"22\": \"JS_TEMPLATE_LITERAL\",\n  \"JS_IF_STATEMENT\": 23,\n  \"23\": \"JS_IF_STATEMENT\",\n  \"JS_ASSIGNMENT_EXPRESSION\": 24,\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\n  \"JS_SEQUENCE_EXPRESSION\": 25,\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\n  \"JS_RETURN_STATEMENT\": 26,\n  \"26\": \"JS_RETURN_STATEMENT\"\n};\nconst ElementTypes = {\n  \"ELEMENT\": 0,\n  \"0\": \"ELEMENT\",\n  \"COMPONENT\": 1,\n  \"1\": \"COMPONENT\",\n  \"SLOT\": 2,\n  \"2\": \"SLOT\",\n  \"TEMPLATE\": 3,\n  \"3\": \"TEMPLATE\"\n};\nconst ConstantTypes = {\n  \"NOT_CONSTANT\": 0,\n  \"0\": \"NOT_CONSTANT\",\n  \"CAN_SKIP_PATCH\": 1,\n  \"1\": \"CAN_SKIP_PATCH\",\n  \"CAN_CACHE\": 2,\n  \"2\": \"CAN_CACHE\",\n  \"CAN_STRINGIFY\": 3,\n  \"3\": \"CAN_STRINGIFY\"\n};\nconst locStub = {\n  start: {\n    line: 1,\n    column: 1,\n    offset: 0\n  },\n  end: {\n    line: 1,\n    column: 1,\n    offset: 0\n  },\n  source: \"\"\n};\nfunction createRoot(children, source = \"\") {\n  return {\n    type: 0,\n    source,\n    children,\n    helpers: /* @__PURE__ */new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: [],\n    temps: 0,\n    codegenNode: void 0,\n    loc: locStub\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: shared.isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: shared.isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, needPauseTracking = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    needPauseTracking,\n    needArraySpread: false,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, {\n  helper,\n  removeHelper,\n  inSSR\n}) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\nfunction isTagStartChar(c) {\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\n}\nfunction isWhitespace(c) {\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\n}\nfunction isEndOfTagSection(c) {\n  return c === 47 || c === 62 || isWhitespace(c);\n}\nfunction toCharCodes(str) {\n  const ret = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n}\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([60, 47, 116, 101, 120, 116, 97, 114, 101, 97])\n  // `</textarea\n};\nclass Tokenizer {\n  constructor(stack, cbs) {\n    this.stack = stack;\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = 1;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = 1;\n    /** For special parsing behavior inside of script and style tags. */\n    this.inRCDATA = false;\n    /** For disabling RCDATA tags handling */\n    this.inXML = false;\n    /** For disabling interpolation parsing in v-pre */\n    this.inVPre = false;\n    /** Record newline positions for fast line / column calculation */\n    this.newlines = [];\n    this.mode = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n    this.delimiterIndex = -1;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n    {\n      this.entityDecoder = new decode_js.EntityDecoder(decode_js.htmlDecodeTree, (cp, consumed) => this.emitCodePoint(cp, consumed));\n    }\n  }\n  get inSFCRoot() {\n    return this.mode === 2 && this.stack.length === 0;\n  }\n  reset() {\n    this.state = 1;\n    this.mode = 0;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.currentSequence = void 0;\n    this.newlines.length = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n  }\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  getPos(index) {\n    let line = 1;\n    let column = index + 1;\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i];\n      if (index > newlineIndex) {\n        line = i + 2;\n        column = index - newlineIndex;\n        break;\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index\n    };\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.index + 1);\n  }\n  stateText(c) {\n    if (c === 60) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (c === 38) {\n      this.startEntity();\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = 2;\n      this.delimiterIndex = 0;\n      this.stateInterpolationOpen(c);\n    }\n  }\n  stateInterpolationOpen(c) {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length;\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start);\n        }\n        this.state = 3;\n        this.sectionStart = start;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else if (this.inRCDATA) {\n      this.state = 32;\n      this.stateInRCDATA(c);\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInterpolation(c) {\n    if (c === this.delimiterClose[0]) {\n      this.state = 4;\n      this.delimiterIndex = 0;\n      this.stateInterpolationClose(c);\n    }\n  }\n  stateInterpolationClose(c) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\n        if (this.inRCDATA) {\n          this.state = 32;\n        } else {\n          this.state = 1;\n        }\n        this.sectionStart = this.index + 1;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else {\n      this.state = 3;\n      this.stateInterpolation(c);\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ?\n    // If we are at the end of the sequence, make sure the tag name has ended\n    isEndOfTagSection(c) :\n    // Otherwise, do a case-insensitive comparison\n    (c | 32) === this.currentSequence[this.sequenceIndex];\n    if (!isMatch) {\n      this.inRCDATA = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = 6;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  stateInRCDATA(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === 62 || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        this.inRCDATA = false;\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\n        if (c === 38) {\n          this.startEntity();\n        } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n          this.state = 2;\n          this.delimiterIndex = 0;\n          this.stateInterpolationOpen(c);\n        }\n      } else if (this.fastForwardTo(60)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === 60);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = 28;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = 23;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index);\n      if (cc === 10) {\n        this.newlines.push(this.index);\n      }\n      if (cc === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = 1;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  startSpecial(sequence, offset) {\n    this.enterRCDATA(sequence, offset);\n    this.state = 31;\n  }\n  enterRCDATA(sequence, offset) {\n    this.inRCDATA = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n  }\n  stateBeforeTagName(c) {\n    if (c === 33) {\n      this.state = 22;\n      this.sectionStart = this.index + 1;\n    } else if (c === 63) {\n      this.state = 24;\n      this.sectionStart = this.index + 1;\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index;\n      if (this.mode === 0) {\n        this.state = 6;\n      } else if (this.inSFCRoot) {\n        this.state = 34;\n      } else if (!this.inXML) {\n        if (c === 116) {\n          this.state = 30;\n        } else {\n          this.state = c === 115 ? 29 : 6;\n        }\n      } else {\n        this.state = 6;\n      }\n    } else if (c === 47) {\n      this.state = 8;\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c);\n    }\n  }\n  stateInSFCRootTagName(c) {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index);\n      if (tag !== \"template\") {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\n      }\n      this.handleTagName(c);\n    }\n  }\n  handleTagName(c) {\n    this.cbs.onopentagname(this.sectionStart, this.index);\n    this.sectionStart = -1;\n    this.state = 11;\n    this.stateBeforeAttrName(c);\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c)) ;else if (c === 62) {\n      {\n        this.cbs.onerr(14, this.index);\n      }\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = isTagStartChar(c) ? 9 : 27;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === 62 || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = 10;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === 62) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttrName(c) {\n    if (c === 62) {\n      this.cbs.onopentagend(this.index);\n      if (this.inRCDATA) {\n        this.state = 32;\n      } else {\n        this.state = 1;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === 47) {\n      this.state = 7;\n      if (this.peek() !== 62) {\n        this.cbs.onerr(22, this.index);\n      }\n    } else if (c === 60 && this.peek() === 47) {\n      this.cbs.onopentagend(this.index);\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!isWhitespace(c)) {\n      if (c === 61) {\n        this.cbs.onerr(19, this.index);\n      }\n      this.handleAttrStart(c);\n    }\n  }\n  handleAttrStart(c) {\n    if (c === 118 && this.peek() === 45) {\n      this.state = 13;\n      this.sectionStart = this.index;\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\n      this.cbs.ondirname(this.index, this.index + 1);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 12;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === 62) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n      this.inRCDATA = false;\n    } else if (!isWhitespace(c)) {\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    }\n  }\n  stateInAttrName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 34 || c === 39 || c === 60) {\n      this.cbs.onerr(17, this.index);\n    }\n  }\n  stateInDirName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 58) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else if (c === 46) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDirArg(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 91) {\n      this.state = 15;\n    } else if (c === 46) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDynamicDirArg(c) {\n    if (c === 93) {\n      this.state = 14;\n    } else if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\n      this.handleAttrNameEnd(c);\n      {\n        this.cbs.onerr(27, this.index);\n      }\n    }\n  }\n  stateInDirModifier(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 46) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.sectionStart = this.index + 1;\n    }\n  }\n  handleAttrNameEnd(c) {\n    this.sectionStart = this.index;\n    this.state = 17;\n    this.cbs.onattribnameend(this.index);\n    this.stateAfterAttrName(c);\n  }\n  stateAfterAttrName(c) {\n    if (c === 61) {\n      this.state = 18;\n    } else if (c === 47 || c === 62) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.handleAttrStart(c);\n    }\n  }\n  stateBeforeAttrValue(c) {\n    if (c === 34) {\n      this.state = 19;\n      this.sectionStart = this.index + 1;\n    } else if (c === 39) {\n      this.state = 20;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = 21;\n      this.stateInAttrValueNoQuotes(c);\n    }\n  }\n  handleInAttrValue(c, quote) {\n    if (c === quote || false) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(quote === 34 ? 3 : 2, this.index + 1);\n      this.state = 11;\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateInAttrValueDoubleQuotes(c) {\n    this.handleInAttrValue(c, 34);\n  }\n  stateInAttrValueSingleQuotes(c) {\n    this.handleInAttrValue(c, 39);\n  }\n  stateInAttrValueNoQuotes(c) {\n    if (isWhitespace(c) || c === 62) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(1, this.index);\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\n      this.cbs.onerr(18, this.index);\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === 91) {\n      this.state = 26;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === 45 ? 25 : 23;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === 45) {\n      this.state = 28;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 23;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.oncomment(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n    {\n      this.baseState = this.state;\n      this.state = 33;\n      this.entityStart = this.index;\n      this.entityDecoder.startEntity(this.baseState === 1 || this.baseState === 32 ? decode_js.DecodingMode.Legacy : decode_js.DecodingMode.Attribute);\n    }\n  }\n  stateInEntity() {\n    {\n      const length = this.entityDecoder.write(this.buffer, this.index);\n      if (length >= 0) {\n        this.state = this.baseState;\n        if (length === 0) {\n          this.index = this.entityStart;\n        }\n      } else {\n        this.index = this.buffer.length - 1;\n      }\n    }\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse(input) {\n    this.buffer = input;\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index);\n      if (c === 10) {\n        this.newlines.push(this.index);\n      }\n      switch (this.state) {\n        case 1:\n          {\n            this.stateText(c);\n            break;\n          }\n        case 2:\n          {\n            this.stateInterpolationOpen(c);\n            break;\n          }\n        case 3:\n          {\n            this.stateInterpolation(c);\n            break;\n          }\n        case 4:\n          {\n            this.stateInterpolationClose(c);\n            break;\n          }\n        case 31:\n          {\n            this.stateSpecialStartSequence(c);\n            break;\n          }\n        case 32:\n          {\n            this.stateInRCDATA(c);\n            break;\n          }\n        case 26:\n          {\n            this.stateCDATASequence(c);\n            break;\n          }\n        case 19:\n          {\n            this.stateInAttrValueDoubleQuotes(c);\n            break;\n          }\n        case 12:\n          {\n            this.stateInAttrName(c);\n            break;\n          }\n        case 13:\n          {\n            this.stateInDirName(c);\n            break;\n          }\n        case 14:\n          {\n            this.stateInDirArg(c);\n            break;\n          }\n        case 15:\n          {\n            this.stateInDynamicDirArg(c);\n            break;\n          }\n        case 16:\n          {\n            this.stateInDirModifier(c);\n            break;\n          }\n        case 28:\n          {\n            this.stateInCommentLike(c);\n            break;\n          }\n        case 27:\n          {\n            this.stateInSpecialComment(c);\n            break;\n          }\n        case 11:\n          {\n            this.stateBeforeAttrName(c);\n            break;\n          }\n        case 6:\n          {\n            this.stateInTagName(c);\n            break;\n          }\n        case 34:\n          {\n            this.stateInSFCRootTagName(c);\n            break;\n          }\n        case 9:\n          {\n            this.stateInClosingTagName(c);\n            break;\n          }\n        case 5:\n          {\n            this.stateBeforeTagName(c);\n            break;\n          }\n        case 17:\n          {\n            this.stateAfterAttrName(c);\n            break;\n          }\n        case 20:\n          {\n            this.stateInAttrValueSingleQuotes(c);\n            break;\n          }\n        case 18:\n          {\n            this.stateBeforeAttrValue(c);\n            break;\n          }\n        case 8:\n          {\n            this.stateBeforeClosingTagName(c);\n            break;\n          }\n        case 10:\n          {\n            this.stateAfterClosingTagName(c);\n            break;\n          }\n        case 29:\n          {\n            this.stateBeforeSpecialS(c);\n            break;\n          }\n        case 30:\n          {\n            this.stateBeforeSpecialT(c);\n            break;\n          }\n        case 21:\n          {\n            this.stateInAttrValueNoQuotes(c);\n            break;\n          }\n        case 7:\n          {\n            this.stateInSelfClosingTag(c);\n            break;\n          }\n        case 23:\n          {\n            this.stateInDeclaration(c);\n            break;\n          }\n        case 22:\n          {\n            this.stateBeforeDeclaration(c);\n            break;\n          }\n        case 25:\n          {\n            this.stateBeforeComment(c);\n            break;\n          }\n        case 24:\n          {\n            this.stateInProcessingInstruction(c);\n            break;\n          }\n        case 33:\n          {\n            this.stateInEntity();\n            break;\n          }\n      }\n      this.index++;\n    }\n    this.cleanup();\n    this.finish();\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.sectionStart !== this.index) {\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  finish() {\n    if (this.state === 33) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === 28) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex);\n      }\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9) ;else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    {\n      if (this.baseState !== 1 && this.baseState !== 32) {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.onattribdata(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.onattribentity(decode_js.fromCodePoint(cp), this.entityStart, this.sectionStart);\n      } else {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.ontext(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.ontextentity(decode_js.fromCodePoint(cp), this.entityStart, this.sectionStart);\n      }\n    }\n  }\n}\nconst CompilerDeprecationTypes = {\n  \"COMPILER_IS_ON_ELEMENT\": \"COMPILER_IS_ON_ELEMENT\",\n  \"COMPILER_V_BIND_SYNC\": \"COMPILER_V_BIND_SYNC\",\n  \"COMPILER_V_BIND_OBJECT_ORDER\": \"COMPILER_V_BIND_OBJECT_ORDER\",\n  \"COMPILER_V_ON_NATIVE\": \"COMPILER_V_ON_NATIVE\",\n  \"COMPILER_V_IF_V_FOR_PRECEDENCE\": \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n  \"COMPILER_NATIVE_TEMPLATE\": \"COMPILER_NATIVE_TEMPLATE\",\n  \"COMPILER_INLINE_TEMPLATE\": \"COMPILER_INLINE_TEMPLATE\",\n  \"COMPILER_FILTERS\": \"COMPILER_FILTERS\"\n};\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: key => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTERS\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, {\n  compatConfig\n}) {\n  const value = compatConfig && compatConfig[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const {\n    message,\n    link\n  } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc) err.loc = loc;\n  context.onWarn(err);\n}\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``);\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst ErrorCodes = {\n  \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\": 0,\n  \"0\": \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\",\n  \"CDATA_IN_HTML_CONTENT\": 1,\n  \"1\": \"CDATA_IN_HTML_CONTENT\",\n  \"DUPLICATE_ATTRIBUTE\": 2,\n  \"2\": \"DUPLICATE_ATTRIBUTE\",\n  \"END_TAG_WITH_ATTRIBUTES\": 3,\n  \"3\": \"END_TAG_WITH_ATTRIBUTES\",\n  \"END_TAG_WITH_TRAILING_SOLIDUS\": 4,\n  \"4\": \"END_TAG_WITH_TRAILING_SOLIDUS\",\n  \"EOF_BEFORE_TAG_NAME\": 5,\n  \"5\": \"EOF_BEFORE_TAG_NAME\",\n  \"EOF_IN_CDATA\": 6,\n  \"6\": \"EOF_IN_CDATA\",\n  \"EOF_IN_COMMENT\": 7,\n  \"7\": \"EOF_IN_COMMENT\",\n  \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\": 8,\n  \"8\": \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\",\n  \"EOF_IN_TAG\": 9,\n  \"9\": \"EOF_IN_TAG\",\n  \"INCORRECTLY_CLOSED_COMMENT\": 10,\n  \"10\": \"INCORRECTLY_CLOSED_COMMENT\",\n  \"INCORRECTLY_OPENED_COMMENT\": 11,\n  \"11\": \"INCORRECTLY_OPENED_COMMENT\",\n  \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\": 12,\n  \"12\": \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\",\n  \"MISSING_ATTRIBUTE_VALUE\": 13,\n  \"13\": \"MISSING_ATTRIBUTE_VALUE\",\n  \"MISSING_END_TAG_NAME\": 14,\n  \"14\": \"MISSING_END_TAG_NAME\",\n  \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\": 15,\n  \"15\": \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\",\n  \"NESTED_COMMENT\": 16,\n  \"16\": \"NESTED_COMMENT\",\n  \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\": 17,\n  \"17\": \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\": 18,\n  \"18\": \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\",\n  \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\": 19,\n  \"19\": \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_NULL_CHARACTER\": 20,\n  \"20\": \"UNEXPECTED_NULL_CHARACTER\",\n  \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\": 21,\n  \"21\": \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\",\n  \"UNEXPECTED_SOLIDUS_IN_TAG\": 22,\n  \"22\": \"UNEXPECTED_SOLIDUS_IN_TAG\",\n  \"X_INVALID_END_TAG\": 23,\n  \"23\": \"X_INVALID_END_TAG\",\n  \"X_MISSING_END_TAG\": 24,\n  \"24\": \"X_MISSING_END_TAG\",\n  \"X_MISSING_INTERPOLATION_END\": 25,\n  \"25\": \"X_MISSING_INTERPOLATION_END\",\n  \"X_MISSING_DIRECTIVE_NAME\": 26,\n  \"26\": \"X_MISSING_DIRECTIVE_NAME\",\n  \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\": 27,\n  \"27\": \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\",\n  \"X_V_IF_NO_EXPRESSION\": 28,\n  \"28\": \"X_V_IF_NO_EXPRESSION\",\n  \"X_V_IF_SAME_KEY\": 29,\n  \"29\": \"X_V_IF_SAME_KEY\",\n  \"X_V_ELSE_NO_ADJACENT_IF\": 30,\n  \"30\": \"X_V_ELSE_NO_ADJACENT_IF\",\n  \"X_V_FOR_NO_EXPRESSION\": 31,\n  \"31\": \"X_V_FOR_NO_EXPRESSION\",\n  \"X_V_FOR_MALFORMED_EXPRESSION\": 32,\n  \"32\": \"X_V_FOR_MALFORMED_EXPRESSION\",\n  \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\": 33,\n  \"33\": \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\",\n  \"X_V_BIND_NO_EXPRESSION\": 34,\n  \"34\": \"X_V_BIND_NO_EXPRESSION\",\n  \"X_V_ON_NO_EXPRESSION\": 35,\n  \"35\": \"X_V_ON_NO_EXPRESSION\",\n  \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\": 36,\n  \"36\": \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\",\n  \"X_V_SLOT_MIXED_SLOT_USAGE\": 37,\n  \"37\": \"X_V_SLOT_MIXED_SLOT_USAGE\",\n  \"X_V_SLOT_DUPLICATE_SLOT_NAMES\": 38,\n  \"38\": \"X_V_SLOT_DUPLICATE_SLOT_NAMES\",\n  \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\": 39,\n  \"39\": \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\",\n  \"X_V_SLOT_MISPLACED\": 40,\n  \"40\": \"X_V_SLOT_MISPLACED\",\n  \"X_V_MODEL_NO_EXPRESSION\": 41,\n  \"41\": \"X_V_MODEL_NO_EXPRESSION\",\n  \"X_V_MODEL_MALFORMED_EXPRESSION\": 42,\n  \"42\": \"X_V_MODEL_MALFORMED_EXPRESSION\",\n  \"X_V_MODEL_ON_SCOPE_VARIABLE\": 43,\n  \"43\": \"X_V_MODEL_ON_SCOPE_VARIABLE\",\n  \"X_V_MODEL_ON_PROPS\": 44,\n  \"44\": \"X_V_MODEL_ON_PROPS\",\n  \"X_INVALID_EXPRESSION\": 45,\n  \"45\": \"X_INVALID_EXPRESSION\",\n  \"X_KEEP_ALIVE_INVALID_CHILDREN\": 46,\n  \"46\": \"X_KEEP_ALIVE_INVALID_CHILDREN\",\n  \"X_PREFIX_ID_NOT_SUPPORTED\": 47,\n  \"47\": \"X_PREFIX_ID_NOT_SUPPORTED\",\n  \"X_MODULE_MODE_NOT_SUPPORTED\": 48,\n  \"48\": \"X_MODULE_MODE_NOT_SUPPORTED\",\n  \"X_CACHE_HANDLER_NOT_SUPPORTED\": 49,\n  \"49\": \"X_CACHE_HANDLER_NOT_SUPPORTED\",\n  \"X_SCOPE_ID_NOT_SUPPORTED\": 50,\n  \"50\": \"X_SCOPE_ID_NOT_SUPPORTED\",\n  \"X_VNODE_HOOKS\": 51,\n  \"51\": \"X_VNODE_HOOKS\",\n  \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\": 52,\n  \"52\": \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\",\n  \"__EXTEND_POINT__\": 53,\n  \"53\": \"__EXTEND_POINT__\"\n};\nconst errorMessages = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [53]: ``\n};\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */Object.create(null)) {\n  const rootExp = root.type === \"Program\" ? root.body[0].type === \"ExpressionStatement\" && root.body[0].expression : root;\n  estreeWalker.walk(root, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\n        return this.skip();\n      }\n      if (node.type === \"Identifier\") {\n        const isLocal = !!knownIds[node.name];\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\n        if (includeAll || isRefed && !isLocal) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\n        }\n      } else if (node.type === \"ObjectProperty\" &&\n      // eslint-disable-next-line no-restricted-syntax\n      (parent == null ? void 0 : parent.type) === \"ObjectPattern\") {\n        node.inPattern = true;\n      } else if (isFunctionType(node)) {\n        if (node.scopeIds) {\n          node.scopeIds.forEach(id => markKnownIds(id, knownIds));\n        } else {\n          walkFunctionParams(node, id => markScopeIdentifier(node, id, knownIds));\n        }\n      } else if (node.type === \"BlockStatement\") {\n        if (node.scopeIds) {\n          node.scopeIds.forEach(id => markKnownIds(id, knownIds));\n        } else {\n          walkBlockDeclarations(node, id => markScopeIdentifier(node, id, knownIds));\n        }\n      } else if (node.type === \"CatchClause\" && node.param) {\n        for (const id of extractIdentifiers(node.param)) {\n          markScopeIdentifier(node, id, knownIds);\n        }\n      } else if (isForStatement(node)) {\n        walkForStatement(node, false, id => markScopeIdentifier(node, id, knownIds));\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--;\n          if (knownIds[id] === 0) {\n            delete knownIds[id];\n          }\n        }\n      }\n    }\n  });\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  if (!parent) {\n    return true;\n  }\n  if (id.name === \"arguments\") {\n    return false;\n  }\n  if (isReferenced(id, parent)) {\n    return true;\n  }\n  switch (parent.type) {\n    case \"AssignmentExpression\":\n    case \"AssignmentPattern\":\n      return true;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return isInDestructureAssignment(parent, parentStack);\n  }\n  return false;\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction isInNewExpression(parentStack) {\n  let i = parentStack.length;\n  while (i--) {\n    const p = parentStack[i];\n    if (p.type === \"NewExpression\") {\n      return true;\n    } else if (p.type !== \"MemberExpression\") {\n      break;\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare) continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id) continue;\n      onIdent(stmt.id);\n    } else if (isForStatement(stmt)) {\n      walkForStatement(stmt, true, onIdent);\n    }\n  }\n}\nfunction isForStatement(stmt) {\n  return stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\";\n}\nfunction walkForStatement(stmt, isVar, onIdent) {\n  const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n  if (variable && variable.type === \"VariableDeclaration\" && (variable.kind === \"var\" ? isVar : !isVar)) {\n    for (const decl of variable.declarations) {\n      for (const id of extractIdentifiers(decl.id)) {\n        onIdent(id);\n      }\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach(element => {\n        if (element) extractIdentifiers(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nfunction markKnownIds(name, knownIds) {\n  if (name in knownIds) {\n    knownIds[name]++;\n  } else {\n    knownIds[name] = 1;\n  }\n}\nfunction markScopeIdentifier(node, child, knownIds) {\n  const {\n    name\n  } = child;\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return;\n  }\n  markKnownIds(name, knownIds);\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */new Set())).add(name);\n}\nconst isFunctionType = node => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = node => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case \"PrivateName\":\n      return false;\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return !grandparent;\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return false;\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      return parent.local === node;\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case \"ImportAttribute\":\n      return false;\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return false;\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case \"TSEnumMember\":\n      return parent.id !== node;\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n  }\n  return true;\n}\nconst TS_NODE_TYPES = [\"TSAsExpression\",\n// foo as number\n\"TSTypeAssertion\",\n// (<number>foo)\n\"TSNonNullExpression\",\n// foo!\n\"TSInstantiationExpression\",\n// foo<string>\n\"TSSatisfiesExpression\"\n// foo satisfies T\n];\nfunction unwrapTSNode(node) {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode(node.expression);\n  } else {\n    return node;\n  }\n}\nconst isStaticExp = p => p.type === 4 && p.isStatic;\nfunction isCoreComponent(tag) {\n  switch (tag) {\n    case \"Teleport\":\n    case \"teleport\":\n      return TELEPORT;\n    case \"Suspense\":\n    case \"suspense\":\n      return SUSPENSE;\n    case \"KeepAlive\":\n    case \"keep-alive\":\n      return KEEP_ALIVE;\n    case \"BaseTransition\":\n    case \"base-transition\":\n      return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w\\xA0-\\uFFFF]/;\nconst isSimpleIdentifier = name => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst getExpSource = exp => exp.type === 4 ? exp.content : exp.loc.source;\nconst isMemberExpressionBrowser = exp => {\n  const path = getExpSource(exp).trim().replace(whitespaceRE, s => s.trim());\n  let state = 0 /* inMemberExp */;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0 /* inMemberExp */:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1 /* inBrackets */;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2 /* inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1 /* inBrackets */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (! --currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* inParens */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (! --currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* inString */:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = (exp, context) => {\n  try {\n    let ret = exp.ast || parser.parseExpression(getExpSource(exp), {\n      plugins: context.expressionPlugins ? [...context.expressionPlugins, \"typescript\"] : [\"typescript\"]\n    });\n    ret = unwrapTSNode(ret);\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\" && ret.name !== \"undefined\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isMemberExpression = isMemberExpressionNode;\nconst fnExpRE = /^\\s*(async\\s*)?(\\([^)]*?\\)|[\\w$_]+)\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst isFnExpressionBrowser = exp => fnExpRE.test(getExpSource(exp));\nconst isFnExpressionNode = (exp, context) => {\n  try {\n    let ret = exp.ast || parser.parseExpression(getExpSource(exp), {\n      plugins: context.expressionPlugins ? [...context.expressionPlugins, \"typescript\"] : [\"typescript\"]\n    });\n    if (ret.type === \"Program\") {\n      ret = ret.body[0];\n      if (ret.type === \"ExpressionStatement\") {\n        ret = ret.expression;\n      }\n    }\n    ret = unwrapTSNode(ret);\n    return ret.type === \"FunctionExpression\" || ret.type === \"ArrowFunctionExpression\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isFnExpression = isFnExpressionNode;\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation({\n    offset: pos.offset,\n    line: pos.line,\n    column: pos.column\n  }, source, numberOfCharacters);\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (shared.isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly) continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(p => p.type === 7 && p.name === \"bind\" && (!p.arg ||\n  // v-bind=\"obj\"\n  p.arg.type !== 4 ||\n  // v-bind:[_ctx.foo]\n  !p.arg.isStatic)\n  // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !shared.isString(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!shared.isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !shared.isString(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || shared.isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!shared.isString(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(p => p.key.type === 4 && p.key.content === propKeyName);\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some(c => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some(c => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some(b => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some(c => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some(c => shared.isObject(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n    case 20:\n      return false;\n    default:\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+(\\S[\\s\\S]*)/;\nconst defaultParserOptions = {\n  parseMode: \"base\",\n  ns: 0,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  isVoidTag: shared.NO,\n  isPreTag: shared.NO,\n  isIgnoreNewlineTag: shared.NO,\n  isCustomElement: shared.NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: false,\n  prefixIdentifiers: false\n};\nlet currentOptions = defaultParserOptions;\nlet currentRoot = null;\nlet currentInput = \"\";\nlet currentOpenTag = null;\nlet currentProp = null;\nlet currentAttrValue = \"\";\nlet currentAttrStartIndex = -1;\nlet currentAttrEndIndex = -1;\nlet inPre = 0;\nlet inVPre = false;\nlet currentVPreBoundary = null;\nconst stack = [];\nconst tokenizer = new Tokenizer(stack, {\n  onerr: emitError,\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end);\n  },\n  ontextentity(char, start, end) {\n    onText(char, start, end);\n  },\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end);\n    }\n    let innerStart = start + tokenizer.delimiterOpen.length;\n    let innerEnd = end - tokenizer.delimiterClose.length;\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\n      innerStart++;\n    }\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--;\n    }\n    let exp = getSlice(innerStart, innerEnd);\n    if (exp.includes(\"&\")) {\n      {\n        exp = decode_js.decodeHTML(exp);\n      }\n    }\n    addNode({\n      type: 5,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end)\n    });\n  },\n  onopentagname(start, end) {\n    const name = getSlice(start, end);\n    currentOpenTag = {\n      type: 1,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: 0,\n      // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: void 0\n    };\n  },\n  onopentagend(end) {\n    endOpenTag(end);\n  },\n  onclosetag(start, end) {\n    const name = getSlice(start, end);\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false;\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i];\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true;\n          if (i > 0) {\n            emitError(24, stack[0].loc.start.offset);\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift();\n            onCloseTag(el, end, j < i);\n          }\n          break;\n        }\n      }\n      if (!found) {\n        emitError(23, backTrack(start, 60));\n      }\n    }\n  },\n  onselfclosingtag(end) {\n    const name = currentOpenTag.tag;\n    currentOpenTag.isSelfClosing = true;\n    endOpenTag(end);\n    if (stack[0] && stack[0].tag === name) {\n      onCloseTag(stack.shift(), end);\n    }\n  },\n  onattribname(start, end) {\n    currentProp = {\n      type: 6,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: void 0,\n      loc: getLoc(start)\n    };\n  },\n  ondirname(start, end) {\n    const raw = getSlice(start, end);\n    const name = raw === \".\" || raw === \":\" ? \"bind\" : raw === \"@\" ? \"on\" : raw === \"#\" ? \"slot\" : raw.slice(2);\n    if (!inVPre && name === \"\") {\n      emitError(26, start);\n    }\n    if (inVPre || name === \"\") {\n      currentProp = {\n        type: 6,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: void 0,\n        loc: getLoc(start)\n      };\n    } else {\n      currentProp = {\n        type: 7,\n        name,\n        rawName: raw,\n        exp: void 0,\n        arg: void 0,\n        modifiers: raw === \".\" ? [createSimpleExpression(\"prop\")] : [],\n        loc: getLoc(start)\n      };\n      if (name === \"pre\") {\n        inVPre = tokenizer.inVPre = true;\n        currentVPreBoundary = currentOpenTag;\n        const props = currentOpenTag.props;\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === 7) {\n            props[i] = dirToAttr(props[i]);\n          }\n        }\n      }\n    }\n  },\n  ondirarg(start, end) {\n    if (start === end) return;\n    const arg = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += arg;\n      setLocEnd(currentProp.nameLoc, end);\n    } else {\n      const isStatic = arg[0] !== `[`;\n      currentProp.arg = createExp(isStatic ? arg : arg.slice(1, -1), isStatic, getLoc(start, end), isStatic ? 3 : 0);\n    }\n  },\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += \".\" + mod;\n      setLocEnd(currentProp.nameLoc, end);\n    } else if (currentProp.name === \"slot\") {\n      const arg = currentProp.arg;\n      if (arg) {\n        arg.content += \".\" + mod;\n        setLocEnd(arg.loc, end);\n      }\n    } else {\n      const exp = createSimpleExpression(mod, true, getLoc(start, end));\n      currentProp.modifiers.push(exp);\n    }\n  },\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end);\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribentity(char, start, end) {\n    currentAttrValue += char;\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribnameend(end) {\n    const start = currentProp.loc.start.offset;\n    const name = getSlice(start, end);\n    if (currentProp.type === 7) {\n      currentProp.rawName = name;\n    }\n    if (currentOpenTag.props.some(p => (p.type === 7 ? p.rawName : p.name) === name)) {\n      emitError(2, start);\n    }\n  },\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end);\n      if (quote !== 0) {\n        if (currentProp.type === 6) {\n          if (currentProp.name === \"class\") {\n            currentAttrValue = condense(currentAttrValue).trim();\n          }\n          if (quote === 1 && !currentAttrValue) {\n            emitError(13, end);\n          }\n          currentProp.value = {\n            type: 2,\n            content: currentAttrValue,\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\n          };\n          if (tokenizer.inSFCRoot && currentOpenTag.tag === \"template\" && currentProp.name === \"lang\" && currentAttrValue && currentAttrValue !== \"html\") {\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);\n          }\n        } else {\n          let expParseMode = 0 /* Normal */;\n          {\n            if (currentProp.name === \"for\") {\n              expParseMode = 3 /* Skip */;\n            } else if (currentProp.name === \"slot\") {\n              expParseMode = 1 /* Params */;\n            } else if (currentProp.name === \"on\" && currentAttrValue.includes(\";\")) {\n              expParseMode = 2 /* Statements */;\n            }\n          }\n          currentProp.exp = createExp(currentAttrValue, false, getLoc(currentAttrStartIndex, currentAttrEndIndex), 0, expParseMode);\n          if (currentProp.name === \"for\") {\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\n          }\n          let syncIndex = -1;\n          if (currentProp.name === \"bind\" && (syncIndex = currentProp.modifiers.findIndex(mod => mod.content === \"sync\")) > -1 && checkCompatEnabled(\"COMPILER_V_BIND_SYNC\", currentOptions, currentProp.loc, currentProp.rawName)) {\n            currentProp.name = \"model\";\n            currentProp.modifiers.splice(syncIndex, 1);\n          }\n        }\n      }\n      if (currentProp.type !== 7 || currentProp.name !== \"pre\") {\n        currentOpenTag.props.push(currentProp);\n      }\n    }\n    currentAttrValue = \"\";\n    currentAttrStartIndex = currentAttrEndIndex = -1;\n  },\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: 3,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3)\n      });\n    }\n  },\n  onend() {\n    const end = currentInput.length;\n    if (tokenizer.state !== 1) {\n      switch (tokenizer.state) {\n        case 5:\n        case 8:\n          emitError(5, end);\n          break;\n        case 3:\n        case 4:\n          emitError(25, tokenizer.sectionStart);\n          break;\n        case 28:\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\n            emitError(6, end);\n          } else {\n            emitError(7, end);\n          }\n          break;\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        // \"\n        case 20:\n        // '\n        case 21:\n          emitError(9, end);\n          break;\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1);\n      emitError(24, stack[index].loc.start.offset);\n    }\n  },\n  oncdata(start, end) {\n    if (stack[0].ns !== 0) {\n      onText(getSlice(start, end), start, end);\n    } else {\n      emitError(1, start - 9);\n    }\n  },\n  onprocessinginstruction(start) {\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n      emitError(21, start - 1);\n    }\n  }\n});\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch) return;\n  const [, LHS, RHS] = inMatch;\n  const createAliasExpression = (content, offset, asParam = false) => {\n    const start = loc.start.offset + offset;\n    const end = start + content.length;\n    return createExp(content, false, getLoc(start, end), 0, asParam ? 1 /* Params */ : 0 /* Normal */);\n  };\n  const result = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: void 0,\n    key: void 0,\n    index: void 0,\n    finalized: false\n  };\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(keyContent, keyOffset, true);\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(indexContent, exp.indexOf(indexContent, result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length), true);\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\n  }\n  return result;\n}\nfunction getSlice(start, end) {\n  return currentInput.slice(start, end);\n}\nfunction endOpenTag(end) {\n  if (tokenizer.inSFCRoot) {\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\n  }\n  addNode(currentOpenTag);\n  const {\n    tag,\n    ns\n  } = currentOpenTag;\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre++;\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag, end);\n  } else {\n    stack.unshift(currentOpenTag);\n    if (ns === 1 || ns === 2) {\n      tokenizer.inXML = true;\n    }\n  }\n  currentOpenTag = null;\n}\nfunction onText(content, start, end) {\n  const parent = stack[0] || currentRoot;\n  const lastNode = parent.children[parent.children.length - 1];\n  if (lastNode && lastNode.type === 2) {\n    lastNode.content += content;\n    setLocEnd(lastNode.loc, end);\n  } else {\n    parent.children.push({\n      type: 2,\n      content,\n      loc: getLoc(start, end)\n    });\n  }\n}\nfunction onCloseTag(el, end, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, 60));\n  } else {\n    setLocEnd(el.loc, lookAhead(end, 62) + 1);\n  }\n  if (tokenizer.inSFCRoot) {\n    if (el.children.length) {\n      el.innerLoc.end = shared.extend({}, el.children[el.children.length - 1].loc.end);\n    } else {\n      el.innerLoc.end = shared.extend({}, el.innerLoc.start);\n    }\n    el.innerLoc.source = getSlice(el.innerLoc.start.offset, el.innerLoc.end.offset);\n  }\n  const {\n    tag,\n    ns,\n    children\n  } = el;\n  if (!inVPre) {\n    if (tag === \"slot\") {\n      el.tagType = 2;\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = 3;\n    } else if (isComponent(el)) {\n      el.tagType = 1;\n    }\n  }\n  if (!tokenizer.inRCDATA) {\n    el.children = condenseWhitespace(children);\n  }\n  if (ns === 0 && currentOptions.isIgnoreNewlineTag(tag)) {\n    const first = children[0];\n    if (first && first.type === 2) {\n      first.content = first.content.replace(/^\\r?\\n/, \"\");\n    }\n  }\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre--;\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer.inVPre = false;\n    currentVPreBoundary = null;\n  }\n  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n    tokenizer.inXML = false;\n  }\n  {\n    const props = el.props;\n    if (!tokenizer.inSFCRoot && isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\", currentOptions) && el.tag === \"template\" && !isFragmentTemplate(el)) {\n      const parent = stack[0] || currentRoot;\n      const index = parent.children.indexOf(el);\n      parent.children.splice(index, 1, ...el.children);\n    }\n    const inlineTemplateProp = props.find(p => p.type === 6 && p.name === \"inline-template\");\n    if (inlineTemplateProp && checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\", currentOptions, inlineTemplateProp.loc) && el.children.length) {\n      inlineTemplateProp.value = {\n        type: 2,\n        content: getSlice(el.children[0].loc.start.offset, el.children[el.children.length - 1].loc.end.offset),\n        loc: inlineTemplateProp.loc\n      };\n    }\n  }\n}\nfunction lookAhead(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i < currentInput.length - 1) i++;\n  return i;\n}\nfunction backTrack(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i >= 0) i--;\n  return i;\n}\nconst specialTemplateDir = /* @__PURE__ */new Set([\"if\", \"else\", \"else-if\", \"for\", \"slot\"]);\nfunction isFragmentTemplate({\n  tag,\n  props\n}) {\n  if (tag === \"template\") {\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isComponent({\n  tag,\n  props\n}) {\n  if (currentOptions.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || currentOptions.isBuiltInComponent && currentOptions.isBuiltInComponent(tag) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        } else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\", currentOptions, p.loc)) {\n          return true;\n        }\n      }\n    } else if (\n    // :is on plain element - only treat as component in compat mode\n    p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\", currentOptions, p.loc)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUpperCase(c) {\n  return c > 64 && c < 91;\n}\nconst windowsNewlineRE = /\\r\\n/g;\nfunction condenseWhitespace(nodes, tag) {\n  const shouldCondense = currentOptions.whitespace !== \"preserve\";\n  let removedWhitespace = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type === 2) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = nodes[i - 1] && nodes[i - 1].type;\n          const next = nodes[i + 1] && nodes[i + 1].type;\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            node.content = \" \";\n          }\n        } else if (shouldCondense) {\n          node.content = condense(node.content);\n        }\n      } else {\n        node.content = node.content.replace(windowsNewlineRE, \"\\n\");\n      }\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction isAllWhitespace(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace(str.charCodeAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasNewlineChar(str) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c === 10 || c === 13) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction condense(str) {\n  let ret = \"\";\n  let prevCharIsWhitespace = false;\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += \" \";\n        prevCharIsWhitespace = true;\n      }\n    } else {\n      ret += str[i];\n      prevCharIsWhitespace = false;\n    }\n  }\n  return ret;\n}\nfunction addNode(node) {\n  (stack[0] || currentRoot).children.push(node);\n}\nfunction getLoc(start, end) {\n  return {\n    start: tokenizer.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end)\n  };\n}\nfunction setLocEnd(loc, end) {\n  loc.end = tokenizer.getPos(end);\n  loc.source = getSlice(loc.start.offset, end);\n}\nfunction dirToAttr(dir) {\n  const attr = {\n    type: 6,\n    name: dir.rawName,\n    nameLoc: getLoc(dir.loc.start.offset, dir.loc.start.offset + dir.rawName.length),\n    value: void 0,\n    loc: dir.loc\n  };\n  if (dir.exp) {\n    const loc = dir.exp.loc;\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--;\n      loc.start.column--;\n      loc.end.offset++;\n      loc.end.column++;\n    }\n    attr.value = {\n      type: 2,\n      content: dir.exp.content,\n      loc\n    };\n  }\n  return attr;\n}\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0 /* Normal */) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\n  if (!isStatic && currentOptions.prefixIdentifiers && parseMode !== 3 /* Skip */ && content.trim()) {\n    if (isSimpleIdentifier(content)) {\n      exp.ast = null;\n      return exp;\n    }\n    try {\n      const plugins = currentOptions.expressionPlugins;\n      const options = {\n        plugins: plugins ? [...plugins, \"typescript\"] : [\"typescript\"]\n      };\n      if (parseMode === 2 /* Statements */) {\n        exp.ast = parser.parse(` ${content} `, options).program;\n      } else if (parseMode === 1 /* Params */) {\n        exp.ast = parser.parseExpression(`(${content})=>{}`, options);\n      } else {\n        exp.ast = parser.parseExpression(`(${content})`, options);\n      }\n    } catch (e) {\n      exp.ast = false;\n      emitError(45, loc.start.offset, e.message);\n    }\n  }\n  return exp;\n}\nfunction emitError(code, index, message) {\n  currentOptions.onError(createCompilerError(code, getLoc(index, index), void 0, message));\n}\nfunction reset() {\n  tokenizer.reset();\n  currentOpenTag = null;\n  currentProp = null;\n  currentAttrValue = \"\";\n  currentAttrStartIndex = -1;\n  currentAttrEndIndex = -1;\n  stack.length = 0;\n}\nfunction baseParse(input, options) {\n  reset();\n  currentInput = input;\n  currentOptions = shared.extend({}, defaultParserOptions);\n  if (options) {\n    let key;\n    for (key in options) {\n      if (options[key] != null) {\n        currentOptions[key] = options[key];\n      }\n    }\n  }\n  tokenizer.mode = currentOptions.parseMode === \"html\" ? 1 : currentOptions.parseMode === \"sfc\" ? 2 : 0;\n  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\n  const delimiters = options && options.delimiters;\n  if (delimiters) {\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);\n    tokenizer.delimiterClose = toCharCodes(delimiters[1]);\n  }\n  const root = currentRoot = createRoot([], input);\n  tokenizer.parse(currentInput);\n  root.loc = getLoc(0, input.length);\n  root.children = condenseWhitespace(root.children);\n  currentRoot = null;\n  return root;\n}\nfunction cacheStatic(root, context) {\n  walk(root, void 0, context,\n  // Root node is unfortunately non-hoistable due to potential parent\n  // fallthrough attributes.\n  isSingleElementRoot(root, root.children[0]));\n}\nfunction isSingleElementRoot(root, child) {\n  const {\n    children\n  } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk(node, parent, context, doNotHoistNode = false, inFor = false) {\n  const {\n    children\n  } = node;\n  const toCache = [];\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = -1;\n          toCache.push(child);\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = codegenNode.patchFlag;\n          if ((flag === void 0 || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    } else if (child.type === 12) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType >= 2) {\n        toCache.push(child);\n        continue;\n      }\n    }\n    if (child.type === 1) {\n      const isComponent = child.tagType === 1;\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk(child, node, context, false, inFor);\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk(child, node, context, child.children.length === 1, true);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk(child.branches[i2], node, context, child.branches[i2].children.length === 1, inFor);\n      }\n    }\n  }\n  let cachedAsArray = false;\n  if (toCache.length === children.length && node.type === 1) {\n    if (node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && shared.isArray(node.codegenNode.children)) {\n      node.codegenNode.children = getCacheExpression(createArrayExpression(node.codegenNode.children));\n      cachedAsArray = true;\n    } else if (node.tagType === 1 && node.codegenNode && node.codegenNode.type === 13 && node.codegenNode.children && !shared.isArray(node.codegenNode.children) && node.codegenNode.children.type === 15) {\n      const slot = getSlotNode(node.codegenNode, \"default\");\n      if (slot) {\n        slot.returns = getCacheExpression(createArrayExpression(slot.returns));\n        cachedAsArray = true;\n      }\n    } else if (node.tagType === 3 && parent && parent.type === 1 && parent.tagType === 1 && parent.codegenNode && parent.codegenNode.type === 13 && parent.codegenNode.children && !shared.isArray(parent.codegenNode.children) && parent.codegenNode.children.type === 15) {\n      const slotName = findDir(node, \"slot\", true);\n      const slot = slotName && slotName.arg && getSlotNode(parent.codegenNode, slotName.arg);\n      if (slot) {\n        slot.returns = getCacheExpression(createArrayExpression(slot.returns));\n        cachedAsArray = true;\n      }\n    }\n  }\n  if (!cachedAsArray) {\n    for (const child of toCache) {\n      child.codegenNode = context.cache(child.codegenNode);\n    }\n  }\n  function getCacheExpression(value) {\n    const exp = context.cache(value);\n    if (inFor && context.hmr) {\n      exp.needArraySpread = true;\n    }\n    return exp;\n  }\n  function getSlotNode(node2, name) {\n    if (node2.children && !shared.isArray(node2.children) && node2.children.type === 15) {\n      const slot = node2.children.properties.find(p => p.key === name || p.key.content === name);\n      return slot && slot.value;\n    }\n  }\n  if (toCache.length && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n}\nfunction getConstantType(node, context) {\n  const {\n    constantCache\n  } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\" && node.tag !== \"math\") {\n        return 0;\n      }\n      if (codegenNode.patchFlag === void 0) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (shared.isString(child) || shared.isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    case 20:\n      return 2;\n    default:\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */new Set([NORMALIZE_CLASS, NORMALIZE_STYLE, NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !shared.isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const {\n      properties\n    } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const {\n        key,\n        value\n      } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = shared.NOOP,\n  isCustomElement = shared.NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = shared.EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    filename,\n    selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */new Map(),\n    components: /* @__PURE__ */new Set(),\n    directives: /* @__PURE__ */new Set(),\n    hoists: [],\n    imports: [],\n    cached: [],\n    constantCache: /* @__PURE__ */new WeakMap(),\n    temps: 0,\n    identifiers: /* @__PURE__ */Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    grandParent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: shared.NOOP,\n    addIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          addId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId);\n        } else if (exp.type === 4) {\n          addId(exp.content);\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          removeId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId);\n        } else if (exp.type === 4) {\n          removeId(exp.content);\n        }\n      }\n    },\n    hoist(exp) {\n      if (shared.isString(exp)) exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2);\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      const cacheExp = createCacheExpression(context.cached.length, exp, isVNode);\n      context.cached.push(cacheExp);\n      return cacheExp;\n    }\n  };\n  {\n    context.filters = /* @__PURE__ */new Set();\n  }\n  function addId(id) {\n    const {\n      identifiers\n    } = context;\n    if (identifiers[id] === void 0) {\n      identifiers[id] = 0;\n    }\n    identifiers[id]++;\n  }\n  function removeId(id) {\n    context.identifiers[id]--;\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    cacheStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  root.transformed = true;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const {\n    helper\n  } = context;\n  const {\n    children\n  } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    root.codegenNode = createVNodeCall(context, helper(FRAGMENT), void 0, root.children, patchFlag, void 0, void 0, true, void 0, false);\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (shared.isString(child)) continue;\n    context.grandParent = context.parent;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const {\n    nodeTransforms\n  } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (shared.isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    // for container types, further traverse downwards\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = shared.isString(name) ? n => n === name : n => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const {\n        props\n      } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit) exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\nconst PURE_ANNOTATION = `/*@__PURE__*/`;\nconst aliasHelper = s => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, newlineIndex = -2 /* None */, node) {\n      context.code += code;\n      if (context.map) {\n        if (node) {\n          let name;\n          if (node.type === 4 && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, \"\");\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content;\n            }\n          }\n          addMapping(node.loc.start, name);\n        }\n        if (newlineIndex === -3 /* Unknown */) {\n          advancePositionWithMutation(context, code);\n        } else {\n          context.offset += code.length;\n          if (newlineIndex === -2 /* None */) {\n            context.column += code.length;\n          } else {\n            if (newlineIndex === -1 /* End */) {\n              newlineIndex = code.length - 1;\n            }\n            context.line++;\n            context.column = code.length - newlineIndex;\n          }\n        }\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end);\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\"\\n\" + `  `.repeat(n), 0 /* Start */);\n  }\n  function addMapping(loc, name = null) {\n    const {\n      _names,\n      _mappings\n    } = context.map;\n    if (name !== null && !_names.has(name)) _names.add(name);\n    _mappings.add({\n      originalLine: loc.line,\n      originalColumn: loc.column - 1,\n      // source-map column is 0 based\n      generatedLine: context.line,\n      generatedColumn: context.column - 1,\n      source: filename,\n      name\n    });\n  }\n  if (sourceMap) {\n    context.map = new sourceMapJs.SourceMapGenerator();\n    context.map.setSourceContent(filename, context.source);\n    context.map._sources.add(filename);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated) options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const genScopeId = scopeId != null && mode === \"module\";\n  const isSetupInlined = !!options.inline;\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  if (mode === \"module\") {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\n  } else {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  if (options.bindingMetadata && !options.inline) {\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\n  }\n  const signature = options.isTS ? args.map(arg => `${arg}: any`).join(\",\") : args.join(\", \");\n  if (isSetupInlined) {\n    push(`(${signature}) => {`);\n  } else {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(`const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue\n`, -1 /* End */);\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, \"filter\", context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\n`, 0 /* Start */);\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    if (prefixIdentifiers) {\n      push(`const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\n`, -1 /* End */);\n    } else {\n      push(`const _Vue = ${VueBinding}\n`, -1 /* End */);\n      if (ast.hoists.length) {\n        const staticHelpers = [CREATE_VNODE, CREATE_ELEMENT_VNODE, CREATE_COMMENT, CREATE_TEXT, CREATE_STATIC].filter(helper => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(`const { ${staticHelpers} } = _Vue\n`, -1 /* End */);\n      }\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(`const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\n`, -1 /* End */);\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genModulePreamble(ast, context, genScopeId, inline) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context;\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers);\n    if (optimizeImports) {\n      push(`import { ${helpers.map(s => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`, -1 /* End */);\n      push(`\n// Binding optimization for webpack code-split\nconst ${helpers.map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\n`, -1 /* End */);\n    } else {\n      push(`import { ${helpers.map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`, -1 /* End */);\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(`import { ${ast.ssrHelpers.map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\n`, -1 /* End */);\n  }\n  if (ast.imports.length) {\n    genImports(ast.imports, context);\n    newline();\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  if (!inline) {\n    push(`export `);\n  }\n}\nfunction genAssets(assets, type, {\n  helper,\n  push,\n  newline,\n  isTS\n}) {\n  const resolver = helper(type === \"filter\" ? RESOLVE_FILTER : type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const {\n    push,\n    newline\n  } = context;\n  newline();\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      push(`const _hoisted_${i + 1} = `);\n      genNode(exp, context);\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction genImports(importsOptions, context) {\n  if (!importsOptions.length) {\n    return;\n  }\n  importsOptions.forEach(imports => {\n    context.push(`import `);\n    genNode(imports.exp, context);\n    context.push(` from '${imports.path}'`);\n    context.newline();\n  });\n}\nfunction isText(n) {\n  return shared.isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || nodes.some(n => shared.isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const {\n    push,\n    newline\n  } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (shared.isString(node)) {\n      push(node, -3 /* Unknown */);\n    } else if (shared.isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (shared.isString(node)) {\n    context.push(node, -3 /* Unknown */);\n    return;\n  }\n  if (shared.isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    // SSR only types\n    case 22:\n      genTemplateLiteral(node, context);\n      break;\n    case 23:\n      genIfStatement(node, context);\n      break;\n    case 24:\n      genAssignmentExpression(node, context);\n      break;\n    case 25:\n      genSequenceExpression(node, context);\n      break;\n    case 26:\n      genReturnStatement(node, context);\n      break;\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), -3 /* Unknown */, node);\n}\nfunction genExpression(node, context) {\n  const {\n    content,\n    isStatic\n  } = node;\n  context.push(isStatic ? JSON.stringify(content) : content, -3 /* Unknown */, node);\n}\nfunction genInterpolation(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  if (pure) push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (shared.isString(child)) {\n      context.push(child, -3 /* Unknown */);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const {\n    push\n  } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, -2 /* None */, node);\n  } else {\n    push(`[${node.content}]`, -3 /* Unknown */, node);\n  }\n}\nfunction genComment(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, -3 /* Unknown */, node);\n}\nfunction genVNodeCall(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n  let patchFlagString;\n  if (patchFlag) {\n    {\n      patchFlagString = String(patchFlag);\n    }\n  }\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, -2 /* None */, node);\n  genNodeList(genNullableArgs([tag, props, children, patchFlagString, dynamicProps]), context);\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null) break;\n  }\n  return args.slice(0, i + 1).map(arg => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, -2 /* None */, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const {\n    push,\n    indent,\n    deindent,\n    newline\n  } = context;\n  const {\n    properties\n  } = node;\n  if (!properties.length) {\n    push(`{}`, -2 /* None */, node);\n    return;\n  }\n  const multilines = properties.length > 1 || properties.some(p => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const {\n      key,\n      value\n    } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const {\n    push,\n    indent,\n    deindent\n  } = context;\n  const {\n    params,\n    returns,\n    body,\n    newline,\n    isSlot\n  } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, -2 /* None */, node);\n  if (shared.isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (shared.isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const {\n    test,\n    consequent,\n    alternate,\n    newline: needNewline\n  } = node;\n  const {\n    push,\n    indent,\n    deindent,\n    newline\n  } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(true\n  /* without newline */);\n}\nfunction genCacheExpression(node, context) {\n  const {\n    push,\n    helper,\n    indent,\n    deindent,\n    newline\n  } = context;\n  const {\n    needPauseTracking,\n    needArraySpread\n  } = node;\n  if (needArraySpread) {\n    push(`[...(`);\n  }\n  push(`_cache[${node.index}] || (`);\n  if (needPauseTracking) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n    push(`(`);\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (needPauseTracking) {\n    push(`).cacheIndex = ${node.index},`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n  if (needArraySpread) {\n    push(`)]`);\n  }\n}\nfunction genTemplateLiteral(node, context) {\n  const {\n    push,\n    indent,\n    deindent\n  } = context;\n  push(\"`\");\n  const l = node.elements.length;\n  const multilines = l > 3;\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i];\n    if (shared.isString(e)) {\n      push(e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"), -3 /* Unknown */);\n    } else {\n      push(\"${\");\n      if (multilines) indent();\n      genNode(e, context);\n      if (multilines) deindent();\n      push(\"}\");\n    }\n  }\n  push(\"`\");\n}\nfunction genIfStatement(node, context) {\n  const {\n    push,\n    indent,\n    deindent\n  } = context;\n  const {\n    test,\n    consequent,\n    alternate\n  } = node;\n  push(`if (`);\n  genNode(test, context);\n  push(`) {`);\n  indent();\n  genNode(consequent, context);\n  deindent();\n  push(`}`);\n  if (alternate) {\n    push(` else `);\n    if (alternate.type === 23) {\n      genIfStatement(alternate, context);\n    } else {\n      push(`{`);\n      indent();\n      genNode(alternate, context);\n      deindent();\n      push(`}`);\n    }\n  }\n}\nfunction genAssignmentExpression(node, context) {\n  genNode(node.left, context);\n  context.push(` = `);\n  genNode(node.right, context);\n}\nfunction genSequenceExpression(node, context) {\n  context.push(`(`);\n  genNodeList(node.expressions, context);\n  context.push(`)`);\n}\nfunction genReturnStatement({\n  returns\n}, context) {\n  context.push(`return `);\n  if (shared.isArray(returns)) {\n    genNodeListAsArray(returns, context);\n  } else {\n    genNode(returns, context);\n  }\n}\nconst isLiteralWhitelisted = /* @__PURE__ */shared.makeMap(\"true,false,null,this\");\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(node.content, context);\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(exp, context,\n          // slot args must be processed as function params\n          dir.name === \"slot\");\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node;\n  }\n  const {\n    inline,\n    bindingMetadata\n  } = context;\n  const rewriteIdentifier = (raw, parent, id) => {\n    const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\n    if (inline) {\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\n      const isNewExpression = parent && isInNewExpression(parentStack);\n      const wrapWithUnref = raw2 => {\n        const wrapped = `${context.helperString(UNREF)}(${raw2})`;\n        return isNewExpression ? `(${wrapped})` : wrapped;\n      };\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\n        return raw;\n      } else if (type === \"setup-ref\") {\n        return `${raw}.value`;\n      } else if (type === \"setup-maybe-ref\") {\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : wrapWithUnref(raw);\n      } else if (type === \"setup-let\") {\n        if (isAssignmentLVal) {\n          const {\n            right: rVal,\n            operator\n          } = parent;\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\n          const rExpString = stringifyExpression(processExpression(createSimpleExpression(rExp, false), context, false, false, knownIds));\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\n        } else if (isUpdateArg) {\n          id.start = parent.start;\n          id.end = parent.end;\n          const {\n            prefix: isPrefix,\n            operator\n          } = parent;\n          const prefix = isPrefix ? operator : ``;\n          const postfix = isPrefix ? `` : operator;\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\n        } else if (isDestructureAssignment) {\n          return raw;\n        } else {\n          return wrapWithUnref(raw);\n        }\n      } else if (type === \"props\") {\n        return shared.genPropsAccessExp(raw);\n      } else if (type === \"props-aliased\") {\n        return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\n      }\n    } else {\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\n        return `$setup.${raw}`;\n      } else if (type === \"props-aliased\") {\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\n      } else if (type) {\n        return `$${type}.${raw}`;\n      }\n    }\n    return `_ctx.${raw}`;\n  };\n  const rawExp = node.content;\n  let ast = node.ast;\n  if (ast === false) {\n    return node;\n  }\n  if (ast === null || !ast && isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp];\n    const isAllowedGlobal = shared.isGloballyAllowed(rawExp);\n    const isLiteral = isLiteralWhitelisted(rawExp);\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = 1;\n      }\n      node.content = rewriteIdentifier(rawExp);\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = 3;\n      } else {\n        node.constType = 2;\n      }\n    }\n    return node;\n  }\n  if (!ast) {\n    const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\n    try {\n      ast = parser.parseExpression(source, {\n        sourceType: \"module\",\n        plugins: context.expressionPlugins\n      });\n    } catch (e) {\n      context.onError(createCompilerError(45, node.loc, void 0, e.message));\n      return node;\n    }\n  }\n  const ids = [];\n  const parentStack = [];\n  const knownIds = Object.create(context.identifiers);\n  walkIdentifiers(ast, (node2, parent, _, isReferenced, isLocal) => {\n    if (isStaticPropertyKey(node2, parent)) {\n      return;\n    }\n    if (node2.name.startsWith(\"_filter_\")) {\n      return;\n    }\n    const needPrefix = isReferenced && canPrefix(node2);\n    if (needPrefix && !isLocal) {\n      if (isStaticProperty(parent) && parent.shorthand) {\n        node2.prefix = `${node2.name}: `;\n      }\n      node2.name = rewriteIdentifier(node2.name, parent, node2);\n      ids.push(node2);\n    } else {\n      if (!(needPrefix && isLocal) && (!parent || parent.type !== \"CallExpression\" && parent.type !== \"NewExpression\" && parent.type !== \"MemberExpression\")) {\n        node2.isConstant = true;\n      }\n      ids.push(node2);\n    }\n  }, true,\n  // invoke on ALL identifiers\n  parentStack, knownIds);\n  const children = [];\n  ids.sort((a, b) => a.start - b.start);\n  ids.forEach((id, i) => {\n    const start = id.start - 1;\n    const end = id.end - 1;\n    const last = ids[i - 1];\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``));\n    }\n    const source = rawExp.slice(start, end);\n    children.push(createSimpleExpression(id.name, false, {\n      start: advancePositionWithClone(node.loc.start, source, start),\n      end: advancePositionWithClone(node.loc.start, source, end),\n      source\n    }, id.isConstant ? 3 : 0));\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end));\n    }\n  });\n  let ret;\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc);\n    ret.ast = ast;\n  } else {\n    ret = node;\n    ret.constType = 3;\n  }\n  ret.identifiers = Object.keys(knownIds);\n  return ret;\n}\nfunction canPrefix(id) {\n  if (shared.isGloballyAllowed(id.name)) {\n    return false;\n  }\n  if (id.name === \"require\") {\n    return false;\n  }\n  return true;\n}\nfunction stringifyExpression(exp) {\n  if (shared.isString(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\nfunction isConst(type) {\n  return type === \"setup-const\" || type === \"literal-const\";\n}\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\n  return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(ifNode);\n    let key = 0;\n    while (i-- >= 0) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 9) {\n        key += sibling.branches.length;\n      }\n    }\n    return () => {\n      if (isRoot) {\n        ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\n      } else {\n        const parentCondition = getParentCondition(ifNode.codegenNode);\n        parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\n      }\n    };\n  });\n});\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(createCompilerError(28, dir.loc));\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (context.prefixIdentifiers && dir.exp) {\n    dir.exp = processExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(createCompilerError(30, node.loc));\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({\n              userKey\n            }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(createCompilerError(29, branch.userKey.loc));\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit) onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(createCompilerError(30, node.loc));\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context),\n    // make sure to pass in asBlock: true so that the comment node call\n    // closes the current block.\n    createCallExpression(context.helper(CREATE_COMMENT), ['\"\"', \"true\"]));\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const {\n    helper\n  } = context;\n  const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2));\n  const {\n    children\n  } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag, void 0, void 0, true, false, false, branch.loc);\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\nconst transformBind = (dir, _node, context) => {\n  const {\n    modifiers,\n    loc\n  } = dir;\n  const arg = dir.arg;\n  let {\n    exp\n  } = dir;\n  if (exp && exp.type === 4 && !exp.content.trim()) {\n    {\n      context.onError(createCompilerError(34, loc));\n      return {\n        props: [createObjectProperty(arg, createSimpleExpression(\"\", true, loc))]\n      };\n    }\n  }\n  if (!exp) {\n    if (arg.type !== 4 || !arg.isStatic) {\n      context.onError(createCompilerError(52, arg.loc));\n      return {\n        props: [createObjectProperty(arg, createSimpleExpression(\"\", true, loc))]\n      };\n    }\n    transformBindShorthand(dir, context);\n    exp = dir.exp;\n  }\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.some(mod => mod.content === \"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = shared.camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.some(mod => mod.content === \"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.some(mod => mod.content === \"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst transformBindShorthand = (dir, context) => {\n  const arg = dir.arg;\n  const propName = shared.camelize(arg.content);\n  dir.exp = createSimpleExpression(propName, false, arg.loc);\n  {\n    dir.exp = processExpression(dir.exp, context);\n  }\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\nconst transformFor = createStructuralDirectiveTransform(\"for\", (node, dir, context) => {\n  const {\n    helper,\n    removeHelper\n  } = context;\n  return processFor(node, dir, context, forNode => {\n    const renderExp = createCallExpression(helper(RENDER_LIST), [forNode.source]);\n    const isTemplate = isTemplateNode(node);\n    const memo = findDir(node, \"memo\");\n    const keyProp = findProp(node, `key`, false, true);\n    if (keyProp && keyProp.type === 7 && !keyProp.exp) {\n      transformBindShorthand(keyProp, context);\n    }\n    const keyExp = keyProp && (keyProp.type === 6 ? keyProp.value ? createSimpleExpression(keyProp.value.content, true) : void 0 : keyProp.exp);\n    const keyProperty = keyProp && keyExp ? createObjectProperty(`key`, keyExp) : null;\n    if (isTemplate) {\n      if (memo) {\n        memo.exp = processExpression(memo.exp, context);\n      }\n      if (keyProperty && keyProp.type !== 6) {\n        keyProperty.value = processExpression(keyProperty.value, context);\n      }\n    }\n    const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n    const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n    forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), void 0, renderExp, fragmentFlag, void 0, void 0, true, !isStableFragment, false, node.loc);\n    return () => {\n      let childBlock;\n      const {\n        children\n      } = forNode;\n      if (isTemplate) {\n        node.children.some(c => {\n          if (c.type === 1) {\n            const key = findProp(c, \"key\");\n            if (key) {\n              context.onError(createCompilerError(33, key.loc));\n              return true;\n            }\n          }\n        });\n      }\n      const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n      const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n      if (slotOutlet) {\n        childBlock = slotOutlet.codegenNode;\n        if (isTemplate && keyProperty) {\n          injectProp(childBlock, keyProperty, context);\n        }\n      } else if (needFragmentWrapper) {\n        childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : void 0, node.children, 64, void 0, void 0, true, void 0, false);\n      } else {\n        childBlock = children[0].codegenNode;\n        if (isTemplate && keyProperty) {\n          injectProp(childBlock, keyProperty, context);\n        }\n        if (childBlock.isBlock !== !isStableFragment) {\n          if (childBlock.isBlock) {\n            removeHelper(OPEN_BLOCK);\n            removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        childBlock.isBlock = !isStableFragment;\n        if (childBlock.isBlock) {\n          helper(OPEN_BLOCK);\n          helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n        } else {\n          helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n        }\n      }\n      if (memo) {\n        const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [createSimpleExpression(`_cached`)]));\n        loop.body = createBlockStatement([createCompoundExpression([`const _memo = (`, memo.exp, `)`]), createCompoundExpression([`if (_cached`, ...(keyExp ? [` && _cached.key === `, keyExp] : []), ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`]), createCompoundExpression([`const _item = `, childBlock]), createSimpleExpression(`_item.memo = _memo`), createSimpleExpression(`return _item`)]);\n        renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached.length)));\n        context.cached.push(null);\n      } else {\n        renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true));\n      }\n    };\n  });\n});\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(createCompilerError(31, dir.loc));\n    return;\n  }\n  const parseResult = dir.forParseResult;\n  if (!parseResult) {\n    context.onError(createCompilerError(32, dir.loc));\n    return;\n  }\n  finalizeForParseResult(parseResult, context);\n  const {\n    addIdentifiers,\n    removeIdentifiers,\n    scopes\n  } = context;\n  const {\n    source,\n    value,\n    key,\n    index\n  } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  if (context.prefixIdentifiers) {\n    value && addIdentifiers(value);\n    key && addIdentifiers(key);\n    index && addIdentifiers(index);\n  }\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (context.prefixIdentifiers) {\n      value && removeIdentifiers(value);\n      key && removeIdentifiers(key);\n      index && removeIdentifiers(index);\n    }\n    if (onExit) onExit();\n  };\n}\nfunction finalizeForParseResult(result, context) {\n  if (result.finalized) return;\n  if (context.prefixIdentifiers) {\n    result.source = processExpression(result.source, context);\n    if (result.key) {\n      result.key = processExpression(result.key, context, true);\n    }\n    if (result.index) {\n      result.index = processExpression(result.index, context, true);\n    }\n    if (result.value) {\n      result.value = processExpression(result.value, context, true);\n    }\n  }\n  result.finalized = true;\n}\nfunction createForLoopParams({\n  value,\n  key,\n  index\n}, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i]) break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      const slotProps = vSlot.exp;\n      if (context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps);\n      }\n      context.scopes.vSlot++;\n      return () => {\n        if (context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps);\n        }\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.forParseResult;\n    if (result) {\n      finalizeForParseResult(result, context);\n      const {\n        value,\n        key,\n        index\n      } = result;\n      const {\n        addIdentifiers,\n        removeIdentifiers\n      } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(props, children, false, true, children.length ? children[0].loc : loc);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const {\n    children,\n    loc\n  } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  if (!context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\n  }\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const {\n      arg,\n      exp\n    } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(createObjectProperty(arg || createSimpleExpression(\"default\", true), buildSlotFn(exp, void 0, children, loc)));\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(createCompilerError(37, slotDir.loc));\n      break;\n    }\n    hasTemplateSlots = true;\n    const {\n      children: slotChildren,\n      loc: slotLoc\n    } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));\n    } else if (vElse = findDir(slotElement, /^else(-if)?$/, true\n    /* allowEmpty */)) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, /^(else-)?if$/)) {\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(createCompilerError(30, vElse.loc));\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.forParseResult;\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context);\n        dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [parseResult.source, createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true)]));\n      } else {\n        context.onError(createCompilerError(32, vFor.loc));\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(createCompilerError(38, dirLoc));\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length &&\n    // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some(node2 => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(createCompilerError(39, implicitDefaultChildren[0].loc));\n      } else {\n        slotsProperties.push(buildDefaultSlotProperty(void 0, implicitDefaultChildren));\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`,\n  // 2 = compiled but dynamic = can skip normalization, but must run diff\n  // 1 = compiled and static = can skip normalization AND diff as optimized\n  createSimpleExpression(slotFlag + ``, false))), loc);\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [slots, createArrayExpression(dynamicSlots)]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [createObjectProperty(`name`, name), createObjectProperty(`fn`, fn)];\n  if (index != null) {\n    props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches)) return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children)) return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12) return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\nconst directiveImportMap = /* @__PURE__ */new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const {\n      tag,\n      props\n    } = node;\n    const isComponent = node.tagType === 1;\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock =\n    // dynamic component may resolve to plain elements\n    isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && (\n    // <svg> and <foreignObject> must be forced into blocks so that block\n    // updates inside get proper isSVG flag at runtime. (#639, #643)\n    // This is technically web-specific, but splitting the logic out of core\n    // leads to too much unnecessary complexity.\n    tag === \"svg\" || tag === \"foreignObject\" || tag === \"math\");\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(node, context, void 0, isComponent, isDynamicComponent);\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context))) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n      }\n      const shouldBuildAsSlots = isComponent &&\n      // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT &&\n      // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const {\n          slots,\n          hasDynamicSlots\n        } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (dynamicPropNames && dynamicPropNames.length) {\n      vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n    }\n    node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, patchFlag === 0 ? void 0 : patchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false, isComponent, node.loc);\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let {\n    tag\n  } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(node, \"is\", false, true\n  /* allow empty */);\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\", context)) {\n      let exp;\n      if (isProp.type === 6) {\n        exp = isProp.value && createSimpleExpression(isProp.value.content, true);\n      } else {\n        exp = isProp.exp;\n        if (!exp) {\n          exp = createSimpleExpression(`is`, false, isProp.arg.loc);\n          {\n            exp = isProp.exp = processExpression(exp, context);\n          }\n        }\n      }\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [exp]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr) context.helper(builtIn);\n    return builtIn;\n  }\n  {\n    const fromSetup = resolveSetupReference(tag, context);\n    if (fromSetup) {\n      return fromSetup;\n    }\n    const dotIndex = tag.indexOf(\".\");\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\n      if (ns) {\n        return ns + tag.slice(dotIndex);\n      }\n    }\n  }\n  if (context.selfName && shared.capitalize(shared.camelize(tag)) === context.selfName) {\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag + `__self`);\n    return toValidAssetId(tag, `component`);\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction resolveSetupReference(name, context) {\n  const bindings = context.bindingMetadata;\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return;\n  }\n  const camelName = shared.camelize(name);\n  const PascalName = shared.capitalize(camelName);\n  const checkType = type => {\n    if (bindings[name] === type) {\n      return name;\n    }\n    if (bindings[camelName] === type) {\n      return camelName;\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName;\n    }\n  };\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\n  if (fromConst) {\n    return context.inline ?\n    // in inline mode, const setup bindings (e.g. imports) can be used as-is\n    fromConst : `$setup[${JSON.stringify(fromConst)}]`;\n  }\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\n  if (fromMaybeRef) {\n    return context.inline ?\n    // setup scope bindings that may be refs need to be unrefed\n    `${context.helperString(UNREF)}(${fromMaybeRef})` : `$setup[${JSON.stringify(fromMaybeRef)}]`;\n  }\n  const fromProps = checkType(\"props\");\n  if (fromProps) {\n    return `${context.helperString(UNREF)}(${context.inline ? \"__props\" : \"$props\"}[${JSON.stringify(fromProps)}])`;\n  }\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n  const {\n    tag,\n    loc: elementLoc,\n    children\n  } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = arg => {\n    if (properties.length) {\n      mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n      properties = [];\n    }\n    if (arg) mergeArgs.push(arg);\n  };\n  const pushRefVForMarker = () => {\n    if (context.scopes.vFor > 0) {\n      properties.push(createObjectProperty(createSimpleExpression(\"ref_for\", true), createSimpleExpression(\"true\")));\n    }\n  };\n  const analyzePatchFlag = ({\n    key,\n    value\n  }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = shared.isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) &&\n      // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" &&\n      // omit v-model handlers\n      name !== \"onUpdate:modelValue\" &&\n      // omit onVnodeXXX hooks\n      !shared.isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && shared.isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (isEventHandler && value.type === 14) {\n        value = value.arguments[0];\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const {\n        loc,\n        name,\n        nameLoc,\n        value\n      } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        pushRefVForMarker();\n        if (value && context.inline) {\n          const binding = context.bindingMetadata[value.content];\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\n            isStatic = false;\n            properties.push(createObjectProperty(createSimpleExpression(\"ref_key\", true), createSimpleExpression(value.content, true, value.loc)));\n          }\n        }\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\", context))) {\n        continue;\n      }\n      properties.push(createObjectProperty(createSimpleExpression(name, true, nameLoc), createSimpleExpression(value ? value.content : \"\", isStatic, value ? value.loc : loc)));\n    } else {\n      const {\n        name,\n        arg,\n        exp,\n        loc,\n        modifiers\n      } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent) {\n          context.onError(createCompilerError(40, loc));\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\", context))) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n      // #938: elements with dynamic keys should be forced into blocks\n      isVBind && isStaticArgOf(arg, \"key\") ||\n      // inline before-update hooks need to force block so that it is invoked\n      // before children\n      isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\")) {\n        pushRefVForMarker();\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushRefVForMarker();\n            pushMergeArg();\n            {\n              if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\", context)) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(createCompilerError(isVBind ? 34 : 35, loc));\n        }\n        continue;\n      }\n      if (isVBind && modifiers.some(mod => mod.content === \"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const {\n          props: props2,\n          needRuntime\n        } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (shared.isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!shared.isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\n          }\n          if (styleProp && (\n          // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` ||\n          // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\n          }\n        } else {\n          propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [propsExpression])]);\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || shared.isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\n    if (fromSetup) {\n      dirArgs.push(fromSetup);\n    } else {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const {\n    loc\n  } = dir;\n  if (dir.exp) dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1) propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const {\n      children,\n      loc\n    } = node;\n    const {\n      slotName,\n      slotProps\n    } = processSlotOutlet(node, context);\n    const slotArgs = [context.prefixIdentifiers ? `_ctx.$slots` : `$slots`, slotName, \"{}\", \"undefined\", \"true\"];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = shared.camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp) {\n          slotName = p.exp;\n        } else if (p.arg && p.arg.type === 4) {\n          const name = shared.camelize(p.arg.content);\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\n          {\n            slotName = p.exp = processExpression(p.exp, context);\n          }\n        }\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = shared.camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const {\n      props,\n      directives\n    } = buildProps(node, context, nonNameProps, false, false);\n    slotProps = props;\n    if (directives.length) {\n      context.onError(createCompilerError(36, directives[0].loc));\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\nconst transformOn = (dir, node, context, augmentor) => {\n  const {\n    loc,\n    modifiers,\n    arg\n  } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ?\n      // for non-element and vnode lifecycle event listeners, auto convert\n      // it to camelCase. See issue #2249\n      shared.toHandlerKey(shared.camelize(rawName)) :\n      // preserve case for plain element listeners that have uppercase\n      // letters, as these may be custom elements' custom events\n      `on:${rawName}`;\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([`${context.helperString(TO_HANDLER_KEY)}(`, arg, `)`]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp, context);\n    const isInlineStatement = !(isMemberExp || isFnExpression(exp, context));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`);\n      exp = dir.exp = processExpression(exp, context, false, hasMultipleStatements);\n      isInlineStatement && context.removeIdentifiers(`$event`);\n      shouldCache = context.cacheHandlers &&\n      // unnecessary to cache inside v-once\n      !context.inVOnce &&\n      // runtime constants don't need to be cached\n      // (this is analyzed by compileScript in SFC <script setup>)\n      !(exp.type === 4 && exp.constType > 0) &&\n      // #1541 bail if this is a member exp handler passed to a component -\n      // we need to use the original function to preserve arity,\n      // e.g. <transition> relies on checking cb.length to determine\n      // transition end handling. Inline function is ok since its arity\n      // is preserved even when cached.\n      !(isMemberExp && node.tagType === 1) &&\n      // bail if the function references closure variables (v-for, v-slot)\n      // it must be passed fresh to avoid stale values.\n      !hasScopeRef(exp, context.identifiers);\n      if (shouldCache && isMemberExp) {\n        if (exp.type === 4) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\n        }\n      }\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([`${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\n//@ts-ignore\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`, exp, hasMultipleStatements ? `}` : `)`]);\n    }\n  }\n  let ret = {\n    props: [createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach(p => p.key.isHandlerKey = true);\n  return ret;\n};\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression([child], child.loc);\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText ||\n      // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 &&\n      // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(p => p.type === 7 && !context.directiveTransforms[p.name]) &&\n      // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === \"template\"))) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(1 + ``);\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\n          };\n        }\n      }\n    };\n  }\n};\nconst seen$1 = /* @__PURE__ */new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(cur.codegenNode, true\n        /* isVNode */);\n      }\n    };\n  }\n};\nconst transformModel = (dir, node, context) => {\n  const {\n    exp,\n    arg\n  } = dir;\n  if (!exp) {\n    context.onError(createCompilerError(41, dir.loc));\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\n  if (!expString.trim() || !isMemberExpression(exp, context) && !maybeRef) {\n    context.onError(createCompilerError(42, exp.loc));\n    return createTransformProps();\n  }\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\n    context.onError(createCompilerError(43, exp.loc));\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${shared.camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  if (maybeRef) {\n    if (bindingType === \"setup-ref\") {\n      assignmentExp = createCompoundExpression([`${eventArg} => ((`, createSimpleExpression(rawExp, false, exp.loc), `).value = $event)`]);\n    } else {\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\n      assignmentExp = createCompoundExpression([`${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`, createSimpleExpression(rawExp, false, exp.loc), `).value = $event : ${altAssignment})`]);\n    }\n  } else {\n    assignmentExp = createCompoundExpression([`${eventArg} => ((`, exp, `) = $event)`]);\n  }\n  const props = [\n  // modelValue: foo\n  createObjectProperty(propName, dir.exp),\n  // \"onUpdate:modelValue\": $event => (foo = $event)\n  createObjectProperty(eventName, assignmentExp)];\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\n    props[1].value = context.cache(props[1].value);\n  }\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map(m => m.content).map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2)));\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return {\n    props\n  };\n}\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTERS\", context)) {\n    return;\n  }\n  if (node.type === 5) {\n    rewriteFilter(node.content, context);\n  } else if (node.type === 1) {\n    node.props.forEach(prop => {\n      if (prop.type === 7 && prop.name !== \"for\" && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== \"object\") continue;\n      if (child.type === 4) {\n        parseFilter(child, context);\n      } else if (child.type === 8) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c,\n    prev,\n    i,\n    expression,\n    filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 39 && prev !== 92) inSingle = false;\n    } else if (inDouble) {\n      if (c === 34 && prev !== 92) inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 96 && prev !== 92) inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 47 && prev !== 92) inRegex = false;\n    } else if (c === 124 &&\n    // pipe\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\n      if (expression === void 0) {\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 34:\n          inDouble = true;\n          break;\n        // \"\n        case 39:\n          inSingle = true;\n          break;\n        // '\n        case 96:\n          inTemplateString = true;\n          break;\n        // `\n        case 40:\n          paren++;\n          break;\n        // (\n        case 41:\n          paren--;\n          break;\n        // )\n        case 91:\n          square++;\n          break;\n        // [\n        case 93:\n          square--;\n          break;\n        // ]\n        case 123:\n          curly++;\n          break;\n        // {\n        case 125:\n          curly--;\n          break;\n      }\n      if (c === 47) {\n        let j = i - 1;\n        let p;\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== \" \") break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === void 0) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n    node.ast = void 0;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf(\"(\");\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, \"filter\")}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, \"filter\")}(${exp}${args !== \")\" ? \",\" + args : args}`;\n  }\n}\nconst seen = /* @__PURE__ */new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [dir.exp, createFunctionExpression(void 0, codegenNode), `_cache`, String(context.cached.length)]);\n        context.cached.push(null);\n      }\n    };\n  }\n};\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [[transformOnce, transformIf, transformMemo, transformFor, ...[transformFilter], ...(prefixIdentifiers ? [\n  // order is important\n  trackVForSlotScopes, transformExpression] : []), transformSlotOutlet, transformElement, trackSlotScopes, transformText], {\n    on: transformOn,\n    bind: transformBind,\n    model: transformModel\n  }];\n}\nfunction baseCompile(source, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const resolvedOptions = shared.extend({}, options, {\n    prefixIdentifiers\n  });\n  const ast = shared.isString(source) ? baseParse(source, resolvedOptions) : source;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\n  if (options.isTS) {\n    const {\n      expressionPlugins\n    } = options;\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\n      options.expressionPlugins = [...(expressionPlugins || []), \"typescript\"];\n    }\n  }\n  transform(ast, shared.extend({}, resolvedOptions, {\n    nodeTransforms: [...nodeTransforms, ...(options.nodeTransforms || [])\n    // user transforms\n    ],\n    directiveTransforms: shared.extend({}, directiveTransforms, options.directiveTransforms || {}\n    // user transforms\n    )\n  }));\n  return generate(ast, resolvedOptions);\n}\nconst BindingTypes = {\n  \"DATA\": \"data\",\n  \"PROPS\": \"props\",\n  \"PROPS_ALIASED\": \"props-aliased\",\n  \"SETUP_LET\": \"setup-let\",\n  \"SETUP_CONST\": \"setup-const\",\n  \"SETUP_REACTIVE_CONST\": \"setup-reactive-const\",\n  \"SETUP_MAYBE_REF\": \"setup-maybe-ref\",\n  \"SETUP_REF\": \"setup-ref\",\n  \"OPTIONS\": \"options\",\n  \"LITERAL_CONST\": \"literal-const\"\n};\nconst noopDirectiveTransform = () => ({\n  props: []\n});\nexports.generateCodeFrame = shared.generateCodeFrame;\nexports.BASE_TRANSITION = BASE_TRANSITION;\nexports.BindingTypes = BindingTypes;\nexports.CAMELIZE = CAMELIZE;\nexports.CAPITALIZE = CAPITALIZE;\nexports.CREATE_BLOCK = CREATE_BLOCK;\nexports.CREATE_COMMENT = CREATE_COMMENT;\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nexports.CREATE_SLOTS = CREATE_SLOTS;\nexports.CREATE_STATIC = CREATE_STATIC;\nexports.CREATE_TEXT = CREATE_TEXT;\nexports.CREATE_VNODE = CREATE_VNODE;\nexports.CompilerDeprecationTypes = CompilerDeprecationTypes;\nexports.ConstantTypes = ConstantTypes;\nexports.ElementTypes = ElementTypes;\nexports.ErrorCodes = ErrorCodes;\nexports.FRAGMENT = FRAGMENT;\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\nexports.IS_REF = IS_REF;\nexports.KEEP_ALIVE = KEEP_ALIVE;\nexports.MERGE_PROPS = MERGE_PROPS;\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\nexports.Namespaces = Namespaces;\nexports.NodeTypes = NodeTypes;\nexports.OPEN_BLOCK = OPEN_BLOCK;\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nexports.RENDER_LIST = RENDER_LIST;\nexports.RENDER_SLOT = RENDER_SLOT;\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nexports.SUSPENSE = SUSPENSE;\nexports.TELEPORT = TELEPORT;\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nexports.TO_HANDLERS = TO_HANDLERS;\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\nexports.TS_NODE_TYPES = TS_NODE_TYPES;\nexports.UNREF = UNREF;\nexports.WITH_CTX = WITH_CTX;\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\nexports.WITH_MEMO = WITH_MEMO;\nexports.advancePositionWithClone = advancePositionWithClone;\nexports.advancePositionWithMutation = advancePositionWithMutation;\nexports.assert = assert;\nexports.baseCompile = baseCompile;\nexports.baseParse = baseParse;\nexports.buildDirectiveArgs = buildDirectiveArgs;\nexports.buildProps = buildProps;\nexports.buildSlots = buildSlots;\nexports.checkCompatEnabled = checkCompatEnabled;\nexports.convertToBlock = convertToBlock;\nexports.createArrayExpression = createArrayExpression;\nexports.createAssignmentExpression = createAssignmentExpression;\nexports.createBlockStatement = createBlockStatement;\nexports.createCacheExpression = createCacheExpression;\nexports.createCallExpression = createCallExpression;\nexports.createCompilerError = createCompilerError;\nexports.createCompoundExpression = createCompoundExpression;\nexports.createConditionalExpression = createConditionalExpression;\nexports.createForLoopParams = createForLoopParams;\nexports.createFunctionExpression = createFunctionExpression;\nexports.createIfStatement = createIfStatement;\nexports.createInterpolation = createInterpolation;\nexports.createObjectExpression = createObjectExpression;\nexports.createObjectProperty = createObjectProperty;\nexports.createReturnStatement = createReturnStatement;\nexports.createRoot = createRoot;\nexports.createSequenceExpression = createSequenceExpression;\nexports.createSimpleExpression = createSimpleExpression;\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nexports.createTemplateLiteral = createTemplateLiteral;\nexports.createTransformContext = createTransformContext;\nexports.createVNodeCall = createVNodeCall;\nexports.errorMessages = errorMessages;\nexports.extractIdentifiers = extractIdentifiers;\nexports.findDir = findDir;\nexports.findProp = findProp;\nexports.forAliasRE = forAliasRE;\nexports.generate = generate;\nexports.getBaseTransformPreset = getBaseTransformPreset;\nexports.getConstantType = getConstantType;\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\nexports.getVNodeHelper = getVNodeHelper;\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\nexports.hasScopeRef = hasScopeRef;\nexports.helperNameMap = helperNameMap;\nexports.injectProp = injectProp;\nexports.isCoreComponent = isCoreComponent;\nexports.isFnExpression = isFnExpression;\nexports.isFnExpressionBrowser = isFnExpressionBrowser;\nexports.isFnExpressionNode = isFnExpressionNode;\nexports.isFunctionType = isFunctionType;\nexports.isInDestructureAssignment = isInDestructureAssignment;\nexports.isInNewExpression = isInNewExpression;\nexports.isMemberExpression = isMemberExpression;\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\nexports.isMemberExpressionNode = isMemberExpressionNode;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isSimpleIdentifier = isSimpleIdentifier;\nexports.isSlotOutlet = isSlotOutlet;\nexports.isStaticArgOf = isStaticArgOf;\nexports.isStaticExp = isStaticExp;\nexports.isStaticProperty = isStaticProperty;\nexports.isStaticPropertyKey = isStaticPropertyKey;\nexports.isTemplateNode = isTemplateNode;\nexports.isText = isText$1;\nexports.isVSlot = isVSlot;\nexports.locStub = locStub;\nexports.noopDirectiveTransform = noopDirectiveTransform;\nexports.processExpression = processExpression;\nexports.processFor = processFor;\nexports.processIf = processIf;\nexports.processSlotOutlet = processSlotOutlet;\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\nexports.resolveComponentType = resolveComponentType;\nexports.stringifyExpression = stringifyExpression;\nexports.toValidAssetId = toValidAssetId;\nexports.trackSlotScopes = trackSlotScopes;\nexports.trackVForSlotScopes = trackVForSlotScopes;\nexports.transform = transform;\nexports.transformBind = transformBind;\nexports.transformElement = transformElement;\nexports.transformExpression = transformExpression;\nexports.transformModel = transformModel;\nexports.transformOn = transformOn;\nexports.traverseNode = traverseNode;\nexports.unwrapTSNode = unwrapTSNode;\nexports.walkBlockDeclarations = walkBlockDeclarations;\nexports.walkFunctionParams = walkFunctionParams;\nexports.walkIdentifiers = walkIdentifiers;\nexports.warnDeprecation = warnDeprecation;","map":{"version":3,"names":["require","Object","defineProperty","exports","value","shared","decode_js","parser","estreeWalker","sourceMapJs","FRAGMENT","Symbol","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","registerRuntimeHelpers","helpers","getOwnPropertySymbols","forEach","s","Namespaces","NodeTypes","ElementTypes","ConstantTypes","locStub","start","line","column","offset","end","source","createRoot","children","type","Set","components","directives","hoists","imports","cached","temps","codegenNode","loc","createVNodeCall","context","tag","props","patchFlag","dynamicProps","isBlock","disableTracking","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","key","isString","createSimpleExpression","content","isStatic","constType","createInterpolation","createCompoundExpression","createCallExpression","callee","args","arguments","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","test","consequent","alternate","createCacheExpression","index","needPauseTracking","needArraySpread","createBlockStatement","body","createTemplateLiteral","createIfStatement","createAssignmentExpression","left","right","createSequenceExpression","expressions","createReturnStatement","ssr","convertToBlock","node","removeHelper","defaultDelimitersOpen","Uint8Array","defaultDelimitersClose","isTagStartChar","c","isWhitespace","isEndOfTagSection","toCharCodes","str","ret","length","i","charCodeAt","Sequences","Cdata","CdataEnd","CommentEnd","ScriptEnd","StyleEnd","TitleEnd","TextareaEnd","Tokenizer","constructor","stack","cbs","state","buffer","sectionStart","entityStart","baseState","inRCDATA","inXML","inVPre","newlines","mode","delimiterOpen","delimiterClose","delimiterIndex","currentSequence","sequenceIndex","entityDecoder","EntityDecoder","htmlDecodeTree","cp","consumed","emitCodePoint","inSFCRoot","reset","getPos","newlineIndex","peek","stateText","ontext","startEntity","stateInterpolationOpen","stateInRCDATA","stateInterpolation","stateInterpolationClose","oninterpolation","stateSpecialStartSequence","isEnd","isMatch","stateInTagName","endOfText","actualIndex","stateInClosingTagName","fastForwardTo","Number","stateCDATASequence","stateInDeclaration","cc","push","stateInCommentLike","oncdata","oncomment","startSpecial","sequence","enterRCDATA","stateBeforeTagName","handleTagName","stateInSFCRootTagName","slice","onopentagname","stateBeforeAttrName","stateBeforeClosingTagName","onerr","onclosetag","stateAfterClosingTagName","onopentagend","handleAttrStart","ondirname","stateInSelfClosingTag","onselfclosingtag","stateInAttrName","onattribname","handleAttrNameEnd","stateInDirName","stateInDirArg","ondirarg","stateInDynamicDirArg","stateInDirModifier","ondirmodifier","onattribnameend","stateAfterAttrName","onattribend","stateBeforeAttrValue","stateInAttrValueNoQuotes","handleInAttrValue","quote","onattribdata","stateInAttrValueDoubleQuotes","stateInAttrValueSingleQuotes","stateBeforeDeclaration","stateInProcessingInstruction","onprocessinginstruction","stateBeforeComment","stateInSpecialComment","stateBeforeSpecialS","stateBeforeSpecialT","DecodingMode","Legacy","Attribute","stateInEntity","write","parse","input","cleanup","finish","handleTrailingData","onend","endIndex","onattribentity","fromCodePoint","ontextentity","CompilerDeprecationTypes","deprecationData","message","link","getCompatValue","compatConfig","isCompatEnabled","checkCompatEnabled","enabled","warnDeprecation","val","msg","err","SyntaxError","code","onWarn","defaultOnError","error","defaultOnWarn","createCompilerError","messages","additionalMessage","errorMessages","String","ErrorCodes","walkIdentifiers","root","onIdentifier","includeAll","parentStack","knownIds","create","rootExp","expression","walk","enter","parent","startsWith","TS_NODE_TYPES","includes","skip","isLocal","name","isRefed","isReferencedIdentifier","inPattern","isFunctionType","scopeIds","id","markKnownIds","walkFunctionParams","markScopeIdentifier","walkBlockDeclarations","param","extractIdentifiers","isForStatement","walkForStatement","leave","pop","isReferenced","isInDestructureAssignment","p","endsWith","isInNewExpression","onIdent","block","stmt","declare","decl","declarations","isVar","variable","init","kind","nodes","object","prop","argument","element","child","has","add","isStaticProperty","computed","isStaticPropertyKey","grandparent","property","superClass","local","unwrapTSNode","isStaticExp","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","getExpSource","exp","isMemberExpressionBrowser","path","trim","replace","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","char","charAt","isMemberExpressionNode","ast","parseExpression","plugins","expressionPlugins","e","isMemberExpression","fnExpRE","isFnExpressionBrowser","isFnExpressionNode","isFnExpression","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","assert","condition","Error","findDir","allowEmpty","findProp","dynamicOnly","isStaticArgOf","arg","hasDynamicKeyVBind","some","isText$1","isVSlot","isTemplateNode","tagType","isSlotOutlet","propsHelperSet","getUnnormalizedProps","callPath","concat","injectProp","propsWithInjection","parentCall","first","hasProp","unshift","result","propKeyName","toValidAssetId","searchValue","replaceValue","toString","hasScopeRef","ids","keys","branches","b","isObject","getMemoedVNodeCall","forAliasRE","defaultParserOptions","parseMode","ns","delimiters","getNamespace","isVoidTag","NO","isPreTag","isIgnoreNewlineTag","isCustomElement","onError","comments","prefixIdentifiers","currentOptions","currentRoot","currentInput","currentOpenTag","currentProp","currentAttrValue","currentAttrStartIndex","currentAttrEndIndex","inPre","currentVPreBoundary","tokenizer","emitError","onText","getSlice","innerStart","innerEnd","decodeHTML","addNode","createExp","getLoc","endOpenTag","found","toLowerCase","j","el","shift","onCloseTag","backTrack","isSelfClosing","nameLoc","raw","rawName","modifiers","dirToAttr","setLocEnd","mod","condense","expParseMode","forParseResult","parseForExpression","syncIndex","findIndex","splice","forIteratorRE","stripParensRE","inMatch","match","LHS","RHS","createAliasExpression","asParam","indexOf","finalized","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","innerLoc","lastNode","isImplied","lookAhead","extend","isFragmentTemplate","condenseWhitespace","inlineTemplateProp","find","specialTemplateDir","isUpperCase","isBuiltInComponent","isNativeTag","windowsNewlineRE","shouldCondense","whitespace","removedWhitespace","isAllWhitespace","prev","next","hasNewlineChar","filter","Boolean","prevCharIsWhitespace","dir","attr","options","program","baseParse","cacheStatic","isSingleElementRoot","doNotHoistNode","inFor","toCache","constantType","getConstantType","flag","getGeneratedPropsConstantType","getNodeProps","hoist","scopes","vSlot","i2","cachedAsArray","isArray","getCacheExpression","slot","getSlotNode","slotName","cache","hmr","node2","transformHoist","constantCache","get","returnType2","generatedPropsType","set","childType","expType","returnType","isSymbol","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","createTransformContext","filename","hoistStatic","cacheHandlers","nodeTransforms","directiveTransforms","NOOP","scopeId","slotted","ssrCssVars","bindingMetadata","EMPTY_OBJ","inline","isTS","nameMatch","selfName","capitalize","camelize","Map","WeakMap","identifiers","vFor","vPre","vOnce","grandParent","currentNode","childIndex","inVOnce","count","currentCount","delete","helperString","replaceNode","removeNode","list","removalIndex","onNodeRemoved","addIdentifiers","addId","removeIdentifiers","removeId","identifier","hoisted","isVNode","cacheExp","filters","transform","traverseNode","createRootCodegen","transformed","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","fn","matches","n","PURE_ANNOTATION","aliasHelper","createCodegenContext","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","map","addMapping","indent","deindent","withoutNewLine","repeat","_names","_mappings","originalLine","originalColumn","generatedLine","generatedColumn","SourceMapGenerator","setSourceContent","_sources","generate","onContextCreated","Array","from","hasHelpers","useWithBlock","genScopeId","isSetupInlined","preambleContext","genModulePreamble","genFunctionPreamble","functionName","signature","join","genAssets","genNode","preamble","toJSON","VueBinding","JSON","stringify","staticHelpers","ssrHelpers","genHoists","size","genImports","assets","resolver","maybeSelfReference","importsOptions","isText","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","genTemplateLiteral","genIfStatement","genAssignmentExpression","genSequenceExpression","genReturnStatement","genExpressionAsPropertyKey","text","patchFlagString","callHelper","genNullableArgs","isNonScopedSlot","needNewline","needsParens","isNested","l","isLiteralWhitelisted","makeMap","transformExpression","processExpression","asParams","asRawStatements","localVars","rewriteIdentifier","hasOwn","isAssignmentLVal","isUpdateArg","isDestructureAssignment","isNewExpression","wrapWithUnref","raw2","wrapped","isConst","rVal","operator","rExp","rawExp","rExpString","stringifyExpression","prefix","isPrefix","postfix","genPropsAccessExp","__propsAliases","isScopeVarReference","isAllowedGlobal","isGloballyAllowed","isLiteral","sourceType","_","needPrefix","canPrefix","shorthand","isConstant","sort","a","last","leadingText","transformIf","processIf","ifNode","branch","isRoot","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","userKey","isSameKey","isTemplateIf","keyIndex","createChildrenCodegenNode","keyProperty","firstChild","needFragmentWrapper","vnodeCall","branchExp","transformBind","_node","transformBindShorthand","injectPrefix","propName","transformFor","processFor","forNode","renderExp","isTemplate","memo","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","slotOutlet","loop","createForLoopParams","parseResult","finalizeForParseResult","valueAlias","keyAlias","objectIndexAlias","memoArgs","createParamsList","defaultFallback","trackSlotScopes","slotProps","trackVForSlotScopes","buildClientSlotFn","_vForExp","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","conditionalBranchIndex","slotElement","slotDir","slotChildren","slotLoc","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","buildDefaultSlotProperty","children2","isNonWhitespaceContent","slotFlag","hasForwardedSlots","slots","directiveImportMap","transformElement","postTransformElement","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","shouldBuildAsSlots","hasDynamicTextChild","stringifyDynamicPropNames","isExplicitDynamic","isComponentTag","isProp","builtIn","fromSetup","resolveSetupReference","dotIndex","bindings","__isScriptSetup","camelName","PascalName","checkType","fromConst","fromMaybeRef","fromProps","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","pushMergeArg","dedupeProperties","pushRefVForMarker","analyzePatchFlag","isEventHandler","isOn","isReservedProp","binding","isVBind","isVOn","directiveTransform","props2","needRuntime","isBuiltInDirective","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","deduped","existing","mergeAsArray","incoming","dirArgs","runtime","trueExpression","modifier","propsNamesString","transformSlotOutlet","processSlotOutlet","slotArgs","expectedLen","nonNameProps","transformOn","augmentor","eventName","eventString","toHandlerKey","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformText","currentContainer","hasText","callArgs","seen$1","WeakSet","transformOnce","cur","transformModel","createTransformProps","expString","bindingType","maybeRef","assignmentExp","eventArg","altAssignment","m","modifiersKey","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","seen","transformMemo","getBaseTransformPreset","on","bind","model","baseCompile","isModuleMode","resolvedOptions","BindingTypes","noopDirectiveTransform","generateCodeFrame"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/node_modules/@vue/compiler-core/dist/compiler-core.cjs.prod.js"],"sourcesContent":["/**\n* @vue/compiler-core v3.5.6\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\nvar decode_js = require('entities/lib/decode.js');\nvar parser = require('@babel/parser');\nvar estreeWalker = require('estree-walker');\nvar sourceMapJs = require('source-map-js');\n\nconst FRAGMENT = Symbol(``);\nconst TELEPORT = Symbol(``);\nconst SUSPENSE = Symbol(``);\nconst KEEP_ALIVE = Symbol(``);\nconst BASE_TRANSITION = Symbol(\n  ``\n);\nconst OPEN_BLOCK = Symbol(``);\nconst CREATE_BLOCK = Symbol(``);\nconst CREATE_ELEMENT_BLOCK = Symbol(\n  ``\n);\nconst CREATE_VNODE = Symbol(``);\nconst CREATE_ELEMENT_VNODE = Symbol(\n  ``\n);\nconst CREATE_COMMENT = Symbol(\n  ``\n);\nconst CREATE_TEXT = Symbol(\n  ``\n);\nconst CREATE_STATIC = Symbol(\n  ``\n);\nconst RESOLVE_COMPONENT = Symbol(\n  ``\n);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  ``\n);\nconst RESOLVE_DIRECTIVE = Symbol(\n  ``\n);\nconst RESOLVE_FILTER = Symbol(\n  ``\n);\nconst WITH_DIRECTIVES = Symbol(\n  ``\n);\nconst RENDER_LIST = Symbol(``);\nconst RENDER_SLOT = Symbol(``);\nconst CREATE_SLOTS = Symbol(``);\nconst TO_DISPLAY_STRING = Symbol(\n  ``\n);\nconst MERGE_PROPS = Symbol(``);\nconst NORMALIZE_CLASS = Symbol(\n  ``\n);\nconst NORMALIZE_STYLE = Symbol(\n  ``\n);\nconst NORMALIZE_PROPS = Symbol(\n  ``\n);\nconst GUARD_REACTIVE_PROPS = Symbol(\n  ``\n);\nconst TO_HANDLERS = Symbol(``);\nconst CAMELIZE = Symbol(``);\nconst CAPITALIZE = Symbol(``);\nconst TO_HANDLER_KEY = Symbol(\n  ``\n);\nconst SET_BLOCK_TRACKING = Symbol(\n  ``\n);\nconst PUSH_SCOPE_ID = Symbol(``);\nconst POP_SCOPE_ID = Symbol(``);\nconst WITH_CTX = Symbol(``);\nconst UNREF = Symbol(``);\nconst IS_REF = Symbol(``);\nconst WITH_MEMO = Symbol(``);\nconst IS_MEMO_SAME = Symbol(``);\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\n    helperNameMap[s] = helpers[s];\n  });\n}\n\nconst Namespaces = {\n  \"HTML\": 0,\n  \"0\": \"HTML\",\n  \"SVG\": 1,\n  \"1\": \"SVG\",\n  \"MATH_ML\": 2,\n  \"2\": \"MATH_ML\"\n};\nconst NodeTypes = {\n  \"ROOT\": 0,\n  \"0\": \"ROOT\",\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"TEXT\": 2,\n  \"2\": \"TEXT\",\n  \"COMMENT\": 3,\n  \"3\": \"COMMENT\",\n  \"SIMPLE_EXPRESSION\": 4,\n  \"4\": \"SIMPLE_EXPRESSION\",\n  \"INTERPOLATION\": 5,\n  \"5\": \"INTERPOLATION\",\n  \"ATTRIBUTE\": 6,\n  \"6\": \"ATTRIBUTE\",\n  \"DIRECTIVE\": 7,\n  \"7\": \"DIRECTIVE\",\n  \"COMPOUND_EXPRESSION\": 8,\n  \"8\": \"COMPOUND_EXPRESSION\",\n  \"IF\": 9,\n  \"9\": \"IF\",\n  \"IF_BRANCH\": 10,\n  \"10\": \"IF_BRANCH\",\n  \"FOR\": 11,\n  \"11\": \"FOR\",\n  \"TEXT_CALL\": 12,\n  \"12\": \"TEXT_CALL\",\n  \"VNODE_CALL\": 13,\n  \"13\": \"VNODE_CALL\",\n  \"JS_CALL_EXPRESSION\": 14,\n  \"14\": \"JS_CALL_EXPRESSION\",\n  \"JS_OBJECT_EXPRESSION\": 15,\n  \"15\": \"JS_OBJECT_EXPRESSION\",\n  \"JS_PROPERTY\": 16,\n  \"16\": \"JS_PROPERTY\",\n  \"JS_ARRAY_EXPRESSION\": 17,\n  \"17\": \"JS_ARRAY_EXPRESSION\",\n  \"JS_FUNCTION_EXPRESSION\": 18,\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\n  \"JS_CONDITIONAL_EXPRESSION\": 19,\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\n  \"JS_CACHE_EXPRESSION\": 20,\n  \"20\": \"JS_CACHE_EXPRESSION\",\n  \"JS_BLOCK_STATEMENT\": 21,\n  \"21\": \"JS_BLOCK_STATEMENT\",\n  \"JS_TEMPLATE_LITERAL\": 22,\n  \"22\": \"JS_TEMPLATE_LITERAL\",\n  \"JS_IF_STATEMENT\": 23,\n  \"23\": \"JS_IF_STATEMENT\",\n  \"JS_ASSIGNMENT_EXPRESSION\": 24,\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\n  \"JS_SEQUENCE_EXPRESSION\": 25,\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\n  \"JS_RETURN_STATEMENT\": 26,\n  \"26\": \"JS_RETURN_STATEMENT\"\n};\nconst ElementTypes = {\n  \"ELEMENT\": 0,\n  \"0\": \"ELEMENT\",\n  \"COMPONENT\": 1,\n  \"1\": \"COMPONENT\",\n  \"SLOT\": 2,\n  \"2\": \"SLOT\",\n  \"TEMPLATE\": 3,\n  \"3\": \"TEMPLATE\"\n};\nconst ConstantTypes = {\n  \"NOT_CONSTANT\": 0,\n  \"0\": \"NOT_CONSTANT\",\n  \"CAN_SKIP_PATCH\": 1,\n  \"1\": \"CAN_SKIP_PATCH\",\n  \"CAN_CACHE\": 2,\n  \"2\": \"CAN_CACHE\",\n  \"CAN_STRINGIFY\": 3,\n  \"3\": \"CAN_STRINGIFY\"\n};\nconst locStub = {\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 },\n  source: \"\"\n};\nfunction createRoot(children, source = \"\") {\n  return {\n    type: 0,\n    source,\n    children,\n    helpers: /* @__PURE__ */ new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: [],\n    temps: 0,\n    codegenNode: void 0,\n    loc: locStub\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: shared.isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: shared.isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, needPauseTracking = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    needPauseTracking,\n    needArraySpread: false,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\n\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\nfunction isTagStartChar(c) {\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\n}\nfunction isWhitespace(c) {\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\n}\nfunction isEndOfTagSection(c) {\n  return c === 47 || c === 62 || isWhitespace(c);\n}\nfunction toCharCodes(str) {\n  const ret = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n}\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([\n    60,\n    47,\n    116,\n    101,\n    120,\n    116,\n    97,\n    114,\n    101,\n    97\n  ])\n  // `</textarea\n};\nclass Tokenizer {\n  constructor(stack, cbs) {\n    this.stack = stack;\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = 1;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = 1;\n    /** For special parsing behavior inside of script and style tags. */\n    this.inRCDATA = false;\n    /** For disabling RCDATA tags handling */\n    this.inXML = false;\n    /** For disabling interpolation parsing in v-pre */\n    this.inVPre = false;\n    /** Record newline positions for fast line / column calculation */\n    this.newlines = [];\n    this.mode = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n    this.delimiterIndex = -1;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n    {\n      this.entityDecoder = new decode_js.EntityDecoder(\n        decode_js.htmlDecodeTree,\n        (cp, consumed) => this.emitCodePoint(cp, consumed)\n      );\n    }\n  }\n  get inSFCRoot() {\n    return this.mode === 2 && this.stack.length === 0;\n  }\n  reset() {\n    this.state = 1;\n    this.mode = 0;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.currentSequence = void 0;\n    this.newlines.length = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n  }\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  getPos(index) {\n    let line = 1;\n    let column = index + 1;\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i];\n      if (index > newlineIndex) {\n        line = i + 2;\n        column = index - newlineIndex;\n        break;\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index\n    };\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.index + 1);\n  }\n  stateText(c) {\n    if (c === 60) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (c === 38) {\n      this.startEntity();\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = 2;\n      this.delimiterIndex = 0;\n      this.stateInterpolationOpen(c);\n    }\n  }\n  stateInterpolationOpen(c) {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length;\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start);\n        }\n        this.state = 3;\n        this.sectionStart = start;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else if (this.inRCDATA) {\n      this.state = 32;\n      this.stateInRCDATA(c);\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInterpolation(c) {\n    if (c === this.delimiterClose[0]) {\n      this.state = 4;\n      this.delimiterIndex = 0;\n      this.stateInterpolationClose(c);\n    }\n  }\n  stateInterpolationClose(c) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\n        if (this.inRCDATA) {\n          this.state = 32;\n        } else {\n          this.state = 1;\n        }\n        this.sectionStart = this.index + 1;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else {\n      this.state = 3;\n      this.stateInterpolation(c);\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ? (\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c)\n    ) : (\n      // Otherwise, do a case-insensitive comparison\n      (c | 32) === this.currentSequence[this.sequenceIndex]\n    );\n    if (!isMatch) {\n      this.inRCDATA = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = 6;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  stateInRCDATA(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === 62 || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        this.inRCDATA = false;\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\n        if (c === 38) {\n          this.startEntity();\n        } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n          this.state = 2;\n          this.delimiterIndex = 0;\n          this.stateInterpolationOpen(c);\n        }\n      } else if (this.fastForwardTo(60)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === 60);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = 28;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = 23;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index);\n      if (cc === 10) {\n        this.newlines.push(this.index);\n      }\n      if (cc === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = 1;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  startSpecial(sequence, offset) {\n    this.enterRCDATA(sequence, offset);\n    this.state = 31;\n  }\n  enterRCDATA(sequence, offset) {\n    this.inRCDATA = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n  }\n  stateBeforeTagName(c) {\n    if (c === 33) {\n      this.state = 22;\n      this.sectionStart = this.index + 1;\n    } else if (c === 63) {\n      this.state = 24;\n      this.sectionStart = this.index + 1;\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index;\n      if (this.mode === 0) {\n        this.state = 6;\n      } else if (this.inSFCRoot) {\n        this.state = 34;\n      } else if (!this.inXML) {\n        if (c === 116) {\n          this.state = 30;\n        } else {\n          this.state = c === 115 ? 29 : 6;\n        }\n      } else {\n        this.state = 6;\n      }\n    } else if (c === 47) {\n      this.state = 8;\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c);\n    }\n  }\n  stateInSFCRootTagName(c) {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index);\n      if (tag !== \"template\") {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\n      }\n      this.handleTagName(c);\n    }\n  }\n  handleTagName(c) {\n    this.cbs.onopentagname(this.sectionStart, this.index);\n    this.sectionStart = -1;\n    this.state = 11;\n    this.stateBeforeAttrName(c);\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c)) ; else if (c === 62) {\n      {\n        this.cbs.onerr(14, this.index);\n      }\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = isTagStartChar(c) ? 9 : 27;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === 62 || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = 10;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === 62) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttrName(c) {\n    if (c === 62) {\n      this.cbs.onopentagend(this.index);\n      if (this.inRCDATA) {\n        this.state = 32;\n      } else {\n        this.state = 1;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === 47) {\n      this.state = 7;\n      if (this.peek() !== 62) {\n        this.cbs.onerr(22, this.index);\n      }\n    } else if (c === 60 && this.peek() === 47) {\n      this.cbs.onopentagend(this.index);\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!isWhitespace(c)) {\n      if (c === 61) {\n        this.cbs.onerr(\n          19,\n          this.index\n        );\n      }\n      this.handleAttrStart(c);\n    }\n  }\n  handleAttrStart(c) {\n    if (c === 118 && this.peek() === 45) {\n      this.state = 13;\n      this.sectionStart = this.index;\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\n      this.cbs.ondirname(this.index, this.index + 1);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 12;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === 62) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n      this.inRCDATA = false;\n    } else if (!isWhitespace(c)) {\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    }\n  }\n  stateInAttrName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 34 || c === 39 || c === 60) {\n      this.cbs.onerr(\n        17,\n        this.index\n      );\n    }\n  }\n  stateInDirName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 58) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else if (c === 46) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDirArg(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 91) {\n      this.state = 15;\n    } else if (c === 46) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDynamicDirArg(c) {\n    if (c === 93) {\n      this.state = 14;\n    } else if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\n      this.handleAttrNameEnd(c);\n      {\n        this.cbs.onerr(\n          27,\n          this.index\n        );\n      }\n    }\n  }\n  stateInDirModifier(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 46) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.sectionStart = this.index + 1;\n    }\n  }\n  handleAttrNameEnd(c) {\n    this.sectionStart = this.index;\n    this.state = 17;\n    this.cbs.onattribnameend(this.index);\n    this.stateAfterAttrName(c);\n  }\n  stateAfterAttrName(c) {\n    if (c === 61) {\n      this.state = 18;\n    } else if (c === 47 || c === 62) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.handleAttrStart(c);\n    }\n  }\n  stateBeforeAttrValue(c) {\n    if (c === 34) {\n      this.state = 19;\n      this.sectionStart = this.index + 1;\n    } else if (c === 39) {\n      this.state = 20;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = 21;\n      this.stateInAttrValueNoQuotes(c);\n    }\n  }\n  handleInAttrValue(c, quote) {\n    if (c === quote || false) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(\n        quote === 34 ? 3 : 2,\n        this.index + 1\n      );\n      this.state = 11;\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateInAttrValueDoubleQuotes(c) {\n    this.handleInAttrValue(c, 34);\n  }\n  stateInAttrValueSingleQuotes(c) {\n    this.handleInAttrValue(c, 39);\n  }\n  stateInAttrValueNoQuotes(c) {\n    if (isWhitespace(c) || c === 62) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(1, this.index);\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\n      this.cbs.onerr(\n        18,\n        this.index\n      );\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === 91) {\n      this.state = 26;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === 45 ? 25 : 23;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === 45) {\n      this.state = 28;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 23;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.oncomment(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n    {\n      this.baseState = this.state;\n      this.state = 33;\n      this.entityStart = this.index;\n      this.entityDecoder.startEntity(\n        this.baseState === 1 || this.baseState === 32 ? decode_js.DecodingMode.Legacy : decode_js.DecodingMode.Attribute\n      );\n    }\n  }\n  stateInEntity() {\n    {\n      const length = this.entityDecoder.write(this.buffer, this.index);\n      if (length >= 0) {\n        this.state = this.baseState;\n        if (length === 0) {\n          this.index = this.entityStart;\n        }\n      } else {\n        this.index = this.buffer.length - 1;\n      }\n    }\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse(input) {\n    this.buffer = input;\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index);\n      if (c === 10) {\n        this.newlines.push(this.index);\n      }\n      switch (this.state) {\n        case 1: {\n          this.stateText(c);\n          break;\n        }\n        case 2: {\n          this.stateInterpolationOpen(c);\n          break;\n        }\n        case 3: {\n          this.stateInterpolation(c);\n          break;\n        }\n        case 4: {\n          this.stateInterpolationClose(c);\n          break;\n        }\n        case 31: {\n          this.stateSpecialStartSequence(c);\n          break;\n        }\n        case 32: {\n          this.stateInRCDATA(c);\n          break;\n        }\n        case 26: {\n          this.stateCDATASequence(c);\n          break;\n        }\n        case 19: {\n          this.stateInAttrValueDoubleQuotes(c);\n          break;\n        }\n        case 12: {\n          this.stateInAttrName(c);\n          break;\n        }\n        case 13: {\n          this.stateInDirName(c);\n          break;\n        }\n        case 14: {\n          this.stateInDirArg(c);\n          break;\n        }\n        case 15: {\n          this.stateInDynamicDirArg(c);\n          break;\n        }\n        case 16: {\n          this.stateInDirModifier(c);\n          break;\n        }\n        case 28: {\n          this.stateInCommentLike(c);\n          break;\n        }\n        case 27: {\n          this.stateInSpecialComment(c);\n          break;\n        }\n        case 11: {\n          this.stateBeforeAttrName(c);\n          break;\n        }\n        case 6: {\n          this.stateInTagName(c);\n          break;\n        }\n        case 34: {\n          this.stateInSFCRootTagName(c);\n          break;\n        }\n        case 9: {\n          this.stateInClosingTagName(c);\n          break;\n        }\n        case 5: {\n          this.stateBeforeTagName(c);\n          break;\n        }\n        case 17: {\n          this.stateAfterAttrName(c);\n          break;\n        }\n        case 20: {\n          this.stateInAttrValueSingleQuotes(c);\n          break;\n        }\n        case 18: {\n          this.stateBeforeAttrValue(c);\n          break;\n        }\n        case 8: {\n          this.stateBeforeClosingTagName(c);\n          break;\n        }\n        case 10: {\n          this.stateAfterClosingTagName(c);\n          break;\n        }\n        case 29: {\n          this.stateBeforeSpecialS(c);\n          break;\n        }\n        case 30: {\n          this.stateBeforeSpecialT(c);\n          break;\n        }\n        case 21: {\n          this.stateInAttrValueNoQuotes(c);\n          break;\n        }\n        case 7: {\n          this.stateInSelfClosingTag(c);\n          break;\n        }\n        case 23: {\n          this.stateInDeclaration(c);\n          break;\n        }\n        case 22: {\n          this.stateBeforeDeclaration(c);\n          break;\n        }\n        case 25: {\n          this.stateBeforeComment(c);\n          break;\n        }\n        case 24: {\n          this.stateInProcessingInstruction(c);\n          break;\n        }\n        case 33: {\n          this.stateInEntity();\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.cleanup();\n    this.finish();\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.sectionStart !== this.index) {\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  finish() {\n    if (this.state === 33) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === 28) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex);\n      }\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9) ; else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    {\n      if (this.baseState !== 1 && this.baseState !== 32) {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.onattribdata(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.onattribentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      } else {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.ontext(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.ontextentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      }\n    }\n  }\n}\n\nconst CompilerDeprecationTypes = {\n  \"COMPILER_IS_ON_ELEMENT\": \"COMPILER_IS_ON_ELEMENT\",\n  \"COMPILER_V_BIND_SYNC\": \"COMPILER_V_BIND_SYNC\",\n  \"COMPILER_V_BIND_OBJECT_ORDER\": \"COMPILER_V_BIND_OBJECT_ORDER\",\n  \"COMPILER_V_ON_NATIVE\": \"COMPILER_V_ON_NATIVE\",\n  \"COMPILER_V_IF_V_FOR_PRECEDENCE\": \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n  \"COMPILER_NATIVE_TEMPLATE\": \"COMPILER_NATIVE_TEMPLATE\",\n  \"COMPILER_INLINE_TEMPLATE\": \"COMPILER_INLINE_TEMPLATE\",\n  \"COMPILER_FILTERS\": \"COMPILER_FILTERS\"\n};\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTERS\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, { compatConfig }) {\n  const value = compatConfig && compatConfig[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const { message, link } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc) err.loc = loc;\n  context.onWarn(err);\n}\n\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``) ;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst ErrorCodes = {\n  \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\": 0,\n  \"0\": \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\",\n  \"CDATA_IN_HTML_CONTENT\": 1,\n  \"1\": \"CDATA_IN_HTML_CONTENT\",\n  \"DUPLICATE_ATTRIBUTE\": 2,\n  \"2\": \"DUPLICATE_ATTRIBUTE\",\n  \"END_TAG_WITH_ATTRIBUTES\": 3,\n  \"3\": \"END_TAG_WITH_ATTRIBUTES\",\n  \"END_TAG_WITH_TRAILING_SOLIDUS\": 4,\n  \"4\": \"END_TAG_WITH_TRAILING_SOLIDUS\",\n  \"EOF_BEFORE_TAG_NAME\": 5,\n  \"5\": \"EOF_BEFORE_TAG_NAME\",\n  \"EOF_IN_CDATA\": 6,\n  \"6\": \"EOF_IN_CDATA\",\n  \"EOF_IN_COMMENT\": 7,\n  \"7\": \"EOF_IN_COMMENT\",\n  \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\": 8,\n  \"8\": \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\",\n  \"EOF_IN_TAG\": 9,\n  \"9\": \"EOF_IN_TAG\",\n  \"INCORRECTLY_CLOSED_COMMENT\": 10,\n  \"10\": \"INCORRECTLY_CLOSED_COMMENT\",\n  \"INCORRECTLY_OPENED_COMMENT\": 11,\n  \"11\": \"INCORRECTLY_OPENED_COMMENT\",\n  \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\": 12,\n  \"12\": \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\",\n  \"MISSING_ATTRIBUTE_VALUE\": 13,\n  \"13\": \"MISSING_ATTRIBUTE_VALUE\",\n  \"MISSING_END_TAG_NAME\": 14,\n  \"14\": \"MISSING_END_TAG_NAME\",\n  \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\": 15,\n  \"15\": \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\",\n  \"NESTED_COMMENT\": 16,\n  \"16\": \"NESTED_COMMENT\",\n  \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\": 17,\n  \"17\": \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\": 18,\n  \"18\": \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\",\n  \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\": 19,\n  \"19\": \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_NULL_CHARACTER\": 20,\n  \"20\": \"UNEXPECTED_NULL_CHARACTER\",\n  \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\": 21,\n  \"21\": \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\",\n  \"UNEXPECTED_SOLIDUS_IN_TAG\": 22,\n  \"22\": \"UNEXPECTED_SOLIDUS_IN_TAG\",\n  \"X_INVALID_END_TAG\": 23,\n  \"23\": \"X_INVALID_END_TAG\",\n  \"X_MISSING_END_TAG\": 24,\n  \"24\": \"X_MISSING_END_TAG\",\n  \"X_MISSING_INTERPOLATION_END\": 25,\n  \"25\": \"X_MISSING_INTERPOLATION_END\",\n  \"X_MISSING_DIRECTIVE_NAME\": 26,\n  \"26\": \"X_MISSING_DIRECTIVE_NAME\",\n  \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\": 27,\n  \"27\": \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\",\n  \"X_V_IF_NO_EXPRESSION\": 28,\n  \"28\": \"X_V_IF_NO_EXPRESSION\",\n  \"X_V_IF_SAME_KEY\": 29,\n  \"29\": \"X_V_IF_SAME_KEY\",\n  \"X_V_ELSE_NO_ADJACENT_IF\": 30,\n  \"30\": \"X_V_ELSE_NO_ADJACENT_IF\",\n  \"X_V_FOR_NO_EXPRESSION\": 31,\n  \"31\": \"X_V_FOR_NO_EXPRESSION\",\n  \"X_V_FOR_MALFORMED_EXPRESSION\": 32,\n  \"32\": \"X_V_FOR_MALFORMED_EXPRESSION\",\n  \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\": 33,\n  \"33\": \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\",\n  \"X_V_BIND_NO_EXPRESSION\": 34,\n  \"34\": \"X_V_BIND_NO_EXPRESSION\",\n  \"X_V_ON_NO_EXPRESSION\": 35,\n  \"35\": \"X_V_ON_NO_EXPRESSION\",\n  \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\": 36,\n  \"36\": \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\",\n  \"X_V_SLOT_MIXED_SLOT_USAGE\": 37,\n  \"37\": \"X_V_SLOT_MIXED_SLOT_USAGE\",\n  \"X_V_SLOT_DUPLICATE_SLOT_NAMES\": 38,\n  \"38\": \"X_V_SLOT_DUPLICATE_SLOT_NAMES\",\n  \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\": 39,\n  \"39\": \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\",\n  \"X_V_SLOT_MISPLACED\": 40,\n  \"40\": \"X_V_SLOT_MISPLACED\",\n  \"X_V_MODEL_NO_EXPRESSION\": 41,\n  \"41\": \"X_V_MODEL_NO_EXPRESSION\",\n  \"X_V_MODEL_MALFORMED_EXPRESSION\": 42,\n  \"42\": \"X_V_MODEL_MALFORMED_EXPRESSION\",\n  \"X_V_MODEL_ON_SCOPE_VARIABLE\": 43,\n  \"43\": \"X_V_MODEL_ON_SCOPE_VARIABLE\",\n  \"X_V_MODEL_ON_PROPS\": 44,\n  \"44\": \"X_V_MODEL_ON_PROPS\",\n  \"X_INVALID_EXPRESSION\": 45,\n  \"45\": \"X_INVALID_EXPRESSION\",\n  \"X_KEEP_ALIVE_INVALID_CHILDREN\": 46,\n  \"46\": \"X_KEEP_ALIVE_INVALID_CHILDREN\",\n  \"X_PREFIX_ID_NOT_SUPPORTED\": 47,\n  \"47\": \"X_PREFIX_ID_NOT_SUPPORTED\",\n  \"X_MODULE_MODE_NOT_SUPPORTED\": 48,\n  \"48\": \"X_MODULE_MODE_NOT_SUPPORTED\",\n  \"X_CACHE_HANDLER_NOT_SUPPORTED\": 49,\n  \"49\": \"X_CACHE_HANDLER_NOT_SUPPORTED\",\n  \"X_SCOPE_ID_NOT_SUPPORTED\": 50,\n  \"50\": \"X_SCOPE_ID_NOT_SUPPORTED\",\n  \"X_VNODE_HOOKS\": 51,\n  \"51\": \"X_VNODE_HOOKS\",\n  \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\": 52,\n  \"52\": \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\",\n  \"__EXTEND_POINT__\": 53,\n  \"53\": \"__EXTEND_POINT__\"\n};\nconst errorMessages = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [53]: ``\n};\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\n  const rootExp = root.type === \"Program\" ? root.body[0].type === \"ExpressionStatement\" && root.body[0].expression : root;\n  estreeWalker.walk(root, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\n        return this.skip();\n      }\n      if (node.type === \"Identifier\") {\n        const isLocal = !!knownIds[node.name];\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\n        if (includeAll || isRefed && !isLocal) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\n        }\n      } else if (node.type === \"ObjectProperty\" && // eslint-disable-next-line no-restricted-syntax\n      (parent == null ? void 0 : parent.type) === \"ObjectPattern\") {\n        node.inPattern = true;\n      } else if (isFunctionType(node)) {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkFunctionParams(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"BlockStatement\") {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkBlockDeclarations(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"CatchClause\" && node.param) {\n        for (const id of extractIdentifiers(node.param)) {\n          markScopeIdentifier(node, id, knownIds);\n        }\n      } else if (isForStatement(node)) {\n        walkForStatement(\n          node,\n          false,\n          (id) => markScopeIdentifier(node, id, knownIds)\n        );\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--;\n          if (knownIds[id] === 0) {\n            delete knownIds[id];\n          }\n        }\n      }\n    }\n  });\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  if (!parent) {\n    return true;\n  }\n  if (id.name === \"arguments\") {\n    return false;\n  }\n  if (isReferenced(id, parent)) {\n    return true;\n  }\n  switch (parent.type) {\n    case \"AssignmentExpression\":\n    case \"AssignmentPattern\":\n      return true;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return isInDestructureAssignment(parent, parentStack);\n  }\n  return false;\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction isInNewExpression(parentStack) {\n  let i = parentStack.length;\n  while (i--) {\n    const p = parentStack[i];\n    if (p.type === \"NewExpression\") {\n      return true;\n    } else if (p.type !== \"MemberExpression\") {\n      break;\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare) continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id) continue;\n      onIdent(stmt.id);\n    } else if (isForStatement(stmt)) {\n      walkForStatement(stmt, true, onIdent);\n    }\n  }\n}\nfunction isForStatement(stmt) {\n  return stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\";\n}\nfunction walkForStatement(stmt, isVar, onIdent) {\n  const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n  if (variable && variable.type === \"VariableDeclaration\" && (variable.kind === \"var\" ? isVar : !isVar)) {\n    for (const decl of variable.declarations) {\n      for (const id of extractIdentifiers(decl.id)) {\n        onIdent(id);\n      }\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach((element) => {\n        if (element) extractIdentifiers(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nfunction markKnownIds(name, knownIds) {\n  if (name in knownIds) {\n    knownIds[name]++;\n  } else {\n    knownIds[name] = 1;\n  }\n}\nfunction markScopeIdentifier(node, child, knownIds) {\n  const { name } = child;\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return;\n  }\n  markKnownIds(name, knownIds);\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\n}\nconst isFunctionType = (node) => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case \"PrivateName\":\n      return false;\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return !grandparent;\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return false;\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      return parent.local === node;\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case \"ImportAttribute\":\n      return false;\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return false;\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case \"TSEnumMember\":\n      return parent.id !== node;\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n  }\n  return true;\n}\nconst TS_NODE_TYPES = [\n  \"TSAsExpression\",\n  // foo as number\n  \"TSTypeAssertion\",\n  // (<number>foo)\n  \"TSNonNullExpression\",\n  // foo!\n  \"TSInstantiationExpression\",\n  // foo<string>\n  \"TSSatisfiesExpression\"\n  // foo satisfies T\n];\nfunction unwrapTSNode(node) {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode(node.expression);\n  } else {\n    return node;\n  }\n}\n\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\nfunction isCoreComponent(tag) {\n  switch (tag) {\n    case \"Teleport\":\n    case \"teleport\":\n      return TELEPORT;\n    case \"Suspense\":\n    case \"suspense\":\n      return SUSPENSE;\n    case \"KeepAlive\":\n    case \"keep-alive\":\n      return KEEP_ALIVE;\n    case \"BaseTransition\":\n    case \"base-transition\":\n      return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w\\xA0-\\uFFFF]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst getExpSource = (exp) => exp.type === 4 ? exp.content : exp.loc.source;\nconst isMemberExpressionBrowser = (exp) => {\n  const path = getExpSource(exp).trim().replace(whitespaceRE, (s) => s.trim());\n  let state = 0 /* inMemberExp */;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0 /* inMemberExp */:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1 /* inBrackets */;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2 /* inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1 /* inBrackets */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* inParens */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* inString */:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = (exp, context) => {\n  try {\n    let ret = exp.ast || parser.parseExpression(getExpSource(exp), {\n      plugins: context.expressionPlugins ? [...context.expressionPlugins, \"typescript\"] : [\"typescript\"]\n    });\n    ret = unwrapTSNode(ret);\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\" && ret.name !== \"undefined\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isMemberExpression = isMemberExpressionNode;\nconst fnExpRE = /^\\s*(async\\s*)?(\\([^)]*?\\)|[\\w$_]+)\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst isFnExpressionBrowser = (exp) => fnExpRE.test(getExpSource(exp));\nconst isFnExpressionNode = (exp, context) => {\n  try {\n    let ret = exp.ast || parser.parseExpression(getExpSource(exp), {\n      plugins: context.expressionPlugins ? [...context.expressionPlugins, \"typescript\"] : [\"typescript\"]\n    });\n    if (ret.type === \"Program\") {\n      ret = ret.body[0];\n      if (ret.type === \"ExpressionStatement\") {\n        ret = ret.expression;\n      }\n    }\n    ret = unwrapTSNode(ret);\n    return ret.type === \"FunctionExpression\" || ret.type === \"ArrowFunctionExpression\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isFnExpression = isFnExpressionNode;\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(\n    {\n      offset: pos.offset,\n      line: pos.line,\n      column: pos.column\n    },\n    source,\n    numberOfCharacters\n  );\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (shared.isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly) continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\n    !p.arg.isStatic)\n    // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !shared.isString(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!shared.isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0],\n        callPath.concat(props)\n      );\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !shared.isString(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || shared.isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!shared.isString(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(\n      (p) => p.key.type === 4 && p.key.content === propKeyName\n    );\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some((b) => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some((c) => shared.isObject(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n    case 20:\n      return false;\n    default:\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+(\\S[\\s\\S]*)/;\n\nconst defaultParserOptions = {\n  parseMode: \"base\",\n  ns: 0,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  isVoidTag: shared.NO,\n  isPreTag: shared.NO,\n  isIgnoreNewlineTag: shared.NO,\n  isCustomElement: shared.NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: false,\n  prefixIdentifiers: false\n};\nlet currentOptions = defaultParserOptions;\nlet currentRoot = null;\nlet currentInput = \"\";\nlet currentOpenTag = null;\nlet currentProp = null;\nlet currentAttrValue = \"\";\nlet currentAttrStartIndex = -1;\nlet currentAttrEndIndex = -1;\nlet inPre = 0;\nlet inVPre = false;\nlet currentVPreBoundary = null;\nconst stack = [];\nconst tokenizer = new Tokenizer(stack, {\n  onerr: emitError,\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end);\n  },\n  ontextentity(char, start, end) {\n    onText(char, start, end);\n  },\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end);\n    }\n    let innerStart = start + tokenizer.delimiterOpen.length;\n    let innerEnd = end - tokenizer.delimiterClose.length;\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\n      innerStart++;\n    }\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--;\n    }\n    let exp = getSlice(innerStart, innerEnd);\n    if (exp.includes(\"&\")) {\n      {\n        exp = decode_js.decodeHTML(exp);\n      }\n    }\n    addNode({\n      type: 5,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end)\n    });\n  },\n  onopentagname(start, end) {\n    const name = getSlice(start, end);\n    currentOpenTag = {\n      type: 1,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: 0,\n      // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: void 0\n    };\n  },\n  onopentagend(end) {\n    endOpenTag(end);\n  },\n  onclosetag(start, end) {\n    const name = getSlice(start, end);\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false;\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i];\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true;\n          if (i > 0) {\n            emitError(24, stack[0].loc.start.offset);\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift();\n            onCloseTag(el, end, j < i);\n          }\n          break;\n        }\n      }\n      if (!found) {\n        emitError(23, backTrack(start, 60));\n      }\n    }\n  },\n  onselfclosingtag(end) {\n    const name = currentOpenTag.tag;\n    currentOpenTag.isSelfClosing = true;\n    endOpenTag(end);\n    if (stack[0] && stack[0].tag === name) {\n      onCloseTag(stack.shift(), end);\n    }\n  },\n  onattribname(start, end) {\n    currentProp = {\n      type: 6,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: void 0,\n      loc: getLoc(start)\n    };\n  },\n  ondirname(start, end) {\n    const raw = getSlice(start, end);\n    const name = raw === \".\" || raw === \":\" ? \"bind\" : raw === \"@\" ? \"on\" : raw === \"#\" ? \"slot\" : raw.slice(2);\n    if (!inVPre && name === \"\") {\n      emitError(26, start);\n    }\n    if (inVPre || name === \"\") {\n      currentProp = {\n        type: 6,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: void 0,\n        loc: getLoc(start)\n      };\n    } else {\n      currentProp = {\n        type: 7,\n        name,\n        rawName: raw,\n        exp: void 0,\n        arg: void 0,\n        modifiers: raw === \".\" ? [createSimpleExpression(\"prop\")] : [],\n        loc: getLoc(start)\n      };\n      if (name === \"pre\") {\n        inVPre = tokenizer.inVPre = true;\n        currentVPreBoundary = currentOpenTag;\n        const props = currentOpenTag.props;\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === 7) {\n            props[i] = dirToAttr(props[i]);\n          }\n        }\n      }\n    }\n  },\n  ondirarg(start, end) {\n    if (start === end) return;\n    const arg = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += arg;\n      setLocEnd(currentProp.nameLoc, end);\n    } else {\n      const isStatic = arg[0] !== `[`;\n      currentProp.arg = createExp(\n        isStatic ? arg : arg.slice(1, -1),\n        isStatic,\n        getLoc(start, end),\n        isStatic ? 3 : 0\n      );\n    }\n  },\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += \".\" + mod;\n      setLocEnd(currentProp.nameLoc, end);\n    } else if (currentProp.name === \"slot\") {\n      const arg = currentProp.arg;\n      if (arg) {\n        arg.content += \".\" + mod;\n        setLocEnd(arg.loc, end);\n      }\n    } else {\n      const exp = createSimpleExpression(mod, true, getLoc(start, end));\n      currentProp.modifiers.push(exp);\n    }\n  },\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end);\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribentity(char, start, end) {\n    currentAttrValue += char;\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribnameend(end) {\n    const start = currentProp.loc.start.offset;\n    const name = getSlice(start, end);\n    if (currentProp.type === 7) {\n      currentProp.rawName = name;\n    }\n    if (currentOpenTag.props.some(\n      (p) => (p.type === 7 ? p.rawName : p.name) === name\n    )) {\n      emitError(2, start);\n    }\n  },\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end);\n      if (quote !== 0) {\n        if (currentProp.type === 6) {\n          if (currentProp.name === \"class\") {\n            currentAttrValue = condense(currentAttrValue).trim();\n          }\n          if (quote === 1 && !currentAttrValue) {\n            emitError(13, end);\n          }\n          currentProp.value = {\n            type: 2,\n            content: currentAttrValue,\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\n          };\n          if (tokenizer.inSFCRoot && currentOpenTag.tag === \"template\" && currentProp.name === \"lang\" && currentAttrValue && currentAttrValue !== \"html\") {\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);\n          }\n        } else {\n          let expParseMode = 0 /* Normal */;\n          {\n            if (currentProp.name === \"for\") {\n              expParseMode = 3 /* Skip */;\n            } else if (currentProp.name === \"slot\") {\n              expParseMode = 1 /* Params */;\n            } else if (currentProp.name === \"on\" && currentAttrValue.includes(\";\")) {\n              expParseMode = 2 /* Statements */;\n            }\n          }\n          currentProp.exp = createExp(\n            currentAttrValue,\n            false,\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\n            0,\n            expParseMode\n          );\n          if (currentProp.name === \"for\") {\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\n          }\n          let syncIndex = -1;\n          if (currentProp.name === \"bind\" && (syncIndex = currentProp.modifiers.findIndex(\n            (mod) => mod.content === \"sync\"\n          )) > -1 && checkCompatEnabled(\n            \"COMPILER_V_BIND_SYNC\",\n            currentOptions,\n            currentProp.loc,\n            currentProp.rawName\n          )) {\n            currentProp.name = \"model\";\n            currentProp.modifiers.splice(syncIndex, 1);\n          }\n        }\n      }\n      if (currentProp.type !== 7 || currentProp.name !== \"pre\") {\n        currentOpenTag.props.push(currentProp);\n      }\n    }\n    currentAttrValue = \"\";\n    currentAttrStartIndex = currentAttrEndIndex = -1;\n  },\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: 3,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3)\n      });\n    }\n  },\n  onend() {\n    const end = currentInput.length;\n    if (tokenizer.state !== 1) {\n      switch (tokenizer.state) {\n        case 5:\n        case 8:\n          emitError(5, end);\n          break;\n        case 3:\n        case 4:\n          emitError(\n            25,\n            tokenizer.sectionStart\n          );\n          break;\n        case 28:\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\n            emitError(6, end);\n          } else {\n            emitError(7, end);\n          }\n          break;\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        // \"\n        case 20:\n        // '\n        case 21:\n          emitError(9, end);\n          break;\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1);\n      emitError(24, stack[index].loc.start.offset);\n    }\n  },\n  oncdata(start, end) {\n    if (stack[0].ns !== 0) {\n      onText(getSlice(start, end), start, end);\n    } else {\n      emitError(1, start - 9);\n    }\n  },\n  onprocessinginstruction(start) {\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n      emitError(\n        21,\n        start - 1\n      );\n    }\n  }\n});\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch) return;\n  const [, LHS, RHS] = inMatch;\n  const createAliasExpression = (content, offset, asParam = false) => {\n    const start = loc.start.offset + offset;\n    const end = start + content.length;\n    return createExp(\n      content,\n      false,\n      getLoc(start, end),\n      0,\n      asParam ? 1 /* Params */ : 0 /* Normal */\n    );\n  };\n  const result = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: void 0,\n    key: void 0,\n    index: void 0,\n    finalized: false\n  };\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(keyContent, keyOffset, true);\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\n          ),\n          true\n        );\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\n  }\n  return result;\n}\nfunction getSlice(start, end) {\n  return currentInput.slice(start, end);\n}\nfunction endOpenTag(end) {\n  if (tokenizer.inSFCRoot) {\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\n  }\n  addNode(currentOpenTag);\n  const { tag, ns } = currentOpenTag;\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre++;\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag, end);\n  } else {\n    stack.unshift(currentOpenTag);\n    if (ns === 1 || ns === 2) {\n      tokenizer.inXML = true;\n    }\n  }\n  currentOpenTag = null;\n}\nfunction onText(content, start, end) {\n  const parent = stack[0] || currentRoot;\n  const lastNode = parent.children[parent.children.length - 1];\n  if (lastNode && lastNode.type === 2) {\n    lastNode.content += content;\n    setLocEnd(lastNode.loc, end);\n  } else {\n    parent.children.push({\n      type: 2,\n      content,\n      loc: getLoc(start, end)\n    });\n  }\n}\nfunction onCloseTag(el, end, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, 60));\n  } else {\n    setLocEnd(el.loc, lookAhead(end, 62) + 1);\n  }\n  if (tokenizer.inSFCRoot) {\n    if (el.children.length) {\n      el.innerLoc.end = shared.extend({}, el.children[el.children.length - 1].loc.end);\n    } else {\n      el.innerLoc.end = shared.extend({}, el.innerLoc.start);\n    }\n    el.innerLoc.source = getSlice(\n      el.innerLoc.start.offset,\n      el.innerLoc.end.offset\n    );\n  }\n  const { tag, ns, children } = el;\n  if (!inVPre) {\n    if (tag === \"slot\") {\n      el.tagType = 2;\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = 3;\n    } else if (isComponent(el)) {\n      el.tagType = 1;\n    }\n  }\n  if (!tokenizer.inRCDATA) {\n    el.children = condenseWhitespace(children);\n  }\n  if (ns === 0 && currentOptions.isIgnoreNewlineTag(tag)) {\n    const first = children[0];\n    if (first && first.type === 2) {\n      first.content = first.content.replace(/^\\r?\\n/, \"\");\n    }\n  }\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre--;\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer.inVPre = false;\n    currentVPreBoundary = null;\n  }\n  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n    tokenizer.inXML = false;\n  }\n  {\n    const props = el.props;\n    if (!tokenizer.inSFCRoot && isCompatEnabled(\n      \"COMPILER_NATIVE_TEMPLATE\",\n      currentOptions\n    ) && el.tag === \"template\" && !isFragmentTemplate(el)) {\n      const parent = stack[0] || currentRoot;\n      const index = parent.children.indexOf(el);\n      parent.children.splice(index, 1, ...el.children);\n    }\n    const inlineTemplateProp = props.find(\n      (p) => p.type === 6 && p.name === \"inline-template\"\n    );\n    if (inlineTemplateProp && checkCompatEnabled(\n      \"COMPILER_INLINE_TEMPLATE\",\n      currentOptions,\n      inlineTemplateProp.loc\n    ) && el.children.length) {\n      inlineTemplateProp.value = {\n        type: 2,\n        content: getSlice(\n          el.children[0].loc.start.offset,\n          el.children[el.children.length - 1].loc.end.offset\n        ),\n        loc: inlineTemplateProp.loc\n      };\n    }\n  }\n}\nfunction lookAhead(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i < currentInput.length - 1) i++;\n  return i;\n}\nfunction backTrack(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i >= 0) i--;\n  return i;\n}\nconst specialTemplateDir = /* @__PURE__ */ new Set([\"if\", \"else\", \"else-if\", \"for\", \"slot\"]);\nfunction isFragmentTemplate({ tag, props }) {\n  if (tag === \"template\") {\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isComponent({ tag, props }) {\n  if (currentOptions.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || currentOptions.isBuiltInComponent && currentOptions.isBuiltInComponent(tag) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        } else if (checkCompatEnabled(\n          \"COMPILER_IS_ON_ELEMENT\",\n          currentOptions,\n          p.loc\n        )) {\n          return true;\n        }\n      }\n    } else if (// :is on plain element - only treat as component in compat mode\n    p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && checkCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      currentOptions,\n      p.loc\n    )) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUpperCase(c) {\n  return c > 64 && c < 91;\n}\nconst windowsNewlineRE = /\\r\\n/g;\nfunction condenseWhitespace(nodes, tag) {\n  const shouldCondense = currentOptions.whitespace !== \"preserve\";\n  let removedWhitespace = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type === 2) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = nodes[i - 1] && nodes[i - 1].type;\n          const next = nodes[i + 1] && nodes[i + 1].type;\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            node.content = \" \";\n          }\n        } else if (shouldCondense) {\n          node.content = condense(node.content);\n        }\n      } else {\n        node.content = node.content.replace(windowsNewlineRE, \"\\n\");\n      }\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction isAllWhitespace(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace(str.charCodeAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasNewlineChar(str) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c === 10 || c === 13) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction condense(str) {\n  let ret = \"\";\n  let prevCharIsWhitespace = false;\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += \" \";\n        prevCharIsWhitespace = true;\n      }\n    } else {\n      ret += str[i];\n      prevCharIsWhitespace = false;\n    }\n  }\n  return ret;\n}\nfunction addNode(node) {\n  (stack[0] || currentRoot).children.push(node);\n}\nfunction getLoc(start, end) {\n  return {\n    start: tokenizer.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end)\n  };\n}\nfunction setLocEnd(loc, end) {\n  loc.end = tokenizer.getPos(end);\n  loc.source = getSlice(loc.start.offset, end);\n}\nfunction dirToAttr(dir) {\n  const attr = {\n    type: 6,\n    name: dir.rawName,\n    nameLoc: getLoc(\n      dir.loc.start.offset,\n      dir.loc.start.offset + dir.rawName.length\n    ),\n    value: void 0,\n    loc: dir.loc\n  };\n  if (dir.exp) {\n    const loc = dir.exp.loc;\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--;\n      loc.start.column--;\n      loc.end.offset++;\n      loc.end.column++;\n    }\n    attr.value = {\n      type: 2,\n      content: dir.exp.content,\n      loc\n    };\n  }\n  return attr;\n}\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0 /* Normal */) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\n  if (!isStatic && currentOptions.prefixIdentifiers && parseMode !== 3 /* Skip */ && content.trim()) {\n    if (isSimpleIdentifier(content)) {\n      exp.ast = null;\n      return exp;\n    }\n    try {\n      const plugins = currentOptions.expressionPlugins;\n      const options = {\n        plugins: plugins ? [...plugins, \"typescript\"] : [\"typescript\"]\n      };\n      if (parseMode === 2 /* Statements */) {\n        exp.ast = parser.parse(` ${content} `, options).program;\n      } else if (parseMode === 1 /* Params */) {\n        exp.ast = parser.parseExpression(`(${content})=>{}`, options);\n      } else {\n        exp.ast = parser.parseExpression(`(${content})`, options);\n      }\n    } catch (e) {\n      exp.ast = false;\n      emitError(45, loc.start.offset, e.message);\n    }\n  }\n  return exp;\n}\nfunction emitError(code, index, message) {\n  currentOptions.onError(\n    createCompilerError(code, getLoc(index, index), void 0, message)\n  );\n}\nfunction reset() {\n  tokenizer.reset();\n  currentOpenTag = null;\n  currentProp = null;\n  currentAttrValue = \"\";\n  currentAttrStartIndex = -1;\n  currentAttrEndIndex = -1;\n  stack.length = 0;\n}\nfunction baseParse(input, options) {\n  reset();\n  currentInput = input;\n  currentOptions = shared.extend({}, defaultParserOptions);\n  if (options) {\n    let key;\n    for (key in options) {\n      if (options[key] != null) {\n        currentOptions[key] = options[key];\n      }\n    }\n  }\n  tokenizer.mode = currentOptions.parseMode === \"html\" ? 1 : currentOptions.parseMode === \"sfc\" ? 2 : 0;\n  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\n  const delimiters = options && options.delimiters;\n  if (delimiters) {\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);\n    tokenizer.delimiterClose = toCharCodes(delimiters[1]);\n  }\n  const root = currentRoot = createRoot([], input);\n  tokenizer.parse(currentInput);\n  root.loc = getLoc(0, input.length);\n  root.children = condenseWhitespace(root.children);\n  currentRoot = null;\n  return root;\n}\n\nfunction cacheStatic(root, context) {\n  walk(\n    root,\n    void 0,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  );\n}\nfunction isSingleElementRoot(root, child) {\n  const { children } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk(node, parent, context, doNotHoistNode = false, inFor = false) {\n  const { children } = node;\n  const toCache = [];\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = -1;\n          toCache.push(child);\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = codegenNode.patchFlag;\n          if ((flag === void 0 || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    } else if (child.type === 12) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType >= 2) {\n        toCache.push(child);\n        continue;\n      }\n    }\n    if (child.type === 1) {\n      const isComponent = child.tagType === 1;\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk(child, node, context, false, inFor);\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk(child, node, context, child.children.length === 1, true);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk(\n          child.branches[i2],\n          node,\n          context,\n          child.branches[i2].children.length === 1,\n          inFor\n        );\n      }\n    }\n  }\n  let cachedAsArray = false;\n  if (toCache.length === children.length && node.type === 1) {\n    if (node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && shared.isArray(node.codegenNode.children)) {\n      node.codegenNode.children = getCacheExpression(\n        createArrayExpression(node.codegenNode.children)\n      );\n      cachedAsArray = true;\n    } else if (node.tagType === 1 && node.codegenNode && node.codegenNode.type === 13 && node.codegenNode.children && !shared.isArray(node.codegenNode.children) && node.codegenNode.children.type === 15) {\n      const slot = getSlotNode(node.codegenNode, \"default\");\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns)\n        );\n        cachedAsArray = true;\n      }\n    } else if (node.tagType === 3 && parent && parent.type === 1 && parent.tagType === 1 && parent.codegenNode && parent.codegenNode.type === 13 && parent.codegenNode.children && !shared.isArray(parent.codegenNode.children) && parent.codegenNode.children.type === 15) {\n      const slotName = findDir(node, \"slot\", true);\n      const slot = slotName && slotName.arg && getSlotNode(parent.codegenNode, slotName.arg);\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns)\n        );\n        cachedAsArray = true;\n      }\n    }\n  }\n  if (!cachedAsArray) {\n    for (const child of toCache) {\n      child.codegenNode = context.cache(child.codegenNode);\n    }\n  }\n  function getCacheExpression(value) {\n    const exp = context.cache(value);\n    if (inFor && context.hmr) {\n      exp.needArraySpread = true;\n    }\n    return exp;\n  }\n  function getSlotNode(node2, name) {\n    if (node2.children && !shared.isArray(node2.children) && node2.children.type === 15) {\n      const slot = node2.children.properties.find(\n        (p) => p.key === name || p.key.content === name\n      );\n      return slot && slot.value;\n    }\n  }\n  if (toCache.length && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n}\nfunction getConstantType(node, context) {\n  const { constantCache } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\" && node.tag !== \"math\") {\n        return 0;\n      }\n      if (codegenNode.patchFlag === void 0) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          );\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (shared.isString(child) || shared.isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    case 20:\n      return 2;\n    default:\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !shared.isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const { properties } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\n\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = shared.NOOP,\n  isCustomElement = shared.NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = shared.EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    filename,\n    selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */ new Map(),\n    components: /* @__PURE__ */ new Set(),\n    directives: /* @__PURE__ */ new Set(),\n    hoists: [],\n    imports: [],\n    cached: [],\n    constantCache: /* @__PURE__ */ new WeakMap(),\n    temps: 0,\n    identifiers: /* @__PURE__ */ Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    grandParent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: shared.NOOP,\n    addIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          addId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId);\n        } else if (exp.type === 4) {\n          addId(exp.content);\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          removeId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId);\n        } else if (exp.type === 4) {\n          removeId(exp.content);\n        }\n      }\n    },\n    hoist(exp) {\n      if (shared.isString(exp)) exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        2\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      const cacheExp = createCacheExpression(\n        context.cached.length,\n        exp,\n        isVNode\n      );\n      context.cached.push(cacheExp);\n      return cacheExp;\n    }\n  };\n  {\n    context.filters = /* @__PURE__ */ new Set();\n  }\n  function addId(id) {\n    const { identifiers } = context;\n    if (identifiers[id] === void 0) {\n      identifiers[id] = 0;\n    }\n    identifiers[id]++;\n  }\n  function removeId(id) {\n    context.identifiers[id]--;\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    cacheStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  root.transformed = true;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const { helper } = context;\n  const { children } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      void 0,\n      root.children,\n      patchFlag,\n      void 0,\n      void 0,\n      true,\n      void 0,\n      false\n    );\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (shared.isString(child)) continue;\n    context.grandParent = context.parent;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const { nodeTransforms } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (shared.isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    // for container types, further traverse downwards\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = shared.isString(name) ? (n) => n === name : (n) => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const { props } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit) exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\n\nconst PURE_ANNOTATION = `/*@__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, newlineIndex = -2 /* None */, node) {\n      context.code += code;\n      if (context.map) {\n        if (node) {\n          let name;\n          if (node.type === 4 && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, \"\");\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content;\n            }\n          }\n          addMapping(node.loc.start, name);\n        }\n        if (newlineIndex === -3 /* Unknown */) {\n          advancePositionWithMutation(context, code);\n        } else {\n          context.offset += code.length;\n          if (newlineIndex === -2 /* None */) {\n            context.column += code.length;\n          } else {\n            if (newlineIndex === -1 /* End */) {\n              newlineIndex = code.length - 1;\n            }\n            context.line++;\n            context.column = code.length - newlineIndex;\n          }\n        }\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end);\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\"\\n\" + `  `.repeat(n), 0 /* Start */);\n  }\n  function addMapping(loc, name = null) {\n    const { _names, _mappings } = context.map;\n    if (name !== null && !_names.has(name)) _names.add(name);\n    _mappings.add({\n      originalLine: loc.line,\n      originalColumn: loc.column - 1,\n      // source-map column is 0 based\n      generatedLine: context.line,\n      generatedColumn: context.column - 1,\n      source: filename,\n      name\n    });\n  }\n  if (sourceMap) {\n    context.map = new sourceMapJs.SourceMapGenerator();\n    context.map.setSourceContent(filename, context.source);\n    context.map._sources.add(filename);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated) options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const genScopeId = scopeId != null && mode === \"module\";\n  const isSetupInlined = !!options.inline;\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  if (mode === \"module\") {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\n  } else {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  if (options.bindingMetadata && !options.inline) {\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\n  }\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\",\") : args.join(\", \");\n  if (isSetupInlined) {\n    push(`(${signature}) => {`);\n  } else {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue\n`,\n        -1 /* End */\n      );\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, \"filter\", context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\n`, 0 /* Start */);\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    if (prefixIdentifiers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(`const _Vue = ${VueBinding}\n`, -1 /* End */);\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(`const { ${staticHelpers} } = _Vue\n`, -1 /* End */);\n      }\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\n`,\n      -1 /* End */\n    );\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genModulePreamble(ast, context, genScopeId, inline) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context;\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers);\n    if (optimizeImports) {\n      push(\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n      push(\n        `\n// Binding optimization for webpack code-split\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\n`,\n      -1 /* End */\n    );\n  }\n  if (ast.imports.length) {\n    genImports(ast.imports, context);\n    newline();\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  if (!inline) {\n    push(`export `);\n  }\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n  const resolver = helper(\n    type === \"filter\" ? RESOLVE_FILTER : type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  );\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\n    );\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const { push, newline } = context;\n  newline();\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      push(`const _hoisted_${i + 1} = `);\n      genNode(exp, context);\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction genImports(importsOptions, context) {\n  if (!importsOptions.length) {\n    return;\n  }\n  importsOptions.forEach((imports) => {\n    context.push(`import `);\n    genNode(imports.exp, context);\n    context.push(` from '${imports.path}'`);\n    context.newline();\n  });\n}\nfunction isText(n) {\n  return shared.isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || nodes.some((n) => shared.isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const { push, newline } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (shared.isString(node)) {\n      push(node, -3 /* Unknown */);\n    } else if (shared.isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (shared.isString(node)) {\n    context.push(node, -3 /* Unknown */);\n    return;\n  }\n  if (shared.isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    // SSR only types\n    case 22:\n      genTemplateLiteral(node, context);\n      break;\n    case 23:\n      genIfStatement(node, context);\n      break;\n    case 24:\n      genAssignmentExpression(node, context);\n      break;\n    case 25:\n      genSequenceExpression(node, context);\n      break;\n    case 26:\n      genReturnStatement(node, context);\n      break;\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), -3 /* Unknown */, node);\n}\nfunction genExpression(node, context) {\n  const { content, isStatic } = node;\n  context.push(\n    isStatic ? JSON.stringify(content) : content,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genInterpolation(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (shared.isString(child)) {\n      context.push(child, -3 /* Unknown */);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const { push } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, -2 /* None */, node);\n  } else {\n    push(`[${node.content}]`, -3 /* Unknown */, node);\n  }\n}\nfunction genComment(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genVNodeCall(node, context) {\n  const { push, helper, pure } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n  let patchFlagString;\n  if (patchFlag) {\n    {\n      patchFlagString = String(patchFlag);\n    }\n  }\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, -2 /* None */, node);\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlagString, dynamicProps]),\n    context\n  );\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null) break;\n  }\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const { push, helper, pure } = context;\n  const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, -2 /* None */, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context;\n  const { properties } = node;\n  if (!properties.length) {\n    push(`{}`, -2 /* None */, node);\n    return;\n  }\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const { push, indent, deindent } = context;\n  const { params, returns, body, newline, isSlot } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, -2 /* None */, node);\n  if (shared.isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (shared.isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const { test, consequent, alternate, newline: needNewline } = node;\n  const { push, indent, deindent, newline } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(\n    true\n    /* without newline */\n  );\n}\nfunction genCacheExpression(node, context) {\n  const { push, helper, indent, deindent, newline } = context;\n  const { needPauseTracking, needArraySpread } = node;\n  if (needArraySpread) {\n    push(`[...(`);\n  }\n  push(`_cache[${node.index}] || (`);\n  if (needPauseTracking) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n    push(`(`);\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (needPauseTracking) {\n    push(`).cacheIndex = ${node.index},`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n  if (needArraySpread) {\n    push(`)]`);\n  }\n}\nfunction genTemplateLiteral(node, context) {\n  const { push, indent, deindent } = context;\n  push(\"`\");\n  const l = node.elements.length;\n  const multilines = l > 3;\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i];\n    if (shared.isString(e)) {\n      push(e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"), -3 /* Unknown */);\n    } else {\n      push(\"${\");\n      if (multilines) indent();\n      genNode(e, context);\n      if (multilines) deindent();\n      push(\"}\");\n    }\n  }\n  push(\"`\");\n}\nfunction genIfStatement(node, context) {\n  const { push, indent, deindent } = context;\n  const { test, consequent, alternate } = node;\n  push(`if (`);\n  genNode(test, context);\n  push(`) {`);\n  indent();\n  genNode(consequent, context);\n  deindent();\n  push(`}`);\n  if (alternate) {\n    push(` else `);\n    if (alternate.type === 23) {\n      genIfStatement(alternate, context);\n    } else {\n      push(`{`);\n      indent();\n      genNode(alternate, context);\n      deindent();\n      push(`}`);\n    }\n  }\n}\nfunction genAssignmentExpression(node, context) {\n  genNode(node.left, context);\n  context.push(` = `);\n  genNode(node.right, context);\n}\nfunction genSequenceExpression(node, context) {\n  context.push(`(`);\n  genNodeList(node.expressions, context);\n  context.push(`)`);\n}\nfunction genReturnStatement({ returns }, context) {\n  context.push(`return `);\n  if (shared.isArray(returns)) {\n    genNodeListAsArray(returns, context);\n  } else {\n    genNode(returns, context);\n  }\n}\n\nconst isLiteralWhitelisted = /* @__PURE__ */ shared.makeMap(\"true,false,null,this\");\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(\n      node.content,\n      context\n    );\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === \"slot\"\n          );\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node;\n  }\n  const { inline, bindingMetadata } = context;\n  const rewriteIdentifier = (raw, parent, id) => {\n    const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\n    if (inline) {\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\n      const isNewExpression = parent && isInNewExpression(parentStack);\n      const wrapWithUnref = (raw2) => {\n        const wrapped = `${context.helperString(UNREF)}(${raw2})`;\n        return isNewExpression ? `(${wrapped})` : wrapped;\n      };\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\n        return raw;\n      } else if (type === \"setup-ref\") {\n        return `${raw}.value`;\n      } else if (type === \"setup-maybe-ref\") {\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : wrapWithUnref(raw);\n      } else if (type === \"setup-let\") {\n        if (isAssignmentLVal) {\n          const { right: rVal, operator } = parent;\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds\n            )\n          );\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\n        } else if (isUpdateArg) {\n          id.start = parent.start;\n          id.end = parent.end;\n          const { prefix: isPrefix, operator } = parent;\n          const prefix = isPrefix ? operator : ``;\n          const postfix = isPrefix ? `` : operator;\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\n        } else if (isDestructureAssignment) {\n          return raw;\n        } else {\n          return wrapWithUnref(raw);\n        }\n      } else if (type === \"props\") {\n        return shared.genPropsAccessExp(raw);\n      } else if (type === \"props-aliased\") {\n        return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\n      }\n    } else {\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\n        return `$setup.${raw}`;\n      } else if (type === \"props-aliased\") {\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\n      } else if (type) {\n        return `$${type}.${raw}`;\n      }\n    }\n    return `_ctx.${raw}`;\n  };\n  const rawExp = node.content;\n  let ast = node.ast;\n  if (ast === false) {\n    return node;\n  }\n  if (ast === null || !ast && isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp];\n    const isAllowedGlobal = shared.isGloballyAllowed(rawExp);\n    const isLiteral = isLiteralWhitelisted(rawExp);\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = 1;\n      }\n      node.content = rewriteIdentifier(rawExp);\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = 3;\n      } else {\n        node.constType = 2;\n      }\n    }\n    return node;\n  }\n  if (!ast) {\n    const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\n    try {\n      ast = parser.parseExpression(source, {\n        sourceType: \"module\",\n        plugins: context.expressionPlugins\n      });\n    } catch (e) {\n      context.onError(\n        createCompilerError(\n          45,\n          node.loc,\n          void 0,\n          e.message\n        )\n      );\n      return node;\n    }\n  }\n  const ids = [];\n  const parentStack = [];\n  const knownIds = Object.create(context.identifiers);\n  walkIdentifiers(\n    ast,\n    (node2, parent, _, isReferenced, isLocal) => {\n      if (isStaticPropertyKey(node2, parent)) {\n        return;\n      }\n      if (node2.name.startsWith(\"_filter_\")) {\n        return;\n      }\n      const needPrefix = isReferenced && canPrefix(node2);\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent) && parent.shorthand) {\n          node2.prefix = `${node2.name}: `;\n        }\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\n        ids.push(node2);\n      } else {\n        if (!(needPrefix && isLocal) && (!parent || parent.type !== \"CallExpression\" && parent.type !== \"NewExpression\" && parent.type !== \"MemberExpression\")) {\n          node2.isConstant = true;\n        }\n        ids.push(node2);\n      }\n    },\n    true,\n    // invoke on ALL identifiers\n    parentStack,\n    knownIds\n  );\n  const children = [];\n  ids.sort((a, b) => a.start - b.start);\n  ids.forEach((id, i) => {\n    const start = id.start - 1;\n    const end = id.end - 1;\n    const last = ids[i - 1];\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``));\n    }\n    const source = rawExp.slice(start, end);\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          start: advancePositionWithClone(node.loc.start, source, start),\n          end: advancePositionWithClone(node.loc.start, source, end),\n          source\n        },\n        id.isConstant ? 3 : 0\n      )\n    );\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end));\n    }\n  });\n  let ret;\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc);\n    ret.ast = ast;\n  } else {\n    ret = node;\n    ret.constType = 3;\n  }\n  ret.identifiers = Object.keys(knownIds);\n  return ret;\n}\nfunction canPrefix(id) {\n  if (shared.isGloballyAllowed(id.name)) {\n    return false;\n  }\n  if (id.name === \"require\") {\n    return false;\n  }\n  return true;\n}\nfunction stringifyExpression(exp) {\n  if (shared.isString(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\nfunction isConst(type) {\n  return type === \"setup-const\" || type === \"literal-const\";\n}\n\nconst transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      const siblings = context.parent.children;\n      let i = siblings.indexOf(ifNode);\n      let key = 0;\n      while (i-- >= 0) {\n        const sibling = siblings[i];\n        if (sibling && sibling.type === 9) {\n          key += sibling.branches.length;\n        }\n      }\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          );\n        } else {\n          const parentCondition = getParentCondition(ifNode.codegenNode);\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          );\n        }\n      };\n    });\n  }\n);\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(\n      createCompilerError(28, dir.loc)\n    );\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (context.prefixIdentifiers && dir.exp) {\n    dir.exp = processExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(\n            createCompilerError(30, node.loc)\n          );\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    29,\n                    branch.userKey.loc\n                  )\n                );\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit) onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(\n          createCompilerError(30, node.loc)\n        );\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        '\"\"',\n        \"true\"\n      ])\n    );\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const { helper } = context;\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      2\n    )\n  );\n  const { children } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag,\n        void 0,\n        void 0,\n        true,\n        false,\n        false,\n        branch.loc\n      );\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\n\nconst transformBind = (dir, _node, context) => {\n  const { modifiers, loc } = dir;\n  const arg = dir.arg;\n  let { exp } = dir;\n  if (exp && exp.type === 4 && !exp.content.trim()) {\n    {\n      context.onError(\n        createCompilerError(34, loc)\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n  }\n  if (!exp) {\n    if (arg.type !== 4 || !arg.isStatic) {\n      context.onError(\n        createCompilerError(\n          52,\n          arg.loc\n        )\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n    transformBindShorthand(dir, context);\n    exp = dir.exp;\n  }\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.some((mod) => mod.content === \"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = shared.camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.some((mod) => mod.content === \"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.some((mod) => mod.content === \"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst transformBindShorthand = (dir, context) => {\n  const arg = dir.arg;\n  const propName = shared.camelize(arg.content);\n  dir.exp = createSimpleExpression(propName, false, arg.loc);\n  {\n    dir.exp = processExpression(dir.exp, context);\n  }\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\n\nconst transformFor = createStructuralDirectiveTransform(\n  \"for\",\n  (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, (forNode) => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]);\n      const isTemplate = isTemplateNode(node);\n      const memo = findDir(node, \"memo\");\n      const keyProp = findProp(node, `key`, false, true);\n      if (keyProp && keyProp.type === 7 && !keyProp.exp) {\n        transformBindShorthand(keyProp, context);\n      }\n      const keyExp = keyProp && (keyProp.type === 6 ? keyProp.value ? createSimpleExpression(keyProp.value.content, true) : void 0 : keyProp.exp);\n      const keyProperty = keyProp && keyExp ? createObjectProperty(`key`, keyExp) : null;\n      if (isTemplate) {\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp,\n            context\n          );\n        }\n        if (keyProperty && keyProp.type !== 6) {\n          keyProperty.value = processExpression(\n            keyProperty.value,\n            context\n          );\n        }\n      }\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        void 0,\n        renderExp,\n        fragmentFlag,\n        void 0,\n        void 0,\n        true,\n        !isStableFragment,\n        false,\n        node.loc\n      );\n      return () => {\n        let childBlock;\n        const { children } = forNode;\n        if (isTemplate) {\n          node.children.some((c) => {\n            if (c.type === 1) {\n              const key = findProp(c, \"key\");\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    33,\n                    key.loc\n                  )\n                );\n                return true;\n              }\n            }\n          });\n        }\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n        if (slotOutlet) {\n          childBlock = slotOutlet.codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n        } else if (needFragmentWrapper) {\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\n            node.children,\n            64,\n            void 0,\n            void 0,\n            true,\n            void 0,\n            false\n          );\n        } else {\n          childBlock = children[0].codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              removeHelper(OPEN_BLOCK);\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              );\n            } else {\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              );\n            }\n          }\n          childBlock.isBlock = !isStableFragment;\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK);\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          );\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ]);\n          renderExp.arguments.push(\n            loop,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached.length))\n          );\n          context.cached.push(null);\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true\n            )\n          );\n        }\n      };\n    });\n  }\n);\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(31, dir.loc)\n    );\n    return;\n  }\n  const parseResult = dir.forParseResult;\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(32, dir.loc)\n    );\n    return;\n  }\n  finalizeForParseResult(parseResult, context);\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\n  const { source, value, key, index } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  if (context.prefixIdentifiers) {\n    value && addIdentifiers(value);\n    key && addIdentifiers(key);\n    index && addIdentifiers(index);\n  }\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (context.prefixIdentifiers) {\n      value && removeIdentifiers(value);\n      key && removeIdentifiers(key);\n      index && removeIdentifiers(index);\n    }\n    if (onExit) onExit();\n  };\n}\nfunction finalizeForParseResult(result, context) {\n  if (result.finalized) return;\n  if (context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source,\n      context\n    );\n    if (result.key) {\n      result.key = processExpression(\n        result.key,\n        context,\n        true\n      );\n    }\n    if (result.index) {\n      result.index = processExpression(\n        result.index,\n        context,\n        true\n      );\n    }\n    if (result.value) {\n      result.value = processExpression(\n        result.value,\n        context,\n        true\n      );\n    }\n  }\n  result.finalized = true;\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i]) break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      const slotProps = vSlot.exp;\n      if (context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps);\n      }\n      context.scopes.vSlot++;\n      return () => {\n        if (context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps);\n        }\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.forParseResult;\n    if (result) {\n      finalizeForParseResult(result, context);\n      const { value, key, index } = result;\n      const { addIdentifiers, removeIdentifiers } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\n  props,\n  children,\n  false,\n  true,\n  children.length ? children[0].loc : loc\n);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const { children, loc } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  if (!context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\n  }\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression(\"default\", true),\n        buildSlotFn(exp, void 0, children, loc)\n      )\n    );\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */ new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(\n        createCompilerError(37, slotDir.loc)\n      );\n      break;\n    }\n    hasTemplateSlots = true;\n    const { children: slotChildren, loc: slotLoc } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      );\n    } else if (vElse = findDir(\n      slotElement,\n      /^else(-if)?$/,\n      true\n      /* allowEmpty */\n    )) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, /^(else-)?if$/)) {\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(\n          vElse.exp,\n          buildDynamicSlot(\n            slotName,\n            slotFunction,\n            conditionalBranchIndex++\n          ),\n          defaultFallback\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(\n          createCompilerError(30, vElse.loc)\n        );\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.forParseResult;\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context);\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n            )\n          ])\n        );\n      } else {\n        context.onError(\n          createCompilerError(\n            32,\n            vFor.loc\n          )\n        );\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              38,\n              dirLoc\n            )\n          );\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            39,\n            implicitDefaultChildren[0].loc\n          )\n        );\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\n        );\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + (``),\n          false\n        )\n      )\n    ),\n    loc\n  );\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ];\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    );\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches)) return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children)) return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12)\n    return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\n\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const { tag, props } = node;\n    const isComponent = node.tagType === 1;\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = (\n      // dynamic component may resolve to plain elements\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && // <svg> and <foreignObject> must be forced into blocks so that block\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\n      // This is technically web-specific, but splitting the logic out of core\n      // leads to too much unnecessary complexity.\n      (tag === \"svg\" || tag === \"foreignObject\" || tag === \"math\")\n    );\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        void 0,\n        isComponent,\n        isDynamicComponent\n      );\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\n        directives.map((dir) => buildDirectiveArgs(dir, context))\n      ) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n      }\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (dynamicPropNames && dynamicPropNames.length) {\n      vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n    }\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      patchFlag === 0 ? void 0 : patchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false,\n      isComponent,\n      node.loc\n    );\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let { tag } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(\n    node,\n    \"is\",\n    false,\n    true\n    /* allow empty */\n  );\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      context\n    )) {\n      let exp;\n      if (isProp.type === 6) {\n        exp = isProp.value && createSimpleExpression(isProp.value.content, true);\n      } else {\n        exp = isProp.exp;\n        if (!exp) {\n          exp = createSimpleExpression(`is`, false, isProp.arg.loc);\n          {\n            exp = isProp.exp = processExpression(exp, context);\n          }\n        }\n      }\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr) context.helper(builtIn);\n    return builtIn;\n  }\n  {\n    const fromSetup = resolveSetupReference(tag, context);\n    if (fromSetup) {\n      return fromSetup;\n    }\n    const dotIndex = tag.indexOf(\".\");\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\n      if (ns) {\n        return ns + tag.slice(dotIndex);\n      }\n    }\n  }\n  if (context.selfName && shared.capitalize(shared.camelize(tag)) === context.selfName) {\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag + `__self`);\n    return toValidAssetId(tag, `component`);\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction resolveSetupReference(name, context) {\n  const bindings = context.bindingMetadata;\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return;\n  }\n  const camelName = shared.camelize(name);\n  const PascalName = shared.capitalize(camelName);\n  const checkType = (type) => {\n    if (bindings[name] === type) {\n      return name;\n    }\n    if (bindings[camelName] === type) {\n      return camelName;\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName;\n    }\n  };\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\n  if (fromConst) {\n    return context.inline ? (\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\n      fromConst\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\n  }\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\n  if (fromMaybeRef) {\n    return context.inline ? (\n      // setup scope bindings that may be refs need to be unrefed\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\n  }\n  const fromProps = checkType(\"props\");\n  if (fromProps) {\n    return `${context.helperString(UNREF)}(${context.inline ? \"__props\" : \"$props\"}[${JSON.stringify(fromProps)}])`;\n  }\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n  const { tag, loc: elementLoc, children } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = (arg) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      );\n      properties = [];\n    }\n    if (arg) mergeArgs.push(arg);\n  };\n  const pushRefVForMarker = () => {\n    if (context.scopes.vFor > 0) {\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(\"ref_for\", true),\n          createSimpleExpression(\"true\")\n        )\n      );\n    }\n  };\n  const analyzePatchFlag = ({ key, value }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = shared.isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\n      !shared.isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && shared.isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (isEventHandler && value.type === 14) {\n        value = value.arguments[0];\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const { loc, name, nameLoc, value } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        pushRefVForMarker();\n        if (value && context.inline) {\n          const binding = context.bindingMetadata[value.content];\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\n            isStatic = false;\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression(\"ref_key\", true),\n                createSimpleExpression(value.content, true, value.loc)\n              )\n            );\n          }\n        }\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(name, true, nameLoc),\n          createSimpleExpression(\n            value ? value.content : \"\",\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      );\n    } else {\n      const { name, arg, exp, loc, modifiers } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(40, loc)\n          );\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\n        // before children\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\n      ) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\")) {\n        pushRefVForMarker();\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushRefVForMarker();\n            pushMergeArg();\n            {\n              if (isCompatEnabled(\n                \"COMPILER_V_BIND_OBJECT_ORDER\",\n                context\n              )) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind ? 34 : 35,\n              loc\n            )\n          );\n        }\n        continue;\n      }\n      if (isVBind && modifiers.some((mod) => mod.content === \"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (shared.isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!shared.isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      );\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    );\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            );\n          }\n          if (styleProp && // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            );\n          }\n        } else {\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          );\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        );\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */ new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || shared.isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    );\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\n    if (fromSetup) {\n      dirArgs.push(fromSetup);\n    } else {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const { loc } = dir;\n  if (dir.exp) dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(\n          (modifier) => createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    );\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1) propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\n\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node;\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const slotArgs = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      \"{}\",\n      \"undefined\",\n      \"true\"\n    ];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    );\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = shared.camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp) {\n          slotName = p.exp;\n        } else if (p.arg && p.arg.type === 4) {\n          const name = shared.camelize(p.arg.content);\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\n          {\n            slotName = p.exp = processExpression(p.exp, context);\n          }\n        }\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = shared.camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    );\n    slotProps = props;\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          36,\n          directives[0].loc\n        )\n      );\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\n\nconst transformOn = (dir, node, context, augmentor) => {\n  const { loc, modifiers, arg } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\n        // for non-element and vnode lifecycle event listeners, auto convert\n        // it to camelCase. See issue #2249\n        shared.toHandlerKey(shared.camelize(rawName))\n      ) : (\n        // preserve case for plain element listeners that have uppercase\n        // letters, as these may be custom elements' custom events\n        `on:${rawName}`\n      );\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp, context);\n    const isInlineStatement = !(isMemberExp || isFnExpression(exp, context));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`);\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      );\n      isInlineStatement && context.removeIdentifiers(`$event`);\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\n      !context.inVOnce && // runtime constants don't need to be cached\n      // (this is analyzed by compileScript in SFC <script setup>)\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\n      // we need to use the original function to preserve arity,\n      // e.g. <transition> relies on checking cb.length to determine\n      // transition end handling. Inline function is ok since its arity\n      // is preserved even when cached.\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\n      // it must be passed fresh to avoid stale values.\n      !hasScopeRef(exp, context.identifiers);\n      if (shouldCache && isMemberExp) {\n        if (exp.type === 4) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\n        }\n      }\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\n//@ts-ignore\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ]);\n    }\n  }\n  let ret = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\n  return ret;\n};\n\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                );\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\n      ) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === \"template\"))) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(\n              1 + (``)\n            );\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          };\n        }\n      }\n    };\n  }\n};\n\nconst seen$1 = /* @__PURE__ */ new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true\n          /* isVNode */\n        );\n      }\n    };\n  }\n};\n\nconst transformModel = (dir, node, context) => {\n  const { exp, arg } = dir;\n  if (!exp) {\n    context.onError(\n      createCompilerError(41, dir.loc)\n    );\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\n  if (!expString.trim() || !isMemberExpression(exp, context) && !maybeRef) {\n    context.onError(\n      createCompilerError(42, exp.loc)\n    );\n    return createTransformProps();\n  }\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\n    context.onError(\n      createCompilerError(43, exp.loc)\n    );\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${shared.camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  if (maybeRef) {\n    if (bindingType === \"setup-ref\") {\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`\n      ]);\n    } else {\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`\n      ]);\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ]);\n  }\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ];\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\n    props[1].value = context.cache(props[1].value);\n  }\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map((m) => m.content).map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          2\n        )\n      )\n    );\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return { props };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTERS\", context)) {\n    return;\n  }\n  if (node.type === 5) {\n    rewriteFilter(node.content, context);\n  } else if (node.type === 1) {\n    node.props.forEach((prop) => {\n      if (prop.type === 7 && prop.name !== \"for\" && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== \"object\") continue;\n      if (child.type === 4) {\n        parseFilter(child, context);\n      } else if (child.type === 8) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c, prev, i, expression, filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 39 && prev !== 92) inSingle = false;\n    } else if (inDouble) {\n      if (c === 34 && prev !== 92) inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 96 && prev !== 92) inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 47 && prev !== 92) inRegex = false;\n    } else if (c === 124 && // pipe\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\n      if (expression === void 0) {\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 34:\n          inDouble = true;\n          break;\n        // \"\n        case 39:\n          inSingle = true;\n          break;\n        // '\n        case 96:\n          inTemplateString = true;\n          break;\n        // `\n        case 40:\n          paren++;\n          break;\n        // (\n        case 41:\n          paren--;\n          break;\n        // )\n        case 91:\n          square++;\n          break;\n        // [\n        case 93:\n          square--;\n          break;\n        // ]\n        case 123:\n          curly++;\n          break;\n        // {\n        case 125:\n          curly--;\n          break;\n      }\n      if (c === 47) {\n        let j = i - 1;\n        let p;\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== \" \") break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === void 0) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n    node.ast = void 0;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf(\"(\");\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, \"filter\")}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, \"filter\")}(${exp}${args !== \")\" ? \",\" + args : args}`;\n  }\n}\n\nconst seen = /* @__PURE__ */ new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp,\n          createFunctionExpression(void 0, codegenNode),\n          `_cache`,\n          String(context.cached.length)\n        ]);\n        context.cached.push(null);\n      }\n    };\n  }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...[transformFilter] ,\n      ...prefixIdentifiers ? [\n        // order is important\n        trackVForSlotScopes,\n        transformExpression\n      ] : [],\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel\n    }\n  ];\n}\nfunction baseCompile(source, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const resolvedOptions = shared.extend({}, options, {\n    prefixIdentifiers\n  });\n  const ast = shared.isString(source) ? baseParse(source, resolvedOptions) : source;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\n  if (options.isTS) {\n    const { expressionPlugins } = options;\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\n      options.expressionPlugins = [...expressionPlugins || [], \"typescript\"];\n    }\n  }\n  transform(\n    ast,\n    shared.extend({}, resolvedOptions, {\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...options.nodeTransforms || []\n        // user transforms\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}\n        // user transforms\n      )\n    })\n  );\n  return generate(ast, resolvedOptions);\n}\n\nconst BindingTypes = {\n  \"DATA\": \"data\",\n  \"PROPS\": \"props\",\n  \"PROPS_ALIASED\": \"props-aliased\",\n  \"SETUP_LET\": \"setup-let\",\n  \"SETUP_CONST\": \"setup-const\",\n  \"SETUP_REACTIVE_CONST\": \"setup-reactive-const\",\n  \"SETUP_MAYBE_REF\": \"setup-maybe-ref\",\n  \"SETUP_REF\": \"setup-ref\",\n  \"OPTIONS\": \"options\",\n  \"LITERAL_CONST\": \"literal-const\"\n};\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexports.generateCodeFrame = shared.generateCodeFrame;\nexports.BASE_TRANSITION = BASE_TRANSITION;\nexports.BindingTypes = BindingTypes;\nexports.CAMELIZE = CAMELIZE;\nexports.CAPITALIZE = CAPITALIZE;\nexports.CREATE_BLOCK = CREATE_BLOCK;\nexports.CREATE_COMMENT = CREATE_COMMENT;\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nexports.CREATE_SLOTS = CREATE_SLOTS;\nexports.CREATE_STATIC = CREATE_STATIC;\nexports.CREATE_TEXT = CREATE_TEXT;\nexports.CREATE_VNODE = CREATE_VNODE;\nexports.CompilerDeprecationTypes = CompilerDeprecationTypes;\nexports.ConstantTypes = ConstantTypes;\nexports.ElementTypes = ElementTypes;\nexports.ErrorCodes = ErrorCodes;\nexports.FRAGMENT = FRAGMENT;\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\nexports.IS_REF = IS_REF;\nexports.KEEP_ALIVE = KEEP_ALIVE;\nexports.MERGE_PROPS = MERGE_PROPS;\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\nexports.Namespaces = Namespaces;\nexports.NodeTypes = NodeTypes;\nexports.OPEN_BLOCK = OPEN_BLOCK;\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nexports.RENDER_LIST = RENDER_LIST;\nexports.RENDER_SLOT = RENDER_SLOT;\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nexports.SUSPENSE = SUSPENSE;\nexports.TELEPORT = TELEPORT;\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nexports.TO_HANDLERS = TO_HANDLERS;\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\nexports.TS_NODE_TYPES = TS_NODE_TYPES;\nexports.UNREF = UNREF;\nexports.WITH_CTX = WITH_CTX;\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\nexports.WITH_MEMO = WITH_MEMO;\nexports.advancePositionWithClone = advancePositionWithClone;\nexports.advancePositionWithMutation = advancePositionWithMutation;\nexports.assert = assert;\nexports.baseCompile = baseCompile;\nexports.baseParse = baseParse;\nexports.buildDirectiveArgs = buildDirectiveArgs;\nexports.buildProps = buildProps;\nexports.buildSlots = buildSlots;\nexports.checkCompatEnabled = checkCompatEnabled;\nexports.convertToBlock = convertToBlock;\nexports.createArrayExpression = createArrayExpression;\nexports.createAssignmentExpression = createAssignmentExpression;\nexports.createBlockStatement = createBlockStatement;\nexports.createCacheExpression = createCacheExpression;\nexports.createCallExpression = createCallExpression;\nexports.createCompilerError = createCompilerError;\nexports.createCompoundExpression = createCompoundExpression;\nexports.createConditionalExpression = createConditionalExpression;\nexports.createForLoopParams = createForLoopParams;\nexports.createFunctionExpression = createFunctionExpression;\nexports.createIfStatement = createIfStatement;\nexports.createInterpolation = createInterpolation;\nexports.createObjectExpression = createObjectExpression;\nexports.createObjectProperty = createObjectProperty;\nexports.createReturnStatement = createReturnStatement;\nexports.createRoot = createRoot;\nexports.createSequenceExpression = createSequenceExpression;\nexports.createSimpleExpression = createSimpleExpression;\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nexports.createTemplateLiteral = createTemplateLiteral;\nexports.createTransformContext = createTransformContext;\nexports.createVNodeCall = createVNodeCall;\nexports.errorMessages = errorMessages;\nexports.extractIdentifiers = extractIdentifiers;\nexports.findDir = findDir;\nexports.findProp = findProp;\nexports.forAliasRE = forAliasRE;\nexports.generate = generate;\nexports.getBaseTransformPreset = getBaseTransformPreset;\nexports.getConstantType = getConstantType;\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\nexports.getVNodeHelper = getVNodeHelper;\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\nexports.hasScopeRef = hasScopeRef;\nexports.helperNameMap = helperNameMap;\nexports.injectProp = injectProp;\nexports.isCoreComponent = isCoreComponent;\nexports.isFnExpression = isFnExpression;\nexports.isFnExpressionBrowser = isFnExpressionBrowser;\nexports.isFnExpressionNode = isFnExpressionNode;\nexports.isFunctionType = isFunctionType;\nexports.isInDestructureAssignment = isInDestructureAssignment;\nexports.isInNewExpression = isInNewExpression;\nexports.isMemberExpression = isMemberExpression;\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\nexports.isMemberExpressionNode = isMemberExpressionNode;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isSimpleIdentifier = isSimpleIdentifier;\nexports.isSlotOutlet = isSlotOutlet;\nexports.isStaticArgOf = isStaticArgOf;\nexports.isStaticExp = isStaticExp;\nexports.isStaticProperty = isStaticProperty;\nexports.isStaticPropertyKey = isStaticPropertyKey;\nexports.isTemplateNode = isTemplateNode;\nexports.isText = isText$1;\nexports.isVSlot = isVSlot;\nexports.locStub = locStub;\nexports.noopDirectiveTransform = noopDirectiveTransform;\nexports.processExpression = processExpression;\nexports.processFor = processFor;\nexports.processIf = processIf;\nexports.processSlotOutlet = processSlotOutlet;\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\nexports.resolveComponentType = resolveComponentType;\nexports.stringifyExpression = stringifyExpression;\nexports.toValidAssetId = toValidAssetId;\nexports.trackSlotScopes = trackSlotScopes;\nexports.trackVForSlotScopes = trackVForSlotScopes;\nexports.transform = transform;\nexports.transformBind = transformBind;\nexports.transformElement = transformElement;\nexports.transformExpression = transformExpression;\nexports.transformModel = transformModel;\nexports.transformOn = transformOn;\nexports.traverseNode = traverseNode;\nexports.unwrapTSNode = unwrapTSNode;\nexports.walkBlockDeclarations = walkBlockDeclarations;\nexports.walkFunctionParams = walkFunctionParams;\nexports.walkIdentifiers = walkIdentifiers;\nexports.warnDeprecation = warnDeprecation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}