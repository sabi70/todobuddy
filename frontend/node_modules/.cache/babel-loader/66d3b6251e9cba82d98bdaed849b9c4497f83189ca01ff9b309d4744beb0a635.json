{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_responsive = _resolveComponent(\"v-responsive\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    fluid: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_v_responsive, {\n          class: \"mx-auto\",\n          \"max-width\": \"350\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card, {\n            style: {\n              \"backdrop-filter\": \"blur(10px)\",\n              \"background-color\": \"rgba(255, 255, 255, 0.2)\",\n              \"box-shadow\": \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n              \"border-radius\": \"10px\"\n            },\n            loading: $data.requestLoading,\n            class: \"pa-4 mt-4 mx-auto\",\n            title: \"User Log-in\",\n            variant: \"outlined\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_form, {\n              modelValue: $data.isValid,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.isValid = $event)\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                \"hide-details\": \"auto\",\n                label: \"Username\",\n                placeholder: \"Linus\",\n                \"prepend-icon\": \"mdi-account\",\n                variant: \"underlined\",\n                modelValue: $data.username,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n                counter: \"20\",\n                \"validate-on\": \"input\",\n                required: \"\",\n                rules: [$data.usernameRules.required, $data.usernameRules.whiteSpace, $data.usernameRules.nonWord]\n              }, null, 8, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n                \"hide-details\": \"auto\",\n                label: \"Password\",\n                placeholder: \"qwerty\",\n                \"prepend-icon\": \"mdi-lock\",\n                variant: \"underlined\",\n                modelValue: $data.password,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n                type: $data.showPassword ? 'text' : 'password',\n                required: \"\",\n                rules: [$data.passwordRules.required, $data.passwordRules.whiteSpace, $data.passwordRules.nonWord]\n              }, {\n                append: _withCtx(() => [_createVNode(_component_v_icon, {\n                  icon: $data.showPassword ? 'mdi-eye' : 'mdi-eye-off',\n                  onClick: _cache[1] || (_cache[1] = $event => $data.showPassword = !$data.showPassword)\n                }, null, 8, [\"icon\"])]),\n                _: 1\n              }, 8, [\"modelValue\", \"type\", \"rules\"]), _createVNode(_component_v_card, {\n                color: \"surface-variant\",\n                variant: \"tonal\",\n                class: \"mt-6\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_card_text, {\n                  class: \"text-medium-emphasis text-caption\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString($data.rulesDescription), 1)]),\n                  _: 1\n                })]),\n                _: 1\n              }), _createVNode(_component_v_btn, {\n                disabled: !$data.isValid,\n                onClick: $options.login,\n                color: \"info\",\n                class: \"mt-4\",\n                size: \"large\",\n                type: \"submit\",\n                block: \"\"\n              }, {\n                default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" login \")])),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"])]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }, 8, [\"loading\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })]),\n    _: 1\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","fluid","default","_withCtx","_createVNode","_component_v_row","_component_v_col","_component_v_responsive","class","_component_v_card","style","loading","$data","requestLoading","title","variant","_component_v_form","modelValue","isValid","_cache","$event","_component_v_text_field","label","placeholder","username","counter","required","rules","usernameRules","whiteSpace","nonWord","password","type","showPassword","passwordRules","append","_component_v_icon","icon","onClick","_","color","_component_v_card_text","_createTextVNode","_toDisplayString","rulesDescription","_component_v_btn","disabled","$options","login","size","block"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <v-row>\n      <v-col>\n        <v-responsive class=\"mx-auto\" max-width=\"350\">\n          <v-card\n            style=\"\n              backdrop-filter: blur(10px);\n              background-color: rgba(255, 255, 255, 0.2);\n              box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n              border-radius: 10px;\n            \"\n            :loading=\"requestLoading\"\n            class=\"pa-4 mt-4 mx-auto\"\n            title=\"User Log-in\"\n            variant=\"outlined\"\n          >\n            <v-form v-model=\"isValid\">\n              <v-text-field\n                hide-details=\"auto\"\n                label=\"Username\"\n                placeholder=\"Linus\"\n                prepend-icon=\"mdi-account\"\n                variant=\"underlined\"\n                v-model=\"username\"\n                counter=\"20\"\n                validate-on=\"input\"\n                required\n                :rules=\"[\n                  usernameRules.required,\n                  usernameRules.whiteSpace,\n                  usernameRules.nonWord,\n                ]\"\n              ></v-text-field>\n              <v-text-field\n                hide-details=\"auto\"\n                label=\"Password\"\n                placeholder=\"qwerty\"\n                prepend-icon=\"mdi-lock\"\n                variant=\"underlined\"\n                v-model=\"password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                required\n                :rules=\"[\n                  passwordRules.required,\n                  passwordRules.whiteSpace,\n                  passwordRules.nonWord,\n                ]\"\n              >\n                <template v-slot:append>\n                  <v-icon\n                    :icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                    @click=\"showPassword = !showPassword\"\n                  ></v-icon>\n                </template>\n              </v-text-field>\n              <v-card color=\"surface-variant\" variant=\"tonal\" class=\"mt-6\">\n                <v-card-text class=\"text-medium-emphasis text-caption\">\n                  {{ rulesDescription }}\n                </v-card-text>\n              </v-card>\n              <v-btn\n                :disabled=\"!isValid\"\n                @click=\"login\"\n                color=\"info\"\n                class=\"mt-4\"\n                size=\"large\"\n                type=\"submit\"\n                block\n              >\n                login\n              </v-btn>\n            </v-form>\n          </v-card>\n        </v-responsive>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport store from \"@/store\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"LoginView\",\n  data() {\n    return {\n      // Constant variables:\n      LOGIN_URL: \"http://192.168.1.115:8000/auth/login/\",\n      // Dynamic variables:\n      showPassword: false,\n      requestLoading: false,\n      username: \"\",\n      password: \"\",\n      isValid: true,\n      // The rules for username, search pattern is in RegExp:\n      usernameRules: {\n        required: (value) => !!value || \"Please, fill the field!\",\n        whiteSpace: (value) =>\n          !/\\s/.test(value) || \"The username must be without withespace!\",\n        nonWord: (value) =>\n          !/[^a-zA-Z0-9_]/.test(value) ||\n          \"The username must be in Latin letters!\",\n      },\n      // The rules for password, search pattern is in RegExp:\n      passwordRules: {\n        required: (value) => !!value || \"Please, fill the field!\",\n        whiteSpace: (value) =>\n          !/\\s/.test(value) || \"The password must be without withespace!\",\n        nonWord: (value) =>\n          !/[^a-zA-Z0-9_]/.test(value) ||\n          \"The password must be in Latin letters!\",\n      },\n      // The username and password creation tips:\n      rulesDescription:\n        \"When you create an account use these standarts to make strong\\\n        username and secure password: number in password, at least one\\\n        upper case letter, at least one lower case letter, no whitespace,\\\n        min length of password must be greater than 4, max length of password\\\n        must be lower than 20, the letters of password must be in Latin.\",\n    };\n  },\n  methods: {\n    // The authentication method that makes API post request, call to login registry\n    async login() {\n      // Checking if the rules of username and password fields are correct, if correct allow make request\n      if (this.isValid == true) {\n        this.requestLoading = true;\n        // Try to make post request\n        try {\n          await axios\n            .post(this.LOGIN_URL, {\n              username: this.username,\n              password: this.password,\n            })\n            .then((response) => {\n              // Handling response of API call;\n              // If response status is equal to 200\n              //    store username and auth state in cookies\n              //    update vuex storage with new values\n              //    redirect the user to main page\n              if (response.status == 200) {\n                this.requestLoading = false;\n                this.$cookies.set(\"user\", this.username, \"1d\");\n                this.$cookies.set(\"password\", this.password, \"1d\");\n                this.$cookies.set(\"isAuthenticated\", true, \"1d\");\n                store.dispatch(\"updateUser\", {\n                  user: this.username,\n                  password: this.password,\n                  isAuthenticated: true,\n                });\n                this.$router.push(\"/\");\n              } else {\n                // If the response status code is not equal to 200\n                // show alert dialog window with that error\n                console.log(response.data.message);\n              }\n            });\n          this.requestLoading = false;\n        } catch (err) {\n          // Catching errors of post request method\n          console.log(err);\n        }\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}