{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\n// Used axios for fetching data from backend;\nimport axios from \"axios\";\nimport AuthRequiredView from \"@/components/AuthRequired.vue\";\nexport default {\n  name: \"HomeView\",\n  components: {\n    AuthRequiredView\n  },\n  data() {\n    return {\n      TASK_API_URL: \"http://192.168.1.115:8000/tasks/\",\n      STATISTIC_UPDATING_URL: \"http://192.168.1.115:8000/auth/user/statistic/\",\n      snackbar: false,\n      isValid: false,\n      taskList: [],\n      task: {\n        title: \"\"\n      }\n    };\n  },\n  methods: {\n    // Methods for API interaction: GET, POST, PUT, DELETE;\n    // method: POST\n    async createTask() {\n      try {\n        const response = await axios.post(this.TASK_API_URL, {\n          title: this.task.title\n        }, {\n          headers: {\n            Authorization: \"Basic \" + btoa(this.userCredentials.user + \":\" + this.userCredentials.password)\n          }\n        });\n        if (response.status == 201) {\n          this.task.title = \"\";\n          this.snackbar = true;\n          this.getTask();\n        } else {\n          console.log(\"90\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    // method: GET\n    async getTask() {\n      try {\n        const response = await axios.get(this.TASK_API_URL, {\n          headers: {\n            Authorization: \"Basic \" + btoa(this.userCredentials.user + \":\" + this.userCredentials.password)\n          }\n        });\n        this.taskList = response.data;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    // method: PUT\n    async updateUserStatistic(status) {\n      try {\n        const response = await axios.put(this.STATISTIC_UPDATING_URL, {\n          completed: status,\n          not_completed: !status\n        }, {\n          headers: {\n            Authorization: \"Basic \" + btoa(this.userCredentials.user + \":\" + this.userCredentials.password)\n          }\n        });\n        if (response.status == 200) {\n          /* Hello World! */\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    // method: DELETE\n    async deleteTask(pk, status) {\n      try {\n        const response = await axios.delete(this.TASK_API_URL + String(pk) + \"/\", {\n          headers: {\n            Authorization: \"Basic \" + btoa(this.userCredentials.user + \":\" + this.userCredentials.password)\n          }\n        });\n        if (response.status == 204) {\n          await this.updateUserStatistic(status);\n          await this.getTask();\n          this.snackbar = true;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  },\n  computed: {\n    // Checking if user is authenticated, getting stored data from cookies;\n    isAuthenticated() {\n      const authStatus = this.$cookies.get(\"isAuthenticated\");\n      return authStatus;\n    },\n    // Getting user credentials from vuex store\n    userCredentials() {\n      return this.$store.state.userCredentials;\n    }\n  },\n  async mounted() {\n    // Making API call in mounted lifecycle hook\n    await this.getTask();\n  }\n};","map":{"version":3,"names":["axios","AuthRequiredView","name","components","data","TASK_API_URL","STATISTIC_UPDATING_URL","snackbar","isValid","taskList","task","title","methods","createTask","response","post","headers","Authorization","btoa","userCredentials","user","password","status","getTask","console","log","err","get","updateUserStatistic","put","completed","not_completed","deleteTask","pk","delete","String","computed","isAuthenticated","authStatus","$cookies","$store","state","mounted"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <!-- \n    The page's permission: [IsAuthenticated];\n    The authentication method: [BasicAuthentication];\n   -->\n  <div class=\"home\" v-if=\"isAuthenticated\">\n    <v-card class=\"pa-4 text-center mb-5\" title=\"🎯️ Create New Task 🎯️\">\n      <v-form v-model=\"isValid\">\n        <div id=\"task-creation-form\">\n          <v-text-field\n            v-model=\"task.title\"\n            label=\"Title\"\n            :rules=\"[(value) => !!value || 'Please, fill the field!']\"\n          >\n            <template v-slot:append-inner v-if=\"task.title.length != 0\">\n              <v-icon icon=\"mdi-close\" @click=\"task.title = ''\"></v-icon>\n            </template>\n          </v-text-field>\n          <v-btn\n            size=\"large\"\n            color=\"info\"\n            :disabled=\"!isValid\"\n            @click=\"createTask\"\n            block\n          >\n            Create\n          </v-btn>\n        </div>\n      </v-form>\n    </v-card>\n    <v-snackbar v-model=\"snackbar\">\n      The operation was successfully done!\n      <template v-slot:actions>\n        <v-btn variant=\"text\" color=\"green\" @click=\"snackbar = false\">\n          close\n        </v-btn>\n      </template>\n    </v-snackbar>\n    <div id=\"task-container\">\n      <v-card\n        variant=\"tonal\"\n        id=\"task-card\"\n        v-for=\"item in taskList\"\n        :key=\"item.pk\"\n        :title=\"item.title\"\n        target=\"_blank\"\n        subtitle=\"Check out the official repositary\"\n      >\n        <template v-slot:prepend>\n          <v-icon\n            icon=\"mdi-check\"\n            color=\"success\"\n            @click=\"deleteTask(item.pk, true)\"\n          ></v-icon>\n        </template>\n        <template v-slot:append>\n          <v-icon\n            icon=\"mdi-delete\"\n            color=\"red-darken-1\"\n            @click=\"deleteTask(item.pk, false)\"\n          ></v-icon>\n        </template>\n      </v-card>\n    </div>\n  </div>\n  <div v-if=\"!isAuthenticated\">\n    <AuthRequiredView></AuthRequiredView>\n  </div>\n</template>\n<script>\n// Used axios for fetching data from backend;\nimport axios from \"axios\";\nimport AuthRequiredView from \"@/components/AuthRequired.vue\";\n\nexport default {\n  name: \"HomeView\",\n  components: {\n    AuthRequiredView,\n  },\n  data() {\n    return {\n      TASK_API_URL: \"http://192.168.1.115:8000/tasks/\",\n      STATISTIC_UPDATING_URL: \"http://192.168.1.115:8000/auth/user/statistic/\",\n      snackbar: false,\n      isValid: false,\n      taskList: [],\n      task: {\n        title: \"\",\n      },\n    };\n  },\n  methods: {\n    // Methods for API interaction: GET, POST, PUT, DELETE;\n    // method: POST\n    async createTask() {\n      try {\n        const response = await axios.post(\n          this.TASK_API_URL,\n          {\n            title: this.task.title,\n          },\n          {\n            headers: {\n              Authorization:\n                \"Basic \" +\n                btoa(\n                  this.userCredentials.user +\n                    \":\" +\n                    this.userCredentials.password\n                ),\n            },\n          }\n        );\n        if (response.status == 201) {\n          this.task.title = \"\";\n          this.snackbar = true;\n          this.getTask();\n        } else {\n          console.log(\"90\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    // method: GET\n    async getTask() {\n      try {\n        const response = await axios.get(this.TASK_API_URL, {\n          headers: {\n            Authorization:\n              \"Basic \" +\n              btoa(\n                this.userCredentials.user + \":\" + this.userCredentials.password\n              ),\n          },\n        });\n        this.taskList = response.data;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    // method: PUT\n    async updateUserStatistic(status) {\n      try {\n        const response = await axios.put(\n          this.STATISTIC_UPDATING_URL,\n          {\n            completed: status,\n            not_completed: !status,\n          },\n          {\n            headers: {\n              Authorization:\n                \"Basic \" +\n                btoa(\n                  this.userCredentials.user +\n                    \":\" +\n                    this.userCredentials.password\n                ),\n            },\n          }\n        );\n        if (response.status == 200) {\n          /* Hello World! */\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    // method: DELETE\n    async deleteTask(pk, status) {\n      try {\n        const response = await axios.delete(\n          this.TASK_API_URL + String(pk) + \"/\",\n          {\n            headers: {\n              Authorization:\n                \"Basic \" +\n                btoa(\n                  this.userCredentials.user +\n                    \":\" +\n                    this.userCredentials.password\n                ),\n            },\n          }\n        );\n        if (response.status == 204) {\n          await this.updateUserStatistic(status);\n          await this.getTask();\n          this.snackbar = true;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n  },\n  computed: {\n    // Checking if user is authenticated, getting stored data from cookies;\n    isAuthenticated() {\n      const authStatus = this.$cookies.get(\"isAuthenticated\");\n      return authStatus;\n    },\n    // Getting user credentials from vuex store\n    userCredentials() {\n      return this.$store.state.userCredentials;\n    },\n  },\n  async mounted() {\n    // Making API call in mounted lifecycle hook\n    await this.getTask();\n  },\n};\n</script>\n<style scoped>\n#task-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  gap: 1em;\n}\n@media screen and (max-width: 992px) {\n  #task-container {\n    display: inline-flex;\n  }\n  #task-card {\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}