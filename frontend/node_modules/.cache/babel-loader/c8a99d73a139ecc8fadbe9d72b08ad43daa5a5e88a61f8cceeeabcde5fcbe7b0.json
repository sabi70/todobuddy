{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_overlay = _resolveComponent(\"v-overlay\");\n  return _openBlock(), _createBlock(_component_v_overlay, {\n    modelValue: _ctx.drawer,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.drawer = $event),\n    onClick: $options.updateSidebar\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n      class: \"sidebar\"\n    }, null, -1 /* HOISTED */), _createElementVNode(\"div\", {\n      class: \"overlay\"\n    }, null, -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onClick\"]);\n}","map":{"version":3,"names":["_createBlock","_component_v_overlay","modelValue","_ctx","drawer","_cache","$event","onClick","$options","updateSidebar","default","_withCtx","_createElementVNode","class","_"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/components/NavigationDrawer.vue"],"sourcesContent":["<template>\n  <v-overlay v-model=\"drawer\" @click=\"updateSidebar\">\n    <div class=\"sidebar\"></div>\n    <div class=\"overlay\"></div>\n  </v-overlay>\n</template>\n<script>\nimport { useTheme } from \"vuetify\";\nimport { mapState } from \"vuex\";\nimport store from \"@/store\";\n\nexport default {\n  name: \"NavigationComponent\",\n  data() {\n    return {\n      sidebar: true,\n      theme: useTheme(),\n      darkMode: false,\n      sidebarItems: [\n        { title: \"Home\", url: \"/\", icon: \"mdi-home-outline\" },\n        { title: \"Settings\", url: \"settings\", icon: \"mdi-cog-outline\" },\n        { title: \"Register\", url: \"register\", icon: \"mdi-account-plus\" },\n        { title: \"Login\", url: \"login\", icon: \"mdi-login\" },\n        { title: \"About\", url: \"about\", icon: \"mdi-information-outline\" },\n      ],\n    };\n  },\n  methods: {\n    changeTheme() {\n      this.darkMode = !this.darkMode;\n      this.theme.global.name = this.darkMode ? \"darkMode\" : \"lightMode\";\n    },\n    updateSidebar() {\n      store.dispatch(\"updateDrawer\", {\n        drawer: !this.drawer,\n      });\n    },\n  },\n  computed: {\n    ...mapState([\"drawer\"]),\n  },\n};\n</script>\n<style scoped>\n.sidebar {\n  z-index: 9999;\n  height: 100%;\n  width: 250px;\n  background: white;\n}\n.overlay {\n  height: 100%;\n  width: 1fr;\n  background: blue;\n}\n</style>\n"],"mappings":";;;uBACEA,YAAA,CAGYC,oBAAA;IAJdC,UAAA,EACsBC,IAAA,CAAAC,MAAM;IAD5B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IACsBH,IAAA,CAAAC,MAAM,GAAAE,MAAA;IAAGC,OAAK,EAAEC,QAAA,CAAAC;;IADtCC,OAAA,EAAAC,QAAA,CAEI,MAA2BN,MAAA,QAAAA,MAAA,OAA3BO,mBAAA,CAA2B;MAAtBC,KAAK,EAAC;IAAS,4BACpBD,mBAAA,CAA2B;MAAtBC,KAAK,EAAC;IAAS,2B;IAHxBC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}