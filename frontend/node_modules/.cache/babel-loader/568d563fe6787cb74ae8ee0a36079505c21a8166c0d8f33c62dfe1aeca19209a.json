{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_navigation_drawer = _resolveComponent(\"v-navigation-drawer\");\n  return _openBlock(), _createBlock(_component_v_navigation_drawer, {\n    modelValue: $data.drawer,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.drawer = $event),\n    class: \"py-2\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_list, {\n      dense: \"\",\n      class: \"text-start\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.navigationDrawerItems, item => {\n        return _openBlock(), _createBlock(_component_v_list_item, {\n          key: item.url,\n          title: \"item.name\"\n        });\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_btn, {\n      icon: $data.darkMode ? 'mdi-weather-night' : 'mdi-white-balance-sunny',\n      onClick: $options.changeTheme\n    }, null, 8 /* PROPS */, [\"icon\", \"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]);\n}","map":{"version":3,"names":["_createBlock","_component_v_navigation_drawer","modelValue","$data","drawer","_cache","$event","class","default","_withCtx","_createVNode","_component_v_list","dense","_createElementBlock","_Fragment","_renderList","navigationDrawerItems","item","_component_v_list_item","key","url","title","_","_component_v_btn","icon","darkMode","onClick","$options","changeTheme"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/components/NavigationDrawer.vue"],"sourcesContent":["<template>\n  <v-navigation-drawer v-model=\"drawer\" class=\"py-2\">\n    <v-list dense class=\"text-start\">\n      <v-list-item\n        v-for=\"item in navigationDrawerItems\"\n        :key=\"item.url\"\n        title=\"item.name\"\n      ></v-list-item>\n    </v-list>\n    <v-btn\n      :icon=\"darkMode ? 'mdi-weather-night' : 'mdi-white-balance-sunny'\"\n      @click=\"changeTheme\"\n    ></v-btn>\n  </v-navigation-drawer>\n</template>\n<script>\nimport { useTheme } from \"vuetify\";\n\nexport default {\n  name: \"NavigationComponent\",\n  data() {\n    return {\n      drawer: false,\n      theme: useTheme(),\n      darkMode: false,\n      navigationDrawerItems: [\n        { title: \"Home\", url: \"/\", icon: \"mdi-home-outline\" },\n        { title: \"Settings\", url: \"settings\", icon: \"mdi-cog-outline\" },\n        { title: \"Register\", url: \"register\", icon: \"mdi-account-plus\" },\n        { title: \"Login\", url: \"login\", icon: \"mdi-login\" },\n        { title: \"About\", url: \"about\", icon: \"mdi-information-outline\" },\n      ],\n    };\n  },\n  methods: {\n    openNavbar() {\n      this.drawer = !this.drawer;\n    },\n    changeTheme() {\n      this.darkMode = !this.darkMode;\n      this.theme.global.name = this.darkMode ? \"darkMode\" : \"lightMode\";\n    },\n  },\n};\n</script>\n"],"mappings":";;;;;;uBACEA,YAAA,CAYsBC,8BAAA;IAbxBC,UAAA,EACgCC,KAAA,CAAAC,MAAM;IADtC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IACgCH,KAAA,CAAAC,MAAM,GAAAE,MAAA;IAAEC,KAAK,EAAC;;IAD9CC,OAAA,EAAAC,QAAA,CAEI,MAMS,CANTC,YAAA,CAMSC,iBAAA;MANDC,KAAK,EAAL,EAAK;MAACL,KAAK,EAAC;;MAFxBC,OAAA,EAAAC,QAAA,CAIQ,MAAqC,E,kBADvCI,mBAAA,CAIeC,SAAA,QAPrBC,WAAA,CAIuBZ,KAAA,CAAAa,qBAAqB,EAA7BC,IAAI;6BADbjB,YAAA,CAIekB,sBAAA;UAFZC,GAAG,EAAEF,IAAI,CAACG,GAAG;UACdC,KAAK,EAAC;;;MANdC,CAAA;QASIZ,YAAA,CAGSa,gBAAA;MAFNC,IAAI,EAAErB,KAAA,CAAAsB,QAAQ;MACdC,OAAK,EAAEC,QAAA,CAAAC;;IAXdN,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}