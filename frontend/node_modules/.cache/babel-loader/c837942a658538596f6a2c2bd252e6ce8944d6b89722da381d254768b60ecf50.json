{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createSlots as _createSlots, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  id: \"task-creation-form\"\n};\nconst _hoisted_3 = {\n  id: \"task-container\"\n};\nexport function render(_ctx, _cache) {\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_snackbar = _resolveComponent(\"v-snackbar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_card, {\n    class: \"pa-4 text-center mb-5\",\n    title: \"🎯️ Create New Task 🎯️\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_form, {\n      modelValue: _ctx.isValid,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.isValid = $event)\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_text_field, {\n        modelValue: _ctx.task.title,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.task.title = $event),\n        label: \"Title\",\n        rules: [value => !!value || 'Please, fill the field!']\n      }, _createSlots({\n        _: 2 /* DYNAMIC */\n      }, [_ctx.task.title.length != 0 ? {\n        name: \"append-inner\",\n        fn: _withCtx(() => [_createVNode(_component_v_icon, {\n          icon: \"mdi-close\",\n          onClick: _cache[0] || (_cache[0] = $event => _ctx.task.title = '')\n        })]),\n        key: \"0\"\n      } : undefined]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_btn, {\n        size: \"large\",\n        color: \"info\",\n        disabled: !_ctx.isValid,\n        onClick: _ctx.createTask,\n        block: \"\"\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\" Create \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"disabled\", \"onClick\"])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_v_snackbar, {\n    modelValue: _ctx.snackbar,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.snackbar = $event)\n  }, {\n    actions: _withCtx(() => [_createVNode(_component_v_btn, {\n      variant: \"text\",\n      color: \"green\",\n      onClick: _cache[3] || (_cache[3] = $event => _ctx.snackbar = false)\n    }, {\n      default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\" close \")])),\n      _: 1 /* STABLE */\n    })]),\n    default: _withCtx(() => [_cache[7] || (_cache[7] = _createTextVNode(\" The operation was successfully done! \"))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.taskList, item => {\n    return _openBlock(), _createBlock(_component_v_card, {\n      key: item.pk,\n      title: item.title,\n      target: \"_blank\",\n      subtitle: \"Check out the official repositary\"\n    }, {\n      prepend: _withCtx(() => [_createVNode(_component_v_icon, {\n        icon: \"mdi-check\",\n        color: \"success\",\n        onClick: $event => _ctx.deleteTask(item.pk, true)\n      }, null, 8 /* PROPS */, [\"onClick\"])]),\n      append: _withCtx(() => [_createVNode(_component_v_icon, {\n        icon: \"mdi-delete\",\n        color: \"red-darken-1\",\n        onClick: $event => _ctx.deleteTask(item.pk, false)\n      }, null, 8 /* PROPS */, [\"onClick\"])]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"title\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createVNode(_component_v_btn, {\n    onClick: _ctx.getTask\n  }, {\n    default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"getTasks\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createElementVNode(\"p\", null, _toDisplayString(_ctx.taskList), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createVNode","_component_v_card","title","default","_withCtx","_component_v_form","modelValue","_ctx","isValid","_cache","$event","_createElementVNode","_hoisted_2","_component_v_text_field","task","label","rules","value","_createSlots","_","length","name","fn","_component_v_icon","icon","onClick","key","undefined","_component_v_btn","size","color","disabled","createTask","block","_createTextVNode","_component_v_snackbar","snackbar","actions","variant","_hoisted_3","_Fragment","_renderList","taskList","item","_createBlock","pk","target","subtitle","prepend","deleteTask","append","getTask","_toDisplayString"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <v-card class=\"pa-4 text-center mb-5\" title=\"🎯️ Create New Task 🎯️\">\n      <v-form v-model=\"isValid\">\n        <div id=\"task-creation-form\">\n          <v-text-field\n            v-model=\"task.title\"\n            label=\"Title\"\n            :rules=\"[(value) => !!value || 'Please, fill the field!']\"\n          >\n            <template v-slot:append-inner v-if=\"task.title.length != 0\">\n              <v-icon icon=\"mdi-close\" @click=\"task.title = ''\"></v-icon>\n            </template>\n          </v-text-field>\n          <v-btn\n            size=\"large\"\n            color=\"info\"\n            :disabled=\"!isValid\"\n            @click=\"createTask\"\n            block\n          >\n            Create\n          </v-btn>\n        </div>\n      </v-form>\n    </v-card>\n    <v-snackbar v-model=\"snackbar\">\n      The operation was successfully done!\n      <template v-slot:actions>\n        <v-btn variant=\"text\" color=\"green\" @click=\"snackbar = false\">\n          close\n        </v-btn>\n      </template>\n    </v-snackbar>\n    <div id=\"task-container\">\n      <v-card\n        v-for=\"item in taskList\"\n        :key=\"item.pk\"\n        :title=\"item.title\"\n        target=\"_blank\"\n        subtitle=\"Check out the official repositary\"\n      >\n        <template v-slot:prepend>\n          <v-icon\n            icon=\"mdi-check\"\n            color=\"success\"\n            @click=\"deleteTask(item.pk, true)\"\n          ></v-icon>\n        </template>\n        <template v-slot:append>\n          <v-icon\n            icon=\"mdi-delete\"\n            color=\"red-darken-1\"\n            @click=\"deleteTask(item.pk, false)\"\n          ></v-icon>\n        </template>\n      </v-card>\n    </div>\n    <v-btn @click=\"getTask\">getTasks</v-btn>\n    <p>{{ taskList }}</p>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      TASK_API_URL: \"http://192.168.1.115:8000/tasks/\",\n      STATISTIC_UPDATING_URL: \"http://192.168.1.115:8000/auth/user/statistic/\",\n      snackbar: false,\n      isValid: false,\n      taskList: [],\n      task: {\n        title: \"\",\n      },\n    };\n  },\n  methods: {\n    createTask() {\n      try {\n        axios\n          .post(\n            this.TASK_API_URL,\n            {\n              title: this.task.title,\n            },\n            {\n              headers: {\n                Authorization:\n                  \"Basic \" +\n                  btoa(\n                    this.userCredentials.user +\n                      \":\" +\n                      this.userCredentials.password\n                  ),\n              },\n            }\n          )\n          .then((response) => {\n            if (response.status == 201) {\n              this.task.title = \"\";\n              this.snackbar = true;\n              this.getTask();\n            } else {\n              alert(\"00\");\n            }\n          });\n      } catch (err) {\n        alert(\"60\");\n      }\n    },\n    getTask() {\n      try {\n        axios\n          .get(this.TASK_API_URL, {\n            headers: {\n              Authorization:\n                \"Basic \" +\n                btoa(\n                  this.userCredentials.user +\n                    \":\" +\n                    this.userCredentials.password\n                ),\n            },\n          })\n          .then((response) => {\n            this.taskList = response.data;\n          });\n      } catch {\n        alert(\"90\");\n      }\n    },\n    updateUserStatistic(status) {\n      try {\n        axios\n          .put(\n            this.STATISTIC_UPDATING_URL,\n            {\n              completed: status,\n              not_completed: !status,\n            },\n            {\n              headers: {\n                Authorization:\n                  \"Basic \" +\n                  btoa(\n                    this.userCredentials.user +\n                      \":\" +\n                      this.userCredentials.password\n                  ),\n              },\n            }\n          )\n          .then((response) => {\n            if (response.status == 200) {\n              /* Hello World! */\n            }\n          });\n      } catch (err) {\n        alert(\"90\");\n      }\n    },\n    deleteTask(pk, status) {\n      try {\n        axios\n          .delete(this.TASK_API_URL + String(pk) + \"/\", {\n            headers: {\n              Authorization:\n                \"Basic \" +\n                btoa(\n                  this.userCredentials.user +\n                    \":\" +\n                    this.userCredentials.password\n                ),\n            },\n          })\n          .then((response) => {\n            if (response.status == 204) {\n              this.updateUserStatistic(status);\n              this.getTask();\n              this.snackbar = true;\n            }\n          });\n      } catch (err) {\n        alert(\"90\");\n      }\n    },\n  },\n  computed: {\n    userCredentials() {\n      return this.$store.state.userCredentials;\n    },\n  },\n  mounted () {\n    this.getTask(),\n  },\n};\n</script>\n<style scoped>\n#task-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  gap: 1em;\n}\n@media screen and (max-width: 768px) {\n  #task-container {\n    display: inline-flex;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}