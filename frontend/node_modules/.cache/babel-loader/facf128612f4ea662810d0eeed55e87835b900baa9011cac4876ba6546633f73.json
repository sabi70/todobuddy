{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sidebar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_overlay = _resolveComponent(\"v-overlay\");\n  const _component_v_scroll_x_transition = _resolveComponent(\"v-scroll-x-transition\");\n  return _ctx.drawer ? (_openBlock(), _createBlock(_component_v_scroll_x_transition, {\n    key: 0\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"lol\"), _createElementVNode(\"p\", null, \"lol\"), _createElementVNode(\"p\", null, \"lol\"), _createElementVNode(\"p\", null, \"lol\"), _createElementVNode(\"p\", null, \"lol\")], -1 /* HOISTED */)), _createVNode(_component_v_overlay, {\n      modelValue: _ctx.drawer,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.drawer = $event),\n      onClick: $options.updateSidebar\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onClick\"])])]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","_ctx","drawer","_createBlock","_component_v_scroll_x_transition","key","default","_withCtx","_createElementVNode","_hoisted_1","_createVNode","_component_v_overlay","modelValue","_cache","$event","onClick","$options","updateSidebar","_","_createCommentVNode"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/components/NavigationDrawer.vue"],"sourcesContent":["<template>\n  <v-scroll-x-transition v-if=\"drawer\">\n  <div class=\"sidebar\">\n    <div>\n      <p>lol</p>\n      <p>lol</p>\n      <p>lol</p>\n      <p>lol</p>\n      <p>lol</p>\n    </div>\n    <v-overlay v-model=\"drawer\" @click=\"updateSidebar\"></v-overlay>\n  </div>\n  </v-scroll-x-transition>\n</template>\n<script>\nimport { useTheme } from \"vuetify\";\nimport { mapState } from \"vuex\";\nimport store from \"@/store\";\n\nexport default {\n  name: \"NavigationComponent\",\n  data() {\n    return {\n      sidebar: true,\n      theme: useTheme(),\n      darkMode: false,\n      sidebarItems: [\n        { title: \"Home\", url: \"/\", icon: \"mdi-home-outline\" },\n        { title: \"Settings\", url: \"settings\", icon: \"mdi-cog-outline\" },\n        { title: \"Register\", url: \"register\", icon: \"mdi-account-plus\" },\n        { title: \"Login\", url: \"login\", icon: \"mdi-login\" },\n        { title: \"About\", url: \"about\", icon: \"mdi-information-outline\" },\n      ],\n    };\n  },\n  methods: {\n    changeTheme() {\n      this.darkMode = !this.darkMode;\n      this.theme.global.name = this.darkMode ? \"darkMode\" : \"lightMode\";\n    },\n    updateSidebar() {\n      store.dispatch(\"updateDrawer\", {\n        drawer: !this.drawer,\n      });\n    },\n  },\n  computed: {\n    ...mapState([\"drawer\"]),\n  },\n};\n</script>\n<style scoped>\n.sidebar {\n  position: fixed;\n  top: 64px;\n  height: 100vh;\n  width: 250px;\n  background: white;\n}\n.overlay {\n  height: 100%;\n  width: 1fr;\n  background: blue;\n}\n</style>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAS;;;;SADSC,IAAA,CAAAC,MAAM,I,cAAnCC,YAAA,CAWwBC,gCAAA;IAZ1BC,GAAA;EAAA;IAAAC,OAAA,EAAAC,QAAA,CAEE,MASM,CATNC,mBAAA,CASM,OATNC,UASM,G,0BARJD,mBAAA,CAMM,cALJA,mBAAA,CAAU,WAAP,KAAG,GACNA,mBAAA,CAAU,WAAP,KAAG,GACNA,mBAAA,CAAU,WAAP,KAAG,GACNA,mBAAA,CAAU,WAAP,KAAG,GACNA,mBAAA,CAAU,WAAP,KAAG,E,sBAERE,YAAA,CAA+DC,oBAAA;MAVnEC,UAAA,EAUwBX,IAAA,CAAAC,MAAM;MAV9B,uBAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUwBb,IAAA,CAAAC,MAAM,GAAAY,MAAA;MAAGC,OAAK,EAAEC,QAAA,CAAAC;;IAVxCC,CAAA;QAAAC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}