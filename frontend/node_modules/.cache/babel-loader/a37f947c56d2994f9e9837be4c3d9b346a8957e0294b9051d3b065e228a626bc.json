{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, toDisplayString as _toDisplayString, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_expansion_panel_title = _resolveComponent(\"v-expansion-panel-title\");\n  const _component_v_expansion_panel_text = _resolveComponent(\"v-expansion-panel-text\");\n  const _component_v_expansion_panel = _resolveComponent(\"v-expansion-panel\");\n  const _component_v_expansion_panels = _resolveComponent(\"v-expansion-panels\");\n  const _component_v_navigation_drawer = _resolveComponent(\"v-navigation-drawer\");\n  return _openBlock(), _createBlock(_component_v_navigation_drawer, {\n    modelValue: _ctx.drawer,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.drawer = $event),\n    app: \"\",\n    fixed: \"\",\n    clipped: \"\",\n    class: \"rounded-be-lg\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_list, {\n      dense: \"\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sidebarItems, (item, index) => {\n        return _openBlock(), _createBlock(_component_v_list_item, {\n          key: index,\n          value: item,\n          to: item.url,\n          onClick: $options.updateSidebar\n        }, {\n          prepend: _withCtx(() => [_createVNode(_component_v_icon, {\n            icon: item.icon\n          }, null, 8 /* PROPS */, [\"icon\"])]),\n          default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n            textContent: _toDisplayString(item.title)\n          }, null, 8 /* PROPS */, [\"textContent\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"to\", \"onClick\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_divider, {\n      class: \"pa-2\"\n    }), _createVNode(_component_v_expansion_panels, {\n      variant: \"inset\",\n      class: \"pb-10\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_expansion_panel, {\n        modelValue: _ctx.panel,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.panel = $event)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Users\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_expansion_panel_text, null, {\n          default: _withCtx(() => [_createVNode(_component_v_list, null, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, (item, index) => {\n              return _openBlock(), _createBlock(_component_v_list_item, {\n                variant: \"plain\",\n                key: index,\n                value: item.name,\n                to: item.url,\n                \"append-icon\": \"mdi-arrow-right\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"to\"]);\n            }), 128 /* KEYED_FRAGMENT */))]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]);\n}","map":{"version":3,"names":["_createBlock","_component_v_navigation_drawer","modelValue","_ctx","drawer","_cache","$event","app","fixed","clipped","class","default","_withCtx","_createVNode","_component_v_list","dense","_createElementBlock","_Fragment","_renderList","$data","sidebarItems","item","index","_component_v_list_item","key","value","to","url","onClick","$options","updateSidebar","prepend","_component_v_icon","icon","_component_v_list_item_title","textContent","_toDisplayString","title","_","_component_v_divider","_component_v_expansion_panels","variant","_component_v_expansion_panel","panel","_component_v_expansion_panel_title","_createTextVNode","_component_v_expansion_panel_text","users","name"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/components/NavigationDrawer.vue"],"sourcesContent":["<template>\n  <v-navigation-drawer\n    v-model=\"drawer\"\n    app\n    fixed\n    clipped\n    class=\"rounded-be-lg\"\n  >\n    <v-list dense>\n      <v-list-item\n        v-for=\"(item, index) in sidebarItems\"\n        :key=\"index\"\n        :value=\"item\"\n        :to=\"item.url\"\n        @click=\"updateSidebar\"\n      >\n        <v-list-item-title v-text=\"item.title\"></v-list-item-title>\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n      </v-list-item>\n    </v-list>\n    <v-divider class=\"pa-2\"></v-divider>\n    <v-expansion-panels variant=\"inset\" class=\"pb-10\">\n      <v-expansion-panel v-model=\"panel\">\n        <v-expansion-panel-title>Users</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          <v-list>\n            <v-list-item\n              variant=\"plain\"\n              v-for=\"(item, index) in users\"\n              :key=\"index\"\n              :value=\"item.name\"\n              :to=\"item.url\"\n              append-icon=\"mdi-arrow-right\"\n            >\n              <v-list-item-title>{{ item.name }}</v-list-item-title>\n            </v-list-item>\n          </v-list>\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </v-navigation-drawer>\n</template>\n<script>\nimport { useTheme } from \"vuetify\";\nimport { mapState } from \"vuex\";\nimport store from \"@/store\";\n\nexport default {\n  name: \"NavigationComponent\",\n  data() {\n    return {\n      sidebar: true,\n      theme: useTheme(),\n      darkMode: false,\n      sidebarItems: [\n        { title: \"Home\", url: \"/\", icon: \"mdi-home-outline\" },\n        { title: \"Settings\", url: \"settings\", icon: \"mdi-cog-outline\" },\n        { title: \"Register\", url: \"register\", icon: \"mdi-account-plus\" },\n        { title: \"Login\", url: \"login\", icon: \"mdi-login\" },\n        { title: \"About\", url: \"about\", icon: \"mdi-information-outline\" },\n      ],\n      users: [\n        { name: \"Mico\", url: \"/\" },\n        { name: \"Stella\", url: \"/\" },\n        { name: \"Ben\", url: \"/\" },\n        { name: \"Mico\", url: \"/\" },\n        { name: \"Stella\", url: \"/\" },\n      ],\n    };\n  },\n  methods: {\n    changeTheme() {\n      this.darkMode = !this.darkMode;\n      this.theme.global.name = this.darkMode ? \"darkMode\" : \"lightMode\";\n    },\n    updateSidebar() {\n      store.dispatch(\"updateDrawer\", {\n        drawer: !this.drawer,\n      });\n    },\n  },\n  computed: {\n    ...mapState([\"drawer\"]),\n  },\n};\n</script>\n<style scoped>\n.sidebar {\n  z-index: 2001;\n  position: fixed;\n  top: 64px;\n  height: 100vh;\n  width: 250px;\n}\n@media screen and (min-width: 992px) {\n  #overlay {\n    display: none;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;uBACEA,YAAA,CAyCsBC,8BAAA;IA1CxBC,UAAA,EAEaC,IAAA,CAAAC,MAAM;IAFnB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEaH,IAAA,CAAAC,MAAM,GAAAE,MAAA;IACfC,GAAG,EAAH,EAAG;IACHC,KAAK,EAAL,EAAK;IACLC,OAAO,EAAP,EAAO;IACPC,KAAK,EAAC;;IANVC,OAAA,EAAAC,QAAA,CAQI,MAaS,CAbTC,YAAA,CAaSC,iBAAA;MAbDC,KAAK,EAAL;IAAK;MARjBJ,OAAA,EAAAC,QAAA,CAUQ,MAAqC,E,kBADvCI,mBAAA,CAWcC,SAAA,QApBpBC,WAAA,CAUgCC,KAAA,CAAAC,YAAY,EAV5C,CAUgBC,IAAI,EAAEC,KAAK;6BADrBtB,YAAA,CAWcuB,sBAAA;UATXC,GAAG,EAAEF,KAAK;UACVG,KAAK,EAAEJ,IAAI;UACXK,EAAE,EAAEL,IAAI,CAACM,GAAG;UACZC,OAAK,EAAEC,QAAA,CAAAC;;UAGSC,OAAO,EAAAnB,QAAA,CACtB,MAAmC,CAAnCC,YAAA,CAAmCmB,iBAAA;YAA1BC,IAAI,EAAEZ,IAAI,CAACY;;UAlB9BtB,OAAA,EAAAC,QAAA,CAgBQ,MAA2D,CAA3DC,YAAA,CAA2DqB,4BAAA;YAhBnEC,WAAA,EAgB2BC,gBAAA,CAAmBf,IAAP,CAACgB,KAAK;;UAhB7CC,CAAA;;;MAAAA,CAAA;QAsBIzB,YAAA,CAAoC0B,oBAAA;MAAzB7B,KAAK,EAAC;IAAM,IACvBG,YAAA,CAkBqB2B,6BAAA;MAlBDC,OAAO,EAAC,OAAO;MAAC/B,KAAK,EAAC;;MAvB9CC,OAAA,EAAAC,QAAA,CAwBM,MAgBoB,CAhBpBC,YAAA,CAgBoB6B,4BAAA;QAxC1BxC,UAAA,EAwBkCC,IAAA,CAAAwC,KAAK;QAxBvC,uBAAAtC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAwBkCH,IAAA,CAAAwC,KAAK,GAAArC,MAAA;;QAxBvCK,OAAA,EAAAC,QAAA,CAyBQ,MAAwD,CAAxDC,YAAA,CAAwD+B,kCAAA;UAzBhEjC,OAAA,EAAAC,QAAA,CAyBiC,MAAKP,MAAA,QAAAA,MAAA,OAzBtCwC,gBAAA,CAyBiC,OAAK,E;UAzBtCP,CAAA;YA0BQzB,YAAA,CAayBiC,iCAAA;UAvCjCnC,OAAA,EAAAC,QAAA,CA2BU,MAWS,CAXTC,YAAA,CAWSC,iBAAA;YAtCnBH,OAAA,EAAAC,QAAA,CA8Bc,MAA8B,E,kBAFhCI,mBAAA,CAScC,SAAA,QArC1BC,WAAA,CA8BsCC,KAAA,CAAA4B,KAAK,EA9B3C,CA8BsB1B,IAAI,EAAEC,KAAK;mCAFrBtB,YAAA,CAScuB,sBAAA;gBARZkB,OAAO,EAAC,OAAO;gBAEdjB,GAAG,EAAEF,KAAK;gBACVG,KAAK,EAAEJ,IAAI,CAAC2B,IAAI;gBAChBtB,EAAE,EAAEL,IAAI,CAACM,GAAG;gBACb,aAAW,EAAC;;gBAlC1BhB,OAAA,EAAAC,QAAA,CAoCc,MAAsD,CAAtDC,YAAA,CAAsDqB,4BAAA;kBApCpEvB,OAAA,EAAAC,QAAA,CAoCiC,MAAe,CApChDiC,gBAAA,CAAAT,gBAAA,CAoCoCf,IAAI,CAAC2B,IAAI,iB;kBApC7CV,CAAA;;gBAAAA,CAAA;;;YAAAA,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}