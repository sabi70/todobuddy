{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_switch = _resolveComponent(\"v-switch\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return _openBlock(), _createBlock(_component_v_card, null, {\n    default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n      default: _withCtx(() => [_createVNode(_component_v_switch, {\n        label: \"Toggle between light and dark theme.\",\n        modelValue: $data.darkMode,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.darkMode = $event),\n        \"model-value\": $data.darkMode,\n        onChange: $options.changeTheme\n      }, null, 8 /* PROPS */, [\"modelValue\", \"model-value\", \"onChange\"]), _createTextVNode(\" \" + _toDisplayString($data.darkMode), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_card","default","_withCtx","_createVNode","_component_v_card_text","_component_v_switch","label","modelValue","$data","darkMode","_cache","$event","onChange","$options","changeTheme","_createTextVNode","_toDisplayString","_"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/views/SettingsView.vue"],"sourcesContent":["<template>\n  <v-card>\n    <v-card-text>\n      <v-switch\n        label=\"Toggle between light and dark theme.\"\n        v-model=\"darkMode\"\n        :model-value=\"darkMode\"\n        @change=\"changeTheme\"\n      >\n      </v-switch>\n      {{ darkMode }}\n    </v-card-text>\n  </v-card>\n</template>\n<script>\nimport { useTheme } from \"vuetify\";\n\nexport default {\n  name: \"SettingsView\",\n  data() {\n    return {\n      theme: useTheme(),\n      darkMode: false,\n    };\n  },\n  methods: {\n    changeTheme() {\n      this.theme.global.name = this.darkMode ? \"darkMode\" : \"lightMode\";\n      localStorage.setItem(\"theme\", this.darkMode);\n    },\n  },\n  mounted() {\n    this.darkMode = localStorage.getItem(\"theme\");\n  },\n};\n</script>\n"],"mappings":";;;;;uBACEA,YAAA,CAWSC,iBAAA;IAZXC,OAAA,EAAAC,QAAA,CAEI,MASc,CATdC,YAAA,CAScC,sBAAA;MAXlBH,OAAA,EAAAC,QAAA,CAGM,MAMW,CANXC,YAAA,CAMWE,mBAAA;QALTC,KAAK,EAAC,sCAAsC;QAJpDC,UAAA,EAKiBC,KAAA,CAAAC,QAAQ;QALzB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKiBH,KAAA,CAAAC,QAAQ,GAAAE,MAAA;QAChB,aAAW,EAAEH,KAAA,CAAAC,QAAQ;QACrBG,QAAM,EAAEC,QAAA,CAAAC;0EAPjBC,gBAAA,CASiB,GACX,GAAAC,gBAAA,CAAGR,KAAA,CAAAC,QAAQ,iB;MAVjBQ,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}