{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex align-center justify-center\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Doughnut = _resolveComponent(\"Doughnut\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Doughnut, {\n    data: _ctx.data,\n    options: _ctx.options\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]), _createElementVNode(\"div\", null, _toDisplayString(_ctx.usersList), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_Doughnut","data","_ctx","options","_toDisplayString","usersList"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/components/DoughnutChart.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex align-center justify-center\">\n    <Doughnut :data=\"data\" :options=\"options\"></Doughnut>\n  </div>\n  <div>{{ usersList }}</div>\n</template>\n<script>\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut } from \"vue-chartjs\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default {\n  name: \"DoughnutChart\",\n  components: {\n    Doughnut,\n  },\n  props: {\n    usersList: Array,\n  },\n  data() {\n    return {\n      taskSum: [],\n      data: {\n        labels: ,\n        datasets: [\n          {\n            backgroundColor: [\n              \"#1abc9c\",\n              \"#9b59b6\",\n              \"#d35400\",\n              \"#34495e\",\n              \"#f1c40f\",\n              \"#3498db\",\n              \"#c0392b\",\n              \"#16a085\",\n              \"#f39c12\",\n              \"#2c3e50\",\n              \"#e74c3c\",\n            ],\n            data: [90, 90],\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    };\n  },\n  methods: {\n    getUsernames() {\n      for (let i = 0; i < this.usersList.length; i++) {\n        this.usernames.push(this.usersList[i].username);\n      }\n    },\n    getTaskSum() {\n      for (let i = 0; i < this.usersList.length; i++) {\n        this.taskSum.push(\n          this.usersList[i].completed + this.usersList[i].not_completed\n        );\n      }\n    },\n  },\n  computed: {\n    usernames() {\n    return this.usersList.map((user) => user.username)\n    },\n  },\n};\n</script>\n<style>\ncanvas {\n  width: auto;\n  height: auto;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAoC;;;uBADjDC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAqDC,mBAAA;IAA1CC,IAAI,EAAEC,IAAA,CAAAD,IAAI;IAAGE,OAAO,EAAED,IAAA,CAAAC;kDAEnCN,mBAAA,CAA0B,aAAAO,gBAAA,CAAlBF,IAAA,CAAAG,SAAS,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}