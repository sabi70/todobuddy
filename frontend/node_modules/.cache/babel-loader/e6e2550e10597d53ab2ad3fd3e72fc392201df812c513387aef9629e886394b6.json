{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($data.username), 1 /* TEXT */)]), _createVNode(_component_v_btn, {\n    onClick: $options.setUser\n  }, {\n    default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"set\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n    onClick: $options.getCookie\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"get\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$data","username","_createVNode","_component_v_btn","onClick","$options","setUser","default","_withCtx","_cache","_createTextVNode","_","getCookie"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <h1>\n        {{ username }}\n      </h1>\n    </div>\n    <v-btn @click=\"setUser\">set</v-btn>\n    <v-btn @click=\"getCookie\">get</v-btn>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      username: this.getCookie().username,\n      password: \"tenco\",\n      numberList: 0,\n      isAuthenticated: false,\n    };\n  },\n  methods: {\n    setUser() {\n      document.cookie =\n        encodeURIComponent(self.username) +\n        \"=\" +\n        encodeURIComponent(self.password);\n      alert(document.cookie);\n    },\n    getCookie() {\n      return document.cookie.split(\";\").reduce((acc, item) => {\n        const [name, value] = item.split(\"=\");\n        acc[name] = value;\n        return acc;\n      }, {});\n    },\n  },\n};\n</script>\n"],"mappings":";;;uBACEA,mBAAA,CAQM,cAPJC,mBAAA,CAIM,cAHJA,mBAAA,CAEK,YAAAC,gBAAA,CADAC,KAAA,CAAAC,QAAQ,iB,GAGfC,YAAA,CAAmCC,gBAAA;IAA3BC,OAAK,EAAEC,QAAA,CAAAC;EAAO;IAP1BC,OAAA,EAAAC,QAAA,CAO4B,MAAGC,MAAA,QAAAA,MAAA,OAP/BC,gBAAA,CAO4B,KAAG,E;IAP/BC,CAAA;kCAQIT,YAAA,CAAqCC,gBAAA;IAA7BC,OAAK,EAAEC,QAAA,CAAAO;EAAS;IAR5BL,OAAA,EAAAC,QAAA,CAQ8B,MAAGC,MAAA,QAAAA,MAAA,OARjCC,gBAAA,CAQ8B,KAAG,E;IARjCC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}