{"ast":null,"code":"import { createStore } from \"vuex\";\nexport default createStore({\n  state: {\n    userCredentials: {\n      username: null,\n      password: null\n    },\n    isAuthenticated: false\n  },\n  getters: {},\n  mutations: {\n    setUser: (state, payload) => {\n      state.userCredentials[\"username\"] = payload.user;\n      state.userCredentials[\"password\"] = payload.password;\n      state.isAuthenticated = payload.isAuthenticated;\n    }\n  },\n  actions: {\n    updateUser({\n      commit\n    }, payload) {\n      commit(\"setUser\", payload);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","userCredentials","username","password","isAuthenticated","getters","mutations","setUser","payload","user","actions","updateUser","commit","modules"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {\n    userCredentials: {\n      username: null,\n      password: null,\n    },\n    isAuthenticated: false,\n  },\n  getters: {},\n  mutations: {\n    setUser: (state, payload) => {\n      state.userCredentials[\"username\"] = payload.user;\n      state.userCredentials[\"password\"] = payload.password;\n      state.isAuthenticated = payload.isAuthenticated;\n    },\n  },\n  actions: {\n    updateUser({ commit }, payload) {\n      commit(\"setUser\", payload);\n    },\n  },\n  modules: {},\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,eAAe,EAAE;MACfC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;IACZ,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EACDC,OAAO,EAAE,CAAC,CAAC;EACXC,SAAS,EAAE;IACTC,OAAO,EAAEA,CAACP,KAAK,EAAEQ,OAAO,KAAK;MAC3BR,KAAK,CAACC,eAAe,CAAC,UAAU,CAAC,GAAGO,OAAO,CAACC,IAAI;MAChDT,KAAK,CAACC,eAAe,CAAC,UAAU,CAAC,GAAGO,OAAO,CAACL,QAAQ;MACpDH,KAAK,CAACI,eAAe,GAAGI,OAAO,CAACJ,eAAe;IACjD;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,UAAUA,CAAC;MAAEC;IAAO,CAAC,EAAEJ,OAAO,EAAE;MAC9BI,MAAM,CAAC,SAAS,EAAEJ,OAAO,CAAC;IAC5B;EACF,CAAC;EACDK,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}