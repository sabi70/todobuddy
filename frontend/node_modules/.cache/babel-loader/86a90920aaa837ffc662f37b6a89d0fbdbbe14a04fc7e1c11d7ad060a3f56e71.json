{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, toDisplayString as _toDisplayString, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return _ctx.drawer ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"sidebar\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.updateSidebar && $options.updateSidebar(...args))\n  }, [_createVNode(_component_v_card, {\n    class: \"sidebar-content rounded-0\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_list, {\n      dense: \"\",\n      class: \"sidebar-list\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sidebarItems, (item, index) => {\n        return _openBlock(), _createBlock(_component_v_list_item, {\n          key: index,\n          value: item,\n          to: item.url,\n          onClick: $options.updateSidebar\n        }, {\n          prepend: _withCtx(() => [_createVNode(_component_v_icon, {\n            icon: item.icon\n          }, null, 8 /* PROPS */, [\"icon\"])]),\n          default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n            textContent: _toDisplayString(item.title)\n          }, null, 8 /* PROPS */, [\"textContent\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"to\", \"onClick\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["_ctx","drawer","_createElementBlock","key","class","onClick","_cache","args","$options","updateSidebar","_createVNode","_component_v_card","default","_withCtx","_component_v_list","dense","_Fragment","_renderList","$data","sidebarItems","item","index","_createBlock","_component_v_list_item","value","to","url","prepend","_component_v_icon","icon","_component_v_list_item_title","textContent","_toDisplayString","title","_","_createCommentVNode"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/components/NavigationDrawer.vue"],"sourcesContent":["<template>\n  <div class=\"sidebar\" v-if=\"drawer\" @click=\"updateSidebar\">\n    <v-card class=\"sidebar-content rounded-0\">\n      <v-list dense class=\"sidebar-list\">\n        <v-list-item\n          v-for=\"(item, index) in sidebarItems\"\n          :key=\"index\"\n          :value=\"item\"\n          :to=\"item.url\"\n          @click=\"updateSidebar\"\n        >\n          <v-list-item-title v-text=\"item.title\"></v-list-item-title>\n          <template v-slot:prepend>\n            <v-icon :icon=\"item.icon\"></v-icon>\n          </template>\n        </v-list-item>\n      </v-list>\n    </v-card>\n  </div>\n</template>\n<script>\nimport { useTheme } from \"vuetify\";\nimport { mapState } from \"vuex\";\nimport store from \"@/store\";\n\nexport default {\n  name: \"NavigationComponent\",\n  data() {\n    return {\n      sidebar: true,\n      theme: useTheme(),\n      darkMode: false,\n      sidebarItems: [\n        { title: \"Home\", url: \"/\", icon: \"mdi-home-outline\" },\n        { title: \"Settings\", url: \"settings\", icon: \"mdi-cog-outline\" },\n        { title: \"Register\", url: \"register\", icon: \"mdi-account-plus\" },\n        { title: \"Login\", url: \"login\", icon: \"mdi-login\" },\n        { title: \"About\", url: \"about\", icon: \"mdi-information-outline\" },\n      ],\n    };\n  },\n  methods: {\n    changeTheme() {\n      this.darkMode = !this.darkMode;\n      this.theme.global.name = this.darkMode ? \"darkMode\" : \"lightMode\";\n    },\n    updateSidebar() {\n      store.dispatch(\"updateDrawer\", {\n        drawer: !this.drawer,\n      });\n    },\n  },\n  computed: {\n    ...mapState([\"drawer\"]),\n  },\n};\n</script>\n<style scoped>\n.sidebar {\n  position: fixed;\n  top: 64px;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  height: 100%;\n  width: 100%;\n}\n.sidebar-content {\n  background: red;\n  width: 70%;\n  height: 100%;\n}\n.sidebar-list {\n  height: 100%;\n}\n</style>\n"],"mappings":";;;;;;;SAC6BA,IAAA,CAAAC,MAAM,I,cAAjCC,mBAAA,CAiBM;IAlBRC,GAAA;IACOC,KAAK,EAAC,SAAS;IAAgBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MACtDG,YAAA,CAeSC,iBAAA;IAfDP,KAAK,EAAC;EAA2B;IAF7CQ,OAAA,EAAAC,QAAA,CAGM,MAaS,CAbTH,YAAA,CAaSI,iBAAA;MAbDC,KAAK,EAAL,EAAK;MAACX,KAAK,EAAC;;MAH1BQ,OAAA,EAAAC,QAAA,CAKU,MAAqC,E,kBADvCX,mBAAA,CAWcc,SAAA,QAftBC,WAAA,CAKkCC,KAAA,CAAAC,YAAY,EAL9C,CAKkBC,IAAI,EAAEC,KAAK;6BADrBC,YAAA,CAWcC,sBAAA;UATXpB,GAAG,EAAEkB,KAAK;UACVG,KAAK,EAAEJ,IAAI;UACXK,EAAE,EAAEL,IAAI,CAACM,GAAG;UACZrB,OAAK,EAAEG,QAAA,CAAAC;;UAGSkB,OAAO,EAAAd,QAAA,CACtB,MAAmC,CAAnCH,YAAA,CAAmCkB,iBAAA;YAA1BC,IAAI,EAAET,IAAI,CAACS;;UAbhCjB,OAAA,EAAAC,QAAA,CAWU,MAA2D,CAA3DH,YAAA,CAA2DoB,4BAAA;YAXrEC,WAAA,EAW6BC,gBAAA,CAAmBZ,IAAP,CAACa,KAAK;;UAX/CC,CAAA;;;MAAAA,CAAA;;IAAAA,CAAA;UAAAC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}