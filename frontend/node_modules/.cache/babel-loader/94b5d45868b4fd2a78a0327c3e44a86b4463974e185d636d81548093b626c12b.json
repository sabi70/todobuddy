{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_switch = _resolveComponent(\"v-switch\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return _openBlock(), _createBlock(_component_v_card, null, {\n    default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n      default: _withCtx(() => [_createVNode(_component_v_switch, {\n        label: \"Toggle between light and dark theme.\"\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_btn, {\n      onClick: _ctx.themeMode\n    }, {\n      default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"toggle\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_card","default","_withCtx","_createVNode","_component_v_card_text","_component_v_switch","label","_","_component_v_btn","onClick","_ctx","themeMode","_cache","_createTextVNode"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/views/SettingsView.vue"],"sourcesContent":["<template>\n  <v-card>\n    <v-card-text>\n      <v-switch label=\"Toggle between light and dark theme.\"></v-switch>\n    </v-card-text>\n    <v-btn @click=\"themeMode\">toggle</v-btn>\n  </v-card>\n</template>\n<script>\nimport { useTheme } from \"vuetify\";\n\nexport default {\n  name: \"SettingsView\",\n  data() {\n    return {\n      theme: useTheme(),\n      darkMode: true,\n    };\n  },\n  methods: {\n    getTheme() {\n      const themeMode = localStorage.getItem(\"theme\");\n      console.log(themeMode);\n    },\n    changeTheme() {\n      this.darkMode = !this.darkMode;\n      this.theme.global.name = this.darkMode ? \"darkMode\" : \"lightMode\";\n    },\n  },\n  computed: {},\n  mounted() {\n    localStorage.setItem(\"theme\", false);\n  },\n};\n</script>\n"],"mappings":";;;;;;uBACEA,YAAA,CAKSC,iBAAA;IANXC,OAAA,EAAAC,QAAA,CAEI,MAEc,CAFdC,YAAA,CAEcC,sBAAA;MAJlBH,OAAA,EAAAC,QAAA,CAGM,MAAkE,CAAlEC,YAAA,CAAkEE,mBAAA;QAAxDC,KAAK,EAAC;MAAsC,G;MAH5DC,CAAA;QAKIJ,YAAA,CAAwCK,gBAAA;MAAhCC,OAAK,EAAEC,IAAA,CAAAC;IAAS;MAL5BV,OAAA,EAAAC,QAAA,CAK8B,MAAMU,MAAA,QAAAA,MAAA,OALpCC,gBAAA,CAK8B,QAAM,E;MALpCN,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}