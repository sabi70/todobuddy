{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"statistic\"\n  }, \"This is a statistic page!\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.usersList, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.pk\n    }, [item.username == _ctx.$route.params.username ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_1, _toDisplayString(item), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */)), _cache[1] || (_cache[1] = _createElementVNode(\"div\", null, [_createElementVNode(\"canvas\", {\n    id: \"myDoughnutChart\"\n  })], -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","_createElementBlock","_Fragment","_createElementVNode","class","_renderList","$data","usersList","item","pk","username","_ctx","$route","params","_hoisted_1","_toDisplayString","_createCommentVNode","id"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/views/StatisticView.vue"],"sourcesContent":["<template>\n  <div class=\"statistic\">This is a statistic page!</div>\n  <div v-for=\"item in usersList\" :key=\"item.pk\">\n    <h1 v-if=\"item.username == $route.params.username\">{{ item }}</h1>\n  </div>\n  <div>\n    <canvas id=\"myDoughnutChart\"></canvas>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport BarChart from \"./components/BarChart.vue\";\n\nexport default {\n  name: \"StatisticView\",\n  data() {\n    return {\n      USERS_LIST_URL: \"http://192.168.1.115:8000/auth/users/all/\",\n      usersList: null,\n    };\n  },\n  methods: {\n    getUsers() {\n      try {\n        axios.get(this.USERS_LIST_URL).then((response) => {\n          if (response.status == 200) {\n            this.usersList = response.data;\n          }\n        });\n      } catch (err) {\n        alert(\"90\");\n      }\n    },\n  },\n  mounted() {\n    this.getUsers();\n  },\n};\n</script>\n<style></style>\n"],"mappings":";;EAAAA,GAAA;AAAA;;uBAAAC,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAAsD;IAAjDC,KAAK,EAAC;EAAW,GAAC,2BAAyB,uB,kBAChDH,mBAAA,CAEMC,SAAA,QAJRG,WAAA,CAEsBC,KAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAAhBP,mBAAA,CAEM;MAF0BD,GAAG,EAAEQ,IAAI,CAACC;QAC9BD,IAAI,CAACE,QAAQ,IAAIC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACH,QAAQ,I,cAAjDT,mBAAA,CAAkE,MAHtEa,UAAA,EAAAC,gBAAA,CAG0DP,IAAI,oBAH9DQ,mBAAA,e;4DAKEb,mBAAA,CAEM,cADJA,mBAAA,CAAsC;IAA9Bc,EAAE,EAAC;EAAiB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}