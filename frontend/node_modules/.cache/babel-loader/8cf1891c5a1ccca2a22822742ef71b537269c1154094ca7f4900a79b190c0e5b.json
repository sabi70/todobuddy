{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"d-flex align-center justify-center\"\n  }, [_createElementVNode(\"canvas\", {\n    id: \"my-chart\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($data.usernames), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","class","id","_toDisplayString","$data","usernames"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/components/DoughnutChart.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex align-center justify-center\">\n    <canvas id=\"my-chart\"></canvas>\n  </div>\n  <p>{{ usernames }}</p>\n</template>\n<script>\nimport { Chart } from \"chart.js/auto\";\nimport { onMounted } from \"vue\";\n\nexport default {\n  name: \"DoughnutChart\",\n  data() {\n    return {\n      usernames: [],\n      taskSum: [],\n    };\n  },\n  setup() {\n    onMounted(() => {\n      const ctx = document.getElementById(\"my-chart\").getContext(\"2d\");\n      new Chart(ctx, {\n        type: \"doughnut\",\n        data: {\n          labels: [\"this.usernames\"],\n          datasets: [\n            {\n              label: \"Task Activity Statistics: \",\n              data: [\"this.taskSum\"],\n              labels: [\"this.usernames\"],\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: \"bottom\",\n            },\n            title: {\n              display: true,\n              text: \"The activity of all users: \",\n            },\n            tooltip: {\n              callbacks: {\n                label: function (tooltipItem) {\n                  const dataIndex = tooltipItem.dataIndex;\n                  const dataset = tooltipItem.dataset;\n                  return (\n                    dataset.labels[dataIndex] + \":\" + dataset.data[dataIndex]\n                  );\n                },\n              },\n            },\n          },\n        },\n      });\n    });\n  },\n};\n</script>\n<style>\ncanvas {\n  width: auto;\n  height: auto;\n}\n</style>\n"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAEM;IAFDC,KAAK,EAAC;EAAoC,IAC7CD,mBAAA,CAA+B;IAAvBE,EAAE,EAAC;EAAU,G,sBAEvBF,mBAAA,CAAsB,WAAAG,gBAAA,CAAhBC,KAAA,CAAAC,SAAS,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}