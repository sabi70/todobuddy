{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  id: \"sidebar\",\n  class: \"elevation-5 overflow-auto bg-white\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_expansion_panel_title = _resolveComponent(\"v-expansion-panel-title\");\n  const _component_v_expansion_panel_text = _resolveComponent(\"v-expansion-panel-text\");\n  const _component_v_expansion_panel = _resolveComponent(\"v-expansion-panel\");\n  const _component_v_expansion_panels = _resolveComponent(\"v-expansion-panels\");\n  const _component_v_slide_y_transition = _resolveComponent(\"v-slide-y-transition\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.userURL), 1 /* TEXT */), _createVNode(_component_v_slide_y_transition, null, {\n    default: _withCtx(() => [_withDirectives(_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_list, {\n      dense: \"\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sidebarItems, (item, index) => {\n        return _openBlock(), _createBlock(_component_v_list_item, {\n          key: index,\n          value: item,\n          to: item.url,\n          onClick: $options.sidebarRoute\n        }, {\n          prepend: _withCtx(() => [_createVNode(_component_v_icon, {\n            icon: item.icon\n          }, null, 8 /* PROPS */, [\"icon\"])]),\n          default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n            textContent: _toDisplayString(item.title)\n          }, null, 8 /* PROPS */, [\"textContent\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"to\", \"onClick\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }), $options.windowWidth > 992 ? (_openBlock(), _createBlock(_component_v_divider, {\n      key: 0,\n      class: \"pa-2\"\n    })) : _createCommentVNode(\"v-if\", true), $options.windowWidth > 992 ? (_openBlock(), _createBlock(_component_v_expansion_panels, {\n      key: 1,\n      variant: \"inset\",\n      class: \"pb-10\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_expansion_panel, {\n        modelValue: _ctx.panel,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.panel = $event)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n          default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"Users\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_expansion_panel_text, null, {\n          default: _withCtx(() => [_createVNode(_component_v_list, null, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.usersList, (item, index) => {\n              return _openBlock(), _createBlock(_component_v_list_item, {\n                variant: \"plain\",\n                key: index,\n                value: item.username,\n                \"append-icon\": \"mdi-arrow-right\",\n                onClick: $event => $options.goToUser(item.username)\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.username), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"onClick\"]);\n            }), 128 /* KEYED_FRAGMENT */))]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), [[_vShow, _ctx.drawer]])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_Fragment","_createElementVNode","_toDisplayString","_ctx","userURL","_createVNode","_component_v_slide_y_transition","default","_withCtx","_hoisted_1","_component_v_list","dense","_renderList","$data","sidebarItems","item","index","_createBlock","_component_v_list_item","key","value","to","url","onClick","$options","sidebarRoute","prepend","_component_v_icon","icon","_component_v_list_item_title","textContent","title","_","windowWidth","_component_v_divider","_createCommentVNode","_component_v_expansion_panels","variant","_component_v_expansion_panel","modelValue","panel","_cache","$event","_component_v_expansion_panel_title","_createTextVNode","_component_v_expansion_panel_text","usersList","username","goToUser","drawer"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/components/NavigationDrawer.vue"],"sourcesContent":["<template>\n  <p>{{ userURL }}</p>\n  <v-slide-y-transition>\n    <div\n      v-show=\"drawer\"\n      id=\"sidebar\"\n      class=\"elevation-5 overflow-auto bg-white\"\n    >\n      <v-list dense>\n        <v-list-item\n          v-for=\"(item, index) in sidebarItems\"\n          :key=\"index\"\n          :value=\"item\"\n          :to=\"item.url\"\n          @click=\"sidebarRoute\"\n        >\n          <v-list-item-title v-text=\"item.title\"></v-list-item-title>\n          <template v-slot:prepend>\n            <v-icon :icon=\"item.icon\"></v-icon>\n          </template>\n        </v-list-item>\n      </v-list>\n      <v-divider class=\"pa-2\" v-if=\"windowWidth > 992\"></v-divider>\n      <v-expansion-panels\n        variant=\"inset\"\n        class=\"pb-10\"\n        v-if=\"windowWidth > 992\"\n      >\n        <v-expansion-panel v-model=\"panel\">\n          <v-expansion-panel-title>Users</v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <v-list>\n              <v-list-item\n                variant=\"plain\"\n                v-for=\"(item, index) in usersList\"\n                :key=\"index\"\n                :value=\"item.username\"\n                append-icon=\"mdi-arrow-right\"\n                @click=\"goToUser(item.username)\"\n              >\n                <v-list-item-title>{{ item.username }}</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-expansion-panel-text>\n        </v-expansion-panel>\n      </v-expansion-panels>\n    </div>\n  </v-slide-y-transition>\n</template>\n<script>\nimport { useTheme } from \"vuetify\";\nimport { mapState } from \"vuex\";\nimport store from \"@/store\";\nimport axios from \"axios\";\n\nexport default {\n  userURL: \"statistic/${this.username}\",\n  name: \"NavigationComponent\",\n  data() {\n    return {\n      USERS_LIST_URL: \"http://192.168.1.115:8000/auth/users/all/\",\n      usersList: null,\n      sidebar: true,\n      theme: useTheme(),\n      darkMode: false,\n      sidebarItems: [\n        { title: \"Home\", url: \"/\", icon: \"mdi-home-outline\" },\n        { title: \"Settings\", url: \"settings\", icon: \"mdi-cog-outline\" },\n        { title: \"Register\", url: \"register\", icon: \"mdi-account-plus\" },\n        { title: \"Login\", url: \"login\", icon: \"mdi-login\" },\n        { title: \"Statistic\", url: \"statistic\", icon: \"mdi-progress\" },\n        { title: \"About\", url: \"about\", icon: \"mdi-information-outline\" },\n      ],\n    };\n  },\n  methods: {\n    /* !!! COMPLETE THIS LATER */\n    /* YOU HAVE NOT ADDED THE TOGGLE SWITCH TO YOUR FRONTEND */\n    changeTheme() {\n      this.darkMode = !this.darkMode;\n      this.theme.global.name = this.darkMode ? \"darkMode\" : \"lightMode\";\n    },\n    emptyFunction() {},\n    /* Updating sidebar variable in vuex storage */\n    updateSidebar() {\n      store.dispatch(\"updateDrawer\", {\n        drawer: !this.drawer,\n      });\n    },\n    sidebarRoute() {\n      if (this.windowWidth > 992) {\n        null;\n      } else {\n        this.updateSidebar();\n      }\n    },\n    /* Getting users list from backend */\n    async getUsers() {\n      try {\n        const response = await axios.get(this.USERS_LIST_URL);\n        if (response.status == 200) {\n          this.usersList = response.data;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    /* Function that is allow us to route between users statistic pages */\n    goToUser(username) {\n      this.$router.push({ name: \"statistic\", params: { username } });\n    },\n  },\n  computed: {\n    /* Mapping the  data from vuex storage */\n    ...mapState([\"drawer\"]),\n    windowWidth() {\n      return this.$vuetify.display.width;\n    },\n    username() {\n      return this.$cookies.get(\"user\");\n    },\n  },\n  async mounted() {\n    await this.getUsers();\n  },\n};\n</script>\n<style scoped>\n@media screen and (max-width: 600px) {\n  #sidebar {\n    position: fixed;\n    top: 64px;\n    width: 100%;\n  }\n}\n@media screen and (max-width: 768px) {\n  #sidebar {\n    position: fixed;\n    top: 64px;\n    width: 100%;\n  }\n}\n@media screen and (min-width: 992px) {\n  #sidebar {\n    position: fixed;\n    top: 64px;\n    width: 250px;\n    height: 100%;\n    padding-bottom: 50px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}