{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"sidebar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.drawer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n    class: \"sidebar-content\"\n  }, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"Home\"), _createElementVNode(\"li\", null, \"Home\"), _createElementVNode(\"li\", null, \"Home\"), _createElementVNode(\"li\", null, \"Home\")])], -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_ctx","drawer","_createElementBlock","_hoisted_1","_cache","_createElementVNode","_createCommentVNode"],"sources":["/home/sabi/Desktop/ToDo/frontend/todo/src/components/NavigationDrawer.vue"],"sourcesContent":["<template>\n  <div class=\"sidebar\" v-if=\"drawer\">\n    <div class=\"sidebar-content\">\n      <ul>\n        <li>Home</li>\n        <li>Home</li>\n        <li>Home</li>\n        <li>Home</li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nimport { useTheme } from \"vuetify\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"NavigationComponent\",\n  data() {\n    return {\n      sidebar: true,\n      theme: useTheme(),\n      darkMode: false,\n      sidebarItems: [\n        { title: \"Home\", url: \"/\", icon: \"mdi-home-outline\" },\n        { title: \"Settings\", url: \"settings\", icon: \"mdi-cog-outline\" },\n        { title: \"Register\", url: \"register\", icon: \"mdi-account-plus\" },\n        { title: \"Login\", url: \"login\", icon: \"mdi-login\" },\n        { title: \"About\", url: \"about\", icon: \"mdi-information-outline\" },\n      ],\n    };\n  },\n  methods: {\n    changeTheme() {\n      this.darkMode = !this.darkMode;\n      this.theme.global.name = this.darkMode ? \"darkMode\" : \"lightMode\";\n    },\n  },\n  computed: {\n    ...mapState([\"drawer\"]),\n  },\n};\n</script>\n<style scoped>\n.sidebar {\n  width: 100%;\n  height: 100%;\n  background-color: #52229e;\n  color: white;\n  top: 0;\n  left: 0;\n  position: fixed;\n}\n</style>\n"],"mappings":";;EAAAA,GAAA;EACOC,KAAK,EAAC;;;SAAgBC,IAAA,CAAAC,MAAM,I,cAAjCC,mBAAA,CASM,OATNC,UASM,EAAAC,MAAA,QAAAA,MAAA,OARJC,mBAAA,CAOM;IAPDN,KAAK,EAAC;EAAiB,IAC1BM,mBAAA,CAKK,aAJHA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAa,YAAT,MAAI,E,4BAPhBC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}